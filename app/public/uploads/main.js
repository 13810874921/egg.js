!function e(t, i, n) {
    function r(o, s) {
        if (!i[o]) {
            if (!t[o]) {
                var l = "function" == typeof require && require;
                if (!s && l)
                    return l(o, !0);
                if (a)
                    return a(o, !0);
                var c = new Error("Cannot find module '" + o + "'");
                throw c.code = "MODULE_NOT_FOUND",
                c
            }
            var h = i[o] = {
                exports: {}
            };
            t[o][0].call(h.exports, function(e) {
                var i = t[o][1][e];
                return r(i ? i : e)
            }, h, h.exports, e, t, i, n)
        }
        return i[o].exports
    }
    for (var a = "function" == typeof require && require, o = 0; o < n.length; o++)
        r(n[o]);
    return r
}({
    1: [function(e) {
        "use strict";
        function t(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        var i = e("dom-css")
          , n = (t(i),
        e("gsap"))
          , r = (t(n),
        e("./App"))
          , a = t(r);
        document.addEventListener("DOMContentLoaded", function() {
            a.default.load()
        })
    }
    , {
        "./App": 23,
        "dom-css": 55,
        gsap: 6
    }],
    2: [function(e, t) {
        "use strict";
        function i(e, t) {
            return function() {
                return e.apply(t, arguments)
            }
        }
        var n = Object.prototype.toString
          , r = Object.prototype.hasOwnProperty;
        t.exports = function(e) {
            if (!e)
                return console.warn("bindAll requires at least one argument.");
            var t = Array.prototype.slice.call(arguments, 1);
            if (0 === t.length)
                for (var a in e)
                    r.call(e, a) && "function" == typeof e[a] && "[object Function]" == n.call(e[a]) && t.push(a);
            for (var o = 0; o < t.length; o++) {
                var s = t[o];
                e[s] = i(e[s], e)
            }
        }
    }
    , {}],
    3: [function(e, t) {
        !function(e) {
            "use strict";
            var i = function(e, t) {
                var n = /[^\w\-.:]/.test(e) ? new Function(i.arg + ",tmpl","var _e=tmpl.encode" + i.helper + ",_s='" + e.replace(i.regexp, i.func) + "';return _s;") : i.cache[e] = i.cache[e] || i(i.load(e));
                return t ? n(t, i) : function(e) {
                    return n(e, i)
                }
            };
            i.cache = {},
            i.load = function(e) {
                return document.getElementById(e).innerHTML
            }
            ,
            i.regexp = /([\s'\\])(?!(?:[^{]|\{(?!%))*%\})|(?:\{%(=|#)([\s\S]+?)%\})|(\{%)|(%\})/g,
            i.func = function(e, t, i, n, r, a) {
                return t ? {
                    "\n": "\\n",
                    "\r": "\\r",
                    "	": "\\t",
                    " ": " "
                }[t] || "\\" + t : i ? "=" === i ? "'+_e(" + n + ")+'" : "'+(" + n + "==null?'':" + n + ")+'" : r ? "';" : a ? "_s+='" : void 0
            }
            ,
            i.encReg = /[<>&"'\x00]/g,
            i.encMap = {
                "<": "&lt;",
                ">": "&gt;",
                "&": "&amp;",
                '"': "&quot;",
                "'": "&#39;"
            },
            i.encode = function(e) {
                return (null == e ? "" : "" + e).replace(i.encReg, function(e) {
                    return i.encMap[e] || ""
                })
            }
            ,
            i.arg = "o",
            i.helper = ",print=function(s,e){_s+=e?(s==null?'':s):_e(s);},include=function(s,d){_s+=tmpl(s,d);}",
            "function" == typeof define && define.amd ? define(function() {
                return i
            }) : "object" == typeof t && t.exports ? t.exports = i : e.tmpl = i
        }(this)
    }
    , {}],
    4: [function(e, t) {
        function i() {
            this._events = this._events || {},
            this._maxListeners = this._maxListeners || void 0
        }
        function n(e) {
            return "function" == typeof e
        }
        function r(e) {
            return "number" == typeof e
        }
        function a(e) {
            return "object" == typeof e && null !== e
        }
        function o(e) {
            return void 0 === e
        }
        t.exports = i,
        i.EventEmitter = i,
        i.prototype._events = void 0,
        i.prototype._maxListeners = void 0,
        i.defaultMaxListeners = 10,
        i.prototype.setMaxListeners = function(e) {
            if (!r(e) || 0 > e || isNaN(e))
                throw TypeError("n must be a positive number");
            return this._maxListeners = e,
            this
        }
        ,
        i.prototype.emit = function(e) {
            var t, i, r, s, l, c;
            if (this._events || (this._events = {}),
            "error" === e && (!this._events.error || a(this._events.error) && !this._events.error.length)) {
                if (t = arguments[1],
                t instanceof Error)
                    throw t;
                throw TypeError('Uncaught, unspecified "error" event.')
            }
            if (i = this._events[e],
            o(i))
                return !1;
            if (n(i))
                switch (arguments.length) {
                case 1:
                    i.call(this);
                    break;
                case 2:
                    i.call(this, arguments[1]);
                    break;
                case 3:
                    i.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    for (r = arguments.length,
                    s = new Array(r - 1),
                    l = 1; r > l; l++)
                        s[l - 1] = arguments[l];
                    i.apply(this, s)
                }
            else if (a(i)) {
                for (r = arguments.length,
                s = new Array(r - 1),
                l = 1; r > l; l++)
                    s[l - 1] = arguments[l];
                for (c = i.slice(),
                r = c.length,
                l = 0; r > l; l++)
                    c[l].apply(this, s)
            }
            return !0
        }
        ,
        i.prototype.addListener = function(e, t) {
            var r;
            if (!n(t))
                throw TypeError("listener must be a function");
            if (this._events || (this._events = {}),
            this._events.newListener && this.emit("newListener", e, n(t.listener) ? t.listener : t),
            this._events[e] ? a(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t,
            a(this._events[e]) && !this._events[e].warned) {
                var r;
                r = o(this._maxListeners) ? i.defaultMaxListeners : this._maxListeners,
                r && r > 0 && this._events[e].length > r && (this._events[e].warned = !0,
                console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length),
                "function" == typeof console.trace && console.trace())
            }
            return this
        }
        ,
        i.prototype.on = i.prototype.addListener,
        i.prototype.once = function(e, t) {
            function i() {
                this.removeListener(e, i),
                r || (r = !0,
                t.apply(this, arguments))
            }
            if (!n(t))
                throw TypeError("listener must be a function");
            var r = !1;
            return i.listener = t,
            this.on(e, i),
            this
        }
        ,
        i.prototype.removeListener = function(e, t) {
            var i, r, o, s;
            if (!n(t))
                throw TypeError("listener must be a function");
            if (!this._events || !this._events[e])
                return this;
            if (i = this._events[e],
            o = i.length,
            r = -1,
            i === t || n(i.listener) && i.listener === t)
                delete this._events[e],
                this._events.removeListener && this.emit("removeListener", e, t);
            else if (a(i)) {
                for (s = o; s-- > 0; )
                    if (i[s] === t || i[s].listener && i[s].listener === t) {
                        r = s;
                        break
                    }
                if (0 > r)
                    return this;
                1 === i.length ? (i.length = 0,
                delete this._events[e]) : i.splice(r, 1),
                this._events.removeListener && this.emit("removeListener", e, t)
            }
            return this
        }
        ,
        i.prototype.removeAllListeners = function(e) {
            var t, i;
            if (!this._events)
                return this;
            if (!this._events.removeListener)
                return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e],
                this;
            if (0 === arguments.length) {
                for (t in this._events)
                    "removeListener" !== t && this.removeAllListeners(t);
                return this.removeAllListeners("removeListener"),
                this._events = {},
                this
            }
            if (i = this._events[e],
            n(i))
                this.removeListener(e, i);
            else
                for (; i.length; )
                    this.removeListener(e, i[i.length - 1]);
            return delete this._events[e],
            this
        }
        ,
        i.prototype.listeners = function(e) {
            var t;
            return t = this._events && this._events[e] ? n(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []
        }
        ,
        i.listenerCount = function(e, t) {
            var i;
            return i = e._events && e._events[t] ? n(e._events[t]) ? 1 : e._events[t].length : 0
        }
    }
    , {}],
    5: [function(e, t) {
        t.exports = function(e) {
            "string" == typeof e && (e = [e]);
            for (var t = [].slice.call(arguments, 1), i = [], n = 0; n < e.length - 1; n++)
                i.push(e[n], t[n] || "");
            return i.push(e[n]),
            i.join("")
        }
    }
    , {}],
    6: [function(e, t) {
        (function(e) {
            var i = "undefined" != typeof t && t.exports && "undefined" != typeof e ? e : this || window;
            (i._gsQueue || (i._gsQueue = [])).push(function() {
                "use strict";
                i._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(e, t, i) {
                    var n = function(e) {
                        var t, i = [], n = e.length;
                        for (t = 0; t !== n; i.push(e[t++]))
                            ;
                        return i
                    }
                      , r = function(e, t, i) {
                        var n, r, a = e.cycle;
                        for (n in a)
                            r = a[n],
                            e[n] = "function" == typeof r ? r(i, t[i]) : r[i % r.length];
                        delete e.cycle
                    }
                      , a = function(e, t, n) {
                        i.call(this, e, t, n),
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0 || !!this.vars.yoyoEase,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._repeat && this._uncache(!0),
                        this.render = a.prototype.render
                    }
                      , o = 1e-10
                      , s = i._internals
                      , l = s.isSelector
                      , c = s.isArray
                      , h = a.prototype = i.to({}, .1, {})
                      , u = [];
                    a.version = "1.20.3",
                    h.constructor = a,
                    h.kill()._gc = !1,
                    a.killTweensOf = a.killDelayedCallsTo = i.killTweensOf,
                    a.getTweensOf = i.getTweensOf,
                    a.lagSmoothing = i.lagSmoothing,
                    a.ticker = i.ticker,
                    a.render = i.render,
                    h.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0 || !!this.vars.yoyoEase,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._yoyoEase = null,
                        this._uncache(!0),
                        i.prototype.invalidate.call(this)
                    }
                    ,
                    h.updateTo = function(e, t) {
                        var n, r = this.ratio, a = this.vars.immediateRender || e.immediateRender;
                        t && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                        this._uncache(!1),
                        this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                        for (n in e)
                            this.vars[n] = e[n];
                        if (this._initted || a)
                            if (t)
                                this._initted = !1,
                                a && this.render(0, !0, !0);
                            else if (this._gc && this._enabled(!0, !1),
                            this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this),
                            this._time / this._duration > .998) {
                                var o = this._totalTime;
                                this.render(0, !0, !1),
                                this._initted = !1,
                                this.render(o, !0, !1)
                            } else if (this._initted = !1,
                            this._init(),
                            this._time > 0 || a)
                                for (var s, l = 1 / (1 - r), c = this._firstPT; c; )
                                    s = c.s + c.c,
                                    c.c *= l,
                                    c.s = s - c.c,
                                    c = c._next;
                        return this
                    }
                    ,
                    h.render = function(e, t, n) {
                        this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                        var r, a, l, c, h, u, d, p, f, m = this._dirty ? this.totalDuration() : this._totalDuration, v = this._time, g = this._totalTime, y = this._cycle, _ = this._duration, x = this._rawPrevTime;
                        if (e >= m - 1e-7 && e >= 0 ? (this._totalTime = m,
                        this._cycle = this._repeat,
                        this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = _,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                        this._reversed || (r = !0,
                        a = "onComplete",
                        n = n || this._timeline.autoRemoveChildren),
                        0 === _ && (this._initted || !this.vars.lazy || n) && (this._startTime === this._timeline._duration && (e = 0),
                        (0 > x || 0 >= e && e >= -1e-7 || x === o && "isPause" !== this.data) && x !== e && (n = !0,
                        x > o && (a = "onReverseComplete")),
                        this._rawPrevTime = p = !t || e || x === e ? e : o)) : 1e-7 > e ? (this._totalTime = this._time = this._cycle = 0,
                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                        (0 !== g || 0 === _ && x > 0) && (a = "onReverseComplete",
                        r = this._reversed),
                        0 > e && (this._active = !1,
                        0 === _ && (this._initted || !this.vars.lazy || n) && (x >= 0 && (n = !0),
                        this._rawPrevTime = p = !t || e || x === e ? e : o)),
                        this._initted || (n = !0)) : (this._totalTime = this._time = e,
                        0 !== this._repeat && (c = _ + this._repeatDelay,
                        this._cycle = this._totalTime / c >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / c && e >= g && this._cycle--,
                        this._time = this._totalTime - this._cycle * c,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = _ - this._time,
                        f = this._yoyoEase || this.vars.yoyoEase,
                        f && (this._yoyoEase || (f !== !0 || this._initted ? this._yoyoEase = f = f === !0 ? this._ease : f instanceof Ease ? f : Ease.map[f] : (f = this.vars.ease,
                        this._yoyoEase = f = f ? f instanceof Ease ? f : "function" == typeof f ? new Ease(f,this.vars.easeParams) : Ease.map[f] || i.defaultEase : i.defaultEase)),
                        this.ratio = f ? 1 - f.getRatio((_ - this._time) / _) : 0)),
                        this._time > _ ? this._time = _ : this._time < 0 && (this._time = 0)),
                        this._easeType && !f ? (h = this._time / _,
                        u = this._easeType,
                        d = this._easePower,
                        (1 === u || 3 === u && h >= .5) && (h = 1 - h),
                        3 === u && (h *= 2),
                        1 === d ? h *= h : 2 === d ? h *= h * h : 3 === d ? h *= h * h * h : 4 === d && (h *= h * h * h * h),
                        this.ratio = 1 === u ? 1 - h : 2 === u ? h : this._time / _ < .5 ? h / 2 : 1 - h / 2) : f || (this.ratio = this._ease.getRatio(this._time / _))),
                        v === this._time && !n && y === this._cycle)
                            return void (g !== this._totalTime && this._onUpdate && (t || this._callback("onUpdate")));
                        if (!this._initted) {
                            if (this._init(),
                            !this._initted || this._gc)
                                return;
                            if (!n && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                return this._time = v,
                                this._totalTime = g,
                                this._rawPrevTime = x,
                                this._cycle = y,
                                s.lazyTweens.push(this),
                                void (this._lazy = [e, t]);
                            !this._time || r || f ? r && this._ease._calcEnd && !f && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : this.ratio = this._ease.getRatio(this._time / _)
                        }
                        for (this._lazy !== !1 && (this._lazy = !1),
                        this._active || !this._paused && this._time !== v && e >= 0 && (this._active = !0),
                        0 === g && (2 === this._initted && e > 0 && this._init(),
                        this._startAt && (e >= 0 ? this._startAt.render(e, !0, n) : a || (a = "_dummyGS")),
                        this.vars.onStart && (0 !== this._totalTime || 0 === _) && (t || this._callback("onStart"))),
                        l = this._firstPT; l; )
                            l.f ? l.t[l.p](l.c * this.ratio + l.s) : l.t[l.p] = l.c * this.ratio + l.s,
                            l = l._next;
                        this._onUpdate && (0 > e && this._startAt && this._startTime && this._startAt.render(e, !0, n),
                        t || (this._totalTime !== g || a) && this._callback("onUpdate")),
                        this._cycle !== y && (t || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                        a && (!this._gc || n) && (0 > e && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(e, !0, n),
                        r && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !t && this.vars[a] && this._callback(a),
                        0 === _ && this._rawPrevTime === o && p !== o && (this._rawPrevTime = 0))
                    }
                    ,
                    a.to = function(e, t, i) {
                        return new a(e,t,i)
                    }
                    ,
                    a.from = function(e, t, i) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        new a(e,t,i)
                    }
                    ,
                    a.fromTo = function(e, t, i, n) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        new a(e,t,n)
                    }
                    ,
                    a.staggerTo = a.allTo = function(e, t, o, s, h, d, p) {
                        s = s || 0;
                        var f, m, v, g, y = 0, _ = [], x = function() {
                            o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments),
                            h.apply(p || o.callbackScope || this, d || u)
                        }, b = o.cycle, w = o.startAt && o.startAt.cycle;
                        for (c(e) || ("string" == typeof e && (e = i.selector(e) || e),
                        l(e) && (e = n(e))),
                        e = e || [],
                        0 > s && (e = n(e),
                        e.reverse(),
                        s *= -1),
                        f = e.length - 1,
                        v = 0; f >= v; v++) {
                            m = {};
                            for (g in o)
                                m[g] = o[g];
                            if (b && (r(m, e, v),
                            null != m.duration && (t = m.duration,
                            delete m.duration)),
                            w) {
                                w = m.startAt = {};
                                for (g in o.startAt)
                                    w[g] = o.startAt[g];
                                r(m.startAt, e, v)
                            }
                            m.delay = y + (m.delay || 0),
                            v === f && h && (m.onComplete = x),
                            _[v] = new a(e[v],t,m),
                            y += s
                        }
                        return _
                    }
                    ,
                    a.staggerFrom = a.allFrom = function(e, t, i, n, r, o, s) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        a.staggerTo(e, t, i, n, r, o, s)
                    }
                    ,
                    a.staggerFromTo = a.allFromTo = function(e, t, i, n, r, o, s, l) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        a.staggerTo(e, t, n, r, o, s, l)
                    }
                    ,
                    a.delayedCall = function(e, t, i, n, r) {
                        return new a(t,0,{
                            delay: e,
                            onComplete: t,
                            onCompleteParams: i,
                            callbackScope: n,
                            onReverseComplete: t,
                            onReverseCompleteParams: i,
                            immediateRender: !1,
                            useFrames: r,
                            overwrite: 0
                        })
                    }
                    ,
                    a.set = function(e, t) {
                        return new a(e,0,t)
                    }
                    ,
                    a.isTweening = function(e) {
                        return i.getTweensOf(e, !0).length > 0
                    }
                    ;
                    var d = function(e, t) {
                        for (var n = [], r = 0, a = e._first; a; )
                            a instanceof i ? n[r++] = a : (t && (n[r++] = a),
                            n = n.concat(d(a, t)),
                            r = n.length),
                            a = a._next;
                        return n
                    }
                      , p = a.getAllTweens = function(t) {
                        return d(e._rootTimeline, t).concat(d(e._rootFramesTimeline, t))
                    }
                    ;
                    a.killAll = function(e, i, n, r) {
                        null == i && (i = !0),
                        null == n && (n = !0);
                        var a, o, s, l = p(0 != r), c = l.length, h = i && n && r;
                        for (s = 0; c > s; s++)
                            o = l[s],
                            (h || o instanceof t || (a = o.target === o.vars.onComplete) && n || i && !a) && (e ? o.totalTime(o._reversed ? 0 : o.totalDuration()) : o._enabled(!1, !1))
                    }
                    ,
                    a.killChildTweensOf = function(e, t) {
                        if (null != e) {
                            var r, o, h, u, d, p = s.tweenLookup;
                            if ("string" == typeof e && (e = i.selector(e) || e),
                            l(e) && (e = n(e)),
                            c(e))
                                for (u = e.length; --u > -1; )
                                    a.killChildTweensOf(e[u], t);
                            else {
                                r = [];
                                for (h in p)
                                    for (o = p[h].target.parentNode; o; )
                                        o === e && (r = r.concat(p[h].tweens)),
                                        o = o.parentNode;
                                for (d = r.length,
                                u = 0; d > u; u++)
                                    t && r[u].totalTime(r[u].totalDuration()),
                                    r[u]._enabled(!1, !1)
                            }
                        }
                    }
                    ;
                    var f = function(e, i, n, r) {
                        i = i !== !1,
                        n = n !== !1,
                        r = r !== !1;
                        for (var a, o, s = p(r), l = i && n && r, c = s.length; --c > -1; )
                            o = s[c],
                            (l || o instanceof t || (a = o.target === o.vars.onComplete) && n || i && !a) && o.paused(e)
                    };
                    return a.pauseAll = function(e, t, i) {
                        f(!0, e, t, i)
                    }
                    ,
                    a.resumeAll = function(e, t, i) {
                        f(!1, e, t, i)
                    }
                    ,
                    a.globalTimeScale = function(t) {
                        var n = e._rootTimeline
                          , r = i.ticker.time;
                        return arguments.length ? (t = t || o,
                        n._startTime = r - (r - n._startTime) * n._timeScale / t,
                        n = e._rootFramesTimeline,
                        r = i.ticker.frame,
                        n._startTime = r - (r - n._startTime) * n._timeScale / t,
                        n._timeScale = e._rootTimeline._timeScale = t,
                        t) : n._timeScale
                    }
                    ,
                    h.progress = function(e, t) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - e : e) + this._cycle * (this._duration + this._repeatDelay), t) : this._time / this.duration()
                    }
                    ,
                    h.totalProgress = function(e, t) {
                        return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this._totalTime / this.totalDuration()
                    }
                    ,
                    h.time = function(e, t) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        e > this._duration && (e = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? e = this._duration - e + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(e, t)) : this._time
                    }
                    ,
                    h.duration = function(t) {
                        return arguments.length ? e.prototype.duration.call(this, t) : this._duration
                    }
                    ,
                    h.totalDuration = function(e) {
                        return arguments.length ? -1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                        this._dirty = !1),
                        this._totalDuration)
                    }
                    ,
                    h.repeat = function(e) {
                        return arguments.length ? (this._repeat = e,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    h.repeatDelay = function(e) {
                        return arguments.length ? (this._repeatDelay = e,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    h.yoyo = function(e) {
                        return arguments.length ? (this._yoyo = e,
                        this) : this._yoyo
                    }
                    ,
                    a
                }, !0),
                i._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(e, t, n) {
                    var r = function(e) {
                        t.call(this, e),
                        this._labels = {},
                        this.autoRemoveChildren = this.vars.autoRemoveChildren === !0,
                        this.smoothChildTiming = this.vars.smoothChildTiming === !0,
                        this._sortChildren = !0,
                        this._onUpdate = this.vars.onUpdate;
                        var i, n, r = this.vars;
                        for (n in r)
                            i = r[n],
                            c(i) && -1 !== i.join("").indexOf("{self}") && (r[n] = this._swapSelfInParams(i));
                        c(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger)
                    }
                      , a = 1e-10
                      , o = n._internals
                      , s = r._internals = {}
                      , l = o.isSelector
                      , c = o.isArray
                      , h = o.lazyTweens
                      , u = o.lazyRender
                      , d = i._gsDefine.globals
                      , p = function(e) {
                        var t, i = {};
                        for (t in e)
                            i[t] = e[t];
                        return i
                    }
                      , f = function(e, t, i) {
                        var n, r, a = e.cycle;
                        for (n in a)
                            r = a[n],
                            e[n] = "function" == typeof r ? r(i, t[i]) : r[i % r.length];
                        delete e.cycle
                    }
                      , m = s.pauseCallback = function() {}
                      , v = function(e) {
                        var t, i = [], n = e.length;
                        for (t = 0; t !== n; i.push(e[t++]))
                            ;
                        return i
                    }
                      , g = r.prototype = new t;
                    return r.version = "1.20.3",
                    g.constructor = r,
                    g.kill()._gc = g._forcingPlayhead = g._hasPause = !1,
                    g.to = function(e, t, i, r) {
                        var a = i.repeat && d.TweenMax || n;
                        return t ? this.add(new a(e,t,i), r) : this.set(e, i, r)
                    }
                    ,
                    g.from = function(e, t, i, r) {
                        return this.add((i.repeat && d.TweenMax || n).from(e, t, i), r)
                    }
                    ,
                    g.fromTo = function(e, t, i, r, a) {
                        var o = r.repeat && d.TweenMax || n;
                        return t ? this.add(o.fromTo(e, t, i, r), a) : this.set(e, r, a)
                    }
                    ,
                    g.staggerTo = function(e, t, i, a, o, s, c, h) {
                        var u, d, m = new r({
                            onComplete: s,
                            onCompleteParams: c,
                            callbackScope: h,
                            smoothChildTiming: this.smoothChildTiming
                        }), g = i.cycle;
                        for ("string" == typeof e && (e = n.selector(e) || e),
                        e = e || [],
                        l(e) && (e = v(e)),
                        a = a || 0,
                        0 > a && (e = v(e),
                        e.reverse(),
                        a *= -1),
                        d = 0; d < e.length; d++)
                            u = p(i),
                            u.startAt && (u.startAt = p(u.startAt),
                            u.startAt.cycle && f(u.startAt, e, d)),
                            g && (f(u, e, d),
                            null != u.duration && (t = u.duration,
                            delete u.duration)),
                            m.to(e[d], t, u, d * a);
                        return this.add(m, o)
                    }
                    ,
                    g.staggerFrom = function(e, t, i, n, r, a, o, s) {
                        return i.immediateRender = 0 != i.immediateRender,
                        i.runBackwards = !0,
                        this.staggerTo(e, t, i, n, r, a, o, s)
                    }
                    ,
                    g.staggerFromTo = function(e, t, i, n, r, a, o, s, l) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        this.staggerTo(e, t, n, r, a, o, s, l)
                    }
                    ,
                    g.call = function(e, t, i, r) {
                        return this.add(n.delayedCall(0, e, t, i), r)
                    }
                    ,
                    g.set = function(e, t, i) {
                        return i = this._parseTimeOrLabel(i, 0, !0),
                        null == t.immediateRender && (t.immediateRender = i === this._time && !this._paused),
                        this.add(new n(e,0,t), i)
                    }
                    ,
                    r.exportRoot = function(e, t) {
                        e = e || {},
                        null == e.smoothChildTiming && (e.smoothChildTiming = !0);
                        var i, a, o, s, l = new r(e), c = l._timeline;
                        for (null == t && (t = !0),
                        c._remove(l, !0),
                        l._startTime = 0,
                        l._rawPrevTime = l._time = l._totalTime = c._time,
                        o = c._first; o; )
                            s = o._next,
                            t && o instanceof n && o.target === o.vars.onComplete || (a = o._startTime - o._delay,
                            0 > a && (i = 1),
                            l.add(o, a)),
                            o = s;
                        return c.add(l, 0),
                        i && l.totalDuration(),
                        l
                    }
                    ,
                    g.add = function(i, a, o, s) {
                        var l, h, u, d, p, f;
                        if ("number" != typeof a && (a = this._parseTimeOrLabel(a, 0, !0, i)),
                        !(i instanceof e)) {
                            if (i instanceof Array || i && i.push && c(i)) {
                                for (o = o || "normal",
                                s = s || 0,
                                l = a,
                                h = i.length,
                                u = 0; h > u; u++)
                                    c(d = i[u]) && (d = new r({
                                        tweens: d
                                    })),
                                    this.add(d, l),
                                    "string" != typeof d && "function" != typeof d && ("sequence" === o ? l = d._startTime + d.totalDuration() / d._timeScale : "start" === o && (d._startTime -= d.delay())),
                                    l += s;
                                return this._uncache(!0)
                            }
                            if ("string" == typeof i)
                                return this.addLabel(i, a);
                            if ("function" != typeof i)
                                throw "Cannot add " + i + " into the timeline; it is not a tween, timeline, function, or string.";
                            i = n.delayedCall(0, i)
                        }
                        if (t.prototype.add.call(this, i, a),
                        i._time && i.render((this.rawTime() - i._startTime) * i._timeScale, !1, !1),
                        (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                            for (p = this,
                            f = p.rawTime() > i._startTime; p._timeline; )
                                f && p._timeline.smoothChildTiming ? p.totalTime(p._totalTime, !0) : p._gc && p._enabled(!0, !1),
                                p = p._timeline;
                        return this
                    }
                    ,
                    g.remove = function(t) {
                        if (t instanceof e) {
                            this._remove(t, !1);
                            var i = t._timeline = t.vars.useFrames ? e._rootFramesTimeline : e._rootTimeline;
                            return t._startTime = (t._paused ? t._pauseTime : i._time) - (t._reversed ? t.totalDuration() - t._totalTime : t._totalTime) / t._timeScale,
                            this
                        }
                        if (t instanceof Array || t && t.push && c(t)) {
                            for (var n = t.length; --n > -1; )
                                this.remove(t[n]);
                            return this
                        }
                        return "string" == typeof t ? this.removeLabel(t) : this.kill(null, t)
                    }
                    ,
                    g._remove = function(e, i) {
                        t.prototype._remove.call(this, e, i);
                        var n = this._last;
                        return n ? this._time > this.duration() && (this._time = this._duration,
                        this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                        this
                    }
                    ,
                    g.append = function(e, t) {
                        return this.add(e, this._parseTimeOrLabel(null, t, !0, e))
                    }
                    ,
                    g.insert = g.insertMultiple = function(e, t, i, n) {
                        return this.add(e, t || 0, i, n)
                    }
                    ,
                    g.appendMultiple = function(e, t, i, n) {
                        return this.add(e, this._parseTimeOrLabel(null, t, !0, e), i, n)
                    }
                    ,
                    g.addLabel = function(e, t) {
                        return this._labels[e] = this._parseTimeOrLabel(t),
                        this
                    }
                    ,
                    g.addPause = function(e, t, i, r) {
                        var a = n.delayedCall(0, m, i, r || this);
                        return a.vars.onComplete = a.vars.onReverseComplete = t,
                        a.data = "isPause",
                        this._hasPause = !0,
                        this.add(a, e)
                    }
                    ,
                    g.removeLabel = function(e) {
                        return delete this._labels[e],
                        this
                    }
                    ,
                    g.getLabelTime = function(e) {
                        return null != this._labels[e] ? this._labels[e] : -1
                    }
                    ,
                    g._parseTimeOrLabel = function(t, i, n, r) {
                        var a, o;
                        if (r instanceof e && r.timeline === this)
                            this.remove(r);
                        else if (r && (r instanceof Array || r.push && c(r)))
                            for (o = r.length; --o > -1; )
                                r[o]instanceof e && r[o].timeline === this && this.remove(r[o]);
                        if (a = "number" != typeof t || i ? this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration : 0,
                        "string" == typeof i)
                            return this._parseTimeOrLabel(i, n && "number" == typeof t && null == this._labels[i] ? t - a : 0, n);
                        if (i = i || 0,
                        "string" != typeof t || !isNaN(t) && null == this._labels[t])
                            null == t && (t = a);
                        else {
                            if (o = t.indexOf("="),
                            -1 === o)
                                return null == this._labels[t] ? n ? this._labels[t] = a + i : i : this._labels[t] + i;
                            i = parseInt(t.charAt(o - 1) + "1", 10) * Number(t.substr(o + 1)),
                            t = o > 1 ? this._parseTimeOrLabel(t.substr(0, o - 1), 0, n) : a
                        }
                        return Number(t) + i
                    }
                    ,
                    g.seek = function(e, t) {
                        return this.totalTime("number" == typeof e ? e : this._parseTimeOrLabel(e), t !== !1)
                    }
                    ,
                    g.stop = function() {
                        return this.paused(!0)
                    }
                    ,
                    g.gotoAndPlay = function(e, t) {
                        return this.play(e, t)
                    }
                    ,
                    g.gotoAndStop = function(e, t) {
                        return this.pause(e, t)
                    }
                    ,
                    g.render = function(e, t, i) {
                        this._gc && this._enabled(!0, !1);
                        var n, r, o, s, l, c, d, p = this._time, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._startTime, v = this._timeScale, g = this._paused;
                        if (p !== this._time && (e += this._time - p),
                        e >= f - 1e-7 && e >= 0)
                            this._totalTime = this._time = f,
                            this._reversed || this._hasPausedChild() || (r = !0,
                            s = "onComplete",
                            l = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (0 >= e && e >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === a) && this._rawPrevTime !== e && this._first && (l = !0,
                            this._rawPrevTime > a && (s = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : a,
                            e = f + 1e-4;
                        else if (1e-7 > e)
                            if (this._totalTime = this._time = 0,
                            (0 !== p || 0 === this._duration && this._rawPrevTime !== a && (this._rawPrevTime > 0 || 0 > e && this._rawPrevTime >= 0)) && (s = "onReverseComplete",
                            r = this._reversed),
                            0 > e)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (l = r = !0,
                                s = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (l = !0),
                                this._rawPrevTime = e;
                            else {
                                if (this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : a,
                                0 === e && r)
                                    for (n = this._first; n && 0 === n._startTime; )
                                        n._duration || (r = !1),
                                        n = n._next;
                                e = 0,
                                this._initted || (l = !0)
                            }
                        else {
                            if (this._hasPause && !this._forcingPlayhead && !t) {
                                if (e >= p)
                                    for (n = this._first; n && n._startTime <= e && !c; )
                                        n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (c = n),
                                        n = n._next;
                                else
                                    for (n = this._last; n && n._startTime >= e && !c; )
                                        n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (c = n),
                                        n = n._prev;
                                c && (this._time = e = c._startTime,
                                this._totalTime = e + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                            this._totalTime = this._time = this._rawPrevTime = e
                        }
                        if (this._time !== p && this._first || i || l || c) {
                            if (this._initted || (this._initted = !0),
                            this._active || !this._paused && this._time !== p && e > 0 && (this._active = !0),
                            0 === p && this.vars.onStart && (0 === this._time && this._duration || t || this._callback("onStart")),
                            d = this._time,
                            d >= p)
                                for (n = this._first; n && (o = n._next,
                                d === this._time && (!this._paused || g)); )
                                    (n._active || n._startTime <= d && !n._paused && !n._gc) && (c === n && this.pause(),
                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (e - n._startTime) * n._timeScale, t, i) : n.render((e - n._startTime) * n._timeScale, t, i)),
                                    n = o;
                            else
                                for (n = this._last; n && (o = n._prev,
                                d === this._time && (!this._paused || g)); ) {
                                    if (n._active || n._startTime <= p && !n._paused && !n._gc) {
                                        if (c === n) {
                                            for (c = n._prev; c && c.endTime() > this._time; )
                                                c.render(c._reversed ? c.totalDuration() - (e - c._startTime) * c._timeScale : (e - c._startTime) * c._timeScale, t, i),
                                                c = c._prev;
                                            c = null,
                                            this.pause()
                                        }
                                        n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (e - n._startTime) * n._timeScale, t, i) : n.render((e - n._startTime) * n._timeScale, t, i)
                                    }
                                    n = o
                                }
                            this._onUpdate && (t || (h.length && u(),
                            this._callback("onUpdate"))),
                            s && (this._gc || (m === this._startTime || v !== this._timeScale) && (0 === this._time || f >= this.totalDuration()) && (r && (h.length && u(),
                            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !t && this.vars[s] && this._callback(s)))
                        }
                    }
                    ,
                    g._hasPausedChild = function() {
                        for (var e = this._first; e; ) {
                            if (e._paused || e instanceof r && e._hasPausedChild())
                                return !0;
                            e = e._next
                        }
                        return !1
                    }
                    ,
                    g.getChildren = function(e, t, i, r) {
                        r = r || -9999999999;
                        for (var a = [], o = this._first, s = 0; o; )
                            o._startTime < r || (o instanceof n ? t !== !1 && (a[s++] = o) : (i !== !1 && (a[s++] = o),
                            e !== !1 && (a = a.concat(o.getChildren(!0, t, i)),
                            s = a.length))),
                            o = o._next;
                        return a
                    }
                    ,
                    g.getTweensOf = function(e, t) {
                        var i, r, a = this._gc, o = [], s = 0;
                        for (a && this._enabled(!0, !0),
                        i = n.getTweensOf(e),
                        r = i.length; --r > -1; )
                            (i[r].timeline === this || t && this._contains(i[r])) && (o[s++] = i[r]);
                        return a && this._enabled(!1, !0),
                        o
                    }
                    ,
                    g.recent = function() {
                        return this._recent
                    }
                    ,
                    g._contains = function(e) {
                        for (var t = e.timeline; t; ) {
                            if (t === this)
                                return !0;
                            t = t.timeline
                        }
                        return !1
                    }
                    ,
                    g.shiftChildren = function(e, t, i) {
                        i = i || 0;
                        for (var n, r = this._first, a = this._labels; r; )
                            r._startTime >= i && (r._startTime += e),
                            r = r._next;
                        if (t)
                            for (n in a)
                                a[n] >= i && (a[n] += e);
                        return this._uncache(!0)
                    }
                    ,
                    g._kill = function(e, t) {
                        if (!e && !t)
                            return this._enabled(!1, !1);
                        for (var i = t ? this.getTweensOf(t) : this.getChildren(!0, !0, !1), n = i.length, r = !1; --n > -1; )
                            i[n]._kill(e, t) && (r = !0);
                        return r
                    }
                    ,
                    g.clear = function(e) {
                        var t = this.getChildren(!1, !0, !0)
                          , i = t.length;
                        for (this._time = this._totalTime = 0; --i > -1; )
                            t[i]._enabled(!1, !1);
                        return e !== !1 && (this._labels = {}),
                        this._uncache(!0)
                    }
                    ,
                    g.invalidate = function() {
                        for (var t = this._first; t; )
                            t.invalidate(),
                            t = t._next;
                        return e.prototype.invalidate.call(this)
                    }
                    ,
                    g._enabled = function(e, i) {
                        if (e === this._gc)
                            for (var n = this._first; n; )
                                n._enabled(e, !0),
                                n = n._next;
                        return t.prototype._enabled.call(this, e, i)
                    }
                    ,
                    g.totalTime = function() {
                        this._forcingPlayhead = !0;
                        var t = e.prototype.totalTime.apply(this, arguments);
                        return this._forcingPlayhead = !1,
                        t
                    }
                    ,
                    g.duration = function(e) {
                        return arguments.length ? (0 !== this.duration() && 0 !== e && this.timeScale(this._duration / e),
                        this) : (this._dirty && this.totalDuration(),
                        this._duration)
                    }
                    ,
                    g.totalDuration = function(e) {
                        if (!arguments.length) {
                            if (this._dirty) {
                                for (var t, i, n = 0, r = this._last, a = 999999999999; r; )
                                    t = r._prev,
                                    r._dirty && r.totalDuration(),
                                    r._startTime > a && this._sortChildren && !r._paused && !this._calculatingDuration ? (this._calculatingDuration = 1,
                                    this.add(r, r._startTime - r._delay),
                                    this._calculatingDuration = 0) : a = r._startTime,
                                    r._startTime < 0 && !r._paused && (n -= r._startTime,
                                    this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale,
                                    this._time -= r._startTime,
                                    this._totalTime -= r._startTime,
                                    this._rawPrevTime -= r._startTime),
                                    this.shiftChildren(-r._startTime, !1, -9999999999),
                                    a = 0),
                                    i = r._startTime + r._totalDuration / r._timeScale,
                                    i > n && (n = i),
                                    r = t;
                                this._duration = this._totalDuration = n,
                                this._dirty = !1
                            }
                            return this._totalDuration
                        }
                        return e && this.totalDuration() ? this.timeScale(this._totalDuration / e) : this
                    }
                    ,
                    g.paused = function(t) {
                        if (!t)
                            for (var i = this._first, n = this._time; i; )
                                i._startTime === n && "isPause" === i.data && (i._rawPrevTime = 0),
                                i = i._next;
                        return e.prototype.paused.apply(this, arguments)
                    }
                    ,
                    g.usesFrames = function() {
                        for (var t = this._timeline; t._timeline; )
                            t = t._timeline;
                        return t === e._rootFramesTimeline
                    }
                    ,
                    g.rawTime = function(e) {
                        return e && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(e) - this._startTime) * this._timeScale
                    }
                    ,
                    r
                }, !0),
                i._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(e, t, n) {
                    var r = function(t) {
                        e.call(this, t),
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._cycle = 0,
                        this._yoyo = this.vars.yoyo === !0,
                        this._dirty = !0
                    }
                      , a = 1e-10
                      , o = t._internals
                      , s = o.lazyTweens
                      , l = o.lazyRender
                      , c = i._gsDefine.globals
                      , h = new n(null,null,1,0)
                      , u = r.prototype = new e;
                    return u.constructor = r,
                    u.kill()._gc = !1,
                    r.version = "1.20.3",
                    u.invalidate = function() {
                        return this._yoyo = this.vars.yoyo === !0,
                        this._repeat = this.vars.repeat || 0,
                        this._repeatDelay = this.vars.repeatDelay || 0,
                        this._uncache(!0),
                        e.prototype.invalidate.call(this)
                    }
                    ,
                    u.addCallback = function(e, i, n, r) {
                        return this.add(t.delayedCall(0, e, n, r), i)
                    }
                    ,
                    u.removeCallback = function(e, t) {
                        if (e)
                            if (null == t)
                                this._kill(null, e);
                            else
                                for (var i = this.getTweensOf(e, !1), n = i.length, r = this._parseTimeOrLabel(t); --n > -1; )
                                    i[n]._startTime === r && i[n]._enabled(!1, !1);
                        return this
                    }
                    ,
                    u.removePause = function(t) {
                        return this.removeCallback(e._internals.pauseCallback, t)
                    }
                    ,
                    u.tweenTo = function(e, i) {
                        i = i || {};
                        var n, r, a, o = {
                            ease: h,
                            useFrames: this.usesFrames(),
                            immediateRender: !1
                        }, s = i.repeat && c.TweenMax || t;
                        for (r in i)
                            o[r] = i[r];
                        return o.time = this._parseTimeOrLabel(e),
                        n = Math.abs(Number(o.time) - this._time) / this._timeScale || .001,
                        a = new s(this,n,o),
                        o.onStart = function() {
                            a.target.paused(!0),
                            a.vars.time !== a.target.time() && n === a.duration() && a.duration(Math.abs(a.vars.time - a.target.time()) / a.target._timeScale),
                            i.onStart && i.onStart.apply(i.onStartScope || i.callbackScope || a, i.onStartParams || [])
                        }
                        ,
                        a
                    }
                    ,
                    u.tweenFromTo = function(e, t, i) {
                        i = i || {},
                        e = this._parseTimeOrLabel(e),
                        i.startAt = {
                            onComplete: this.seek,
                            onCompleteParams: [e],
                            callbackScope: this
                        },
                        i.immediateRender = i.immediateRender !== !1;
                        var n = this.tweenTo(t, i);
                        return n.duration(Math.abs(n.vars.time - e) / this._timeScale || .001)
                    }
                    ,
                    u.render = function(e, t, i) {
                        this._gc && this._enabled(!0, !1);
                        var n, r, o, c, h, u, d, p, f = this._time, m = this._dirty ? this.totalDuration() : this._totalDuration, v = this._duration, g = this._totalTime, y = this._startTime, _ = this._timeScale, x = this._rawPrevTime, b = this._paused, w = this._cycle;
                        if (f !== this._time && (e += this._time - f),
                        e >= m - 1e-7 && e >= 0)
                            this._locked || (this._totalTime = m,
                            this._cycle = this._repeat),
                            this._reversed || this._hasPausedChild() || (r = !0,
                            c = "onComplete",
                            h = !!this._timeline.autoRemoveChildren,
                            0 === this._duration && (0 >= e && e >= -1e-7 || 0 > x || x === a) && x !== e && this._first && (h = !0,
                            x > a && (c = "onReverseComplete"))),
                            this._rawPrevTime = this._duration || !t || e || this._rawPrevTime === e ? e : a,
                            this._yoyo && 0 !== (1 & this._cycle) ? this._time = e = 0 : (this._time = v,
                            e = v + 1e-4);
                        else if (1e-7 > e)
                            if (this._locked || (this._totalTime = this._cycle = 0),
                            this._time = 0,
                            (0 !== f || 0 === v && x !== a && (x > 0 || 0 > e && x >= 0) && !this._locked) && (c = "onReverseComplete",
                            r = this._reversed),
                            0 > e)
                                this._active = !1,
                                this._timeline.autoRemoveChildren && this._reversed ? (h = r = !0,
                                c = "onReverseComplete") : x >= 0 && this._first && (h = !0),
                                this._rawPrevTime = e;
                            else {
                                if (this._rawPrevTime = v || !t || e || this._rawPrevTime === e ? e : a,
                                0 === e && r)
                                    for (n = this._first; n && 0 === n._startTime; )
                                        n._duration || (r = !1),
                                        n = n._next;
                                e = 0,
                                this._initted || (h = !0)
                            }
                        else if (0 === v && 0 > x && (h = !0),
                        this._time = this._rawPrevTime = e,
                        this._locked || (this._totalTime = e,
                        0 !== this._repeat && (u = v + this._repeatDelay,
                        this._cycle = this._totalTime / u >> 0,
                        0 !== this._cycle && this._cycle === this._totalTime / u && e >= g && this._cycle--,
                        this._time = this._totalTime - this._cycle * u,
                        this._yoyo && 0 !== (1 & this._cycle) && (this._time = v - this._time),
                        this._time > v ? (this._time = v,
                        e = v + 1e-4) : this._time < 0 ? this._time = e = 0 : e = this._time)),
                        this._hasPause && !this._forcingPlayhead && !t) {
                            if (e = this._time,
                            e >= f || this._repeat && w !== this._cycle)
                                for (n = this._first; n && n._startTime <= e && !d; )
                                    n._duration || "isPause" !== n.data || n.ratio || 0 === n._startTime && 0 === this._rawPrevTime || (d = n),
                                    n = n._next;
                            else
                                for (n = this._last; n && n._startTime >= e && !d; )
                                    n._duration || "isPause" === n.data && n._rawPrevTime > 0 && (d = n),
                                    n = n._prev;
                            d && d._startTime < v && (this._time = e = d._startTime,
                            this._totalTime = e + this._cycle * (this._totalDuration + this._repeatDelay))
                        }
                        if (this._cycle !== w && !this._locked) {
                            var T = this._yoyo && 0 !== (1 & w)
                              , M = T === (this._yoyo && 0 !== (1 & this._cycle))
                              , E = this._totalTime
                              , S = this._cycle
                              , A = this._rawPrevTime
                              , P = this._time;
                            if (this._totalTime = w * v,
                            this._cycle < w ? T = !T : this._totalTime += v,
                            this._time = f,
                            this._rawPrevTime = 0 === v ? x - 1e-4 : x,
                            this._cycle = w,
                            this._locked = !0,
                            f = T ? 0 : v,
                            this.render(f, t, 0 === v),
                            t || this._gc || this.vars.onRepeat && (this._cycle = S,
                            this._locked = !1,
                            this._callback("onRepeat")),
                            f !== this._time)
                                return;
                            if (M && (this._cycle = w,
                            this._locked = !0,
                            f = T ? v + 1e-4 : -1e-4,
                            this.render(f, !0, !1)),
                            this._locked = !1,
                            this._paused && !b)
                                return;
                            this._time = P,
                            this._totalTime = E,
                            this._cycle = S,
                            this._rawPrevTime = A
                        }
                        if (!(this._time !== f && this._first || i || h || d))
                            return void (g !== this._totalTime && this._onUpdate && (t || this._callback("onUpdate")));
                        if (this._initted || (this._initted = !0),
                        this._active || !this._paused && this._totalTime !== g && e > 0 && (this._active = !0),
                        0 === g && this.vars.onStart && (0 === this._totalTime && this._totalDuration || t || this._callback("onStart")),
                        p = this._time,
                        p >= f)
                            for (n = this._first; n && (o = n._next,
                            p === this._time && (!this._paused || b)); )
                                (n._active || n._startTime <= this._time && !n._paused && !n._gc) && (d === n && this.pause(),
                                n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (e - n._startTime) * n._timeScale, t, i) : n.render((e - n._startTime) * n._timeScale, t, i)),
                                n = o;
                        else
                            for (n = this._last; n && (o = n._prev,
                            p === this._time && (!this._paused || b)); ) {
                                if (n._active || n._startTime <= f && !n._paused && !n._gc) {
                                    if (d === n) {
                                        for (d = n._prev; d && d.endTime() > this._time; )
                                            d.render(d._reversed ? d.totalDuration() - (e - d._startTime) * d._timeScale : (e - d._startTime) * d._timeScale, t, i),
                                            d = d._prev;
                                        d = null,
                                        this.pause()
                                    }
                                    n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (e - n._startTime) * n._timeScale, t, i) : n.render((e - n._startTime) * n._timeScale, t, i)
                                }
                                n = o
                            }
                        this._onUpdate && (t || (s.length && l(),
                        this._callback("onUpdate"))),
                        c && (this._locked || this._gc || (y === this._startTime || _ !== this._timeScale) && (0 === this._time || m >= this.totalDuration()) && (r && (s.length && l(),
                        this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                        this._active = !1),
                        !t && this.vars[c] && this._callback(c)))
                    }
                    ,
                    u.getActive = function(e, t, i) {
                        null == e && (e = !0),
                        null == t && (t = !0),
                        null == i && (i = !1);
                        var n, r, a = [], o = this.getChildren(e, t, i), s = 0, l = o.length;
                        for (n = 0; l > n; n++)
                            r = o[n],
                            r.isActive() && (a[s++] = r);
                        return a
                    }
                    ,
                    u.getLabelAfter = function(e) {
                        e || 0 !== e && (e = this._time);
                        var t, i = this.getLabelsArray(), n = i.length;
                        for (t = 0; n > t; t++)
                            if (i[t].time > e)
                                return i[t].name;
                        return null
                    }
                    ,
                    u.getLabelBefore = function(e) {
                        null == e && (e = this._time);
                        for (var t = this.getLabelsArray(), i = t.length; --i > -1; )
                            if (t[i].time < e)
                                return t[i].name;
                        return null
                    }
                    ,
                    u.getLabelsArray = function() {
                        var e, t = [], i = 0;
                        for (e in this._labels)
                            t[i++] = {
                                time: this._labels[e],
                                name: e
                            };
                        return t.sort(function(e, t) {
                            return e.time - t.time
                        }),
                        t
                    }
                    ,
                    u.invalidate = function() {
                        return this._locked = !1,
                        e.prototype.invalidate.call(this)
                    }
                    ,
                    u.progress = function(e, t) {
                        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - e : e) + this._cycle * (this._duration + this._repeatDelay), t) : this._time / this.duration() || 0
                    }
                    ,
                    u.totalProgress = function(e, t) {
                        return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this._totalTime / this.totalDuration() || 0
                    }
                    ,
                    u.totalDuration = function(t) {
                        return arguments.length ? -1 !== this._repeat && t ? this.timeScale(this.totalDuration() / t) : this : (this._dirty && (e.prototype.totalDuration.call(this),
                        this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                        this._totalDuration)
                    }
                    ,
                    u.time = function(e, t) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        e > this._duration && (e = this._duration),
                        this._yoyo && 0 !== (1 & this._cycle) ? e = this._duration - e + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (e += this._cycle * (this._duration + this._repeatDelay)),
                        this.totalTime(e, t)) : this._time
                    }
                    ,
                    u.repeat = function(e) {
                        return arguments.length ? (this._repeat = e,
                        this._uncache(!0)) : this._repeat
                    }
                    ,
                    u.repeatDelay = function(e) {
                        return arguments.length ? (this._repeatDelay = e,
                        this._uncache(!0)) : this._repeatDelay
                    }
                    ,
                    u.yoyo = function(e) {
                        return arguments.length ? (this._yoyo = e,
                        this) : this._yoyo
                    }
                    ,
                    u.currentLabel = function(e) {
                        return arguments.length ? this.seek(e, !0) : this.getLabelBefore(this._time + 1e-8)
                    }
                    ,
                    r
                }, !0),
                function() {
                    var e = 180 / Math.PI
                      , t = []
                      , n = []
                      , r = []
                      , a = {}
                      , o = i._gsDefine.globals
                      , s = function(e, t, i, n) {
                        i === n && (i = n - (n - t) / 1e6),
                        e === t && (t = e + (i - e) / 1e6),
                        this.a = e,
                        this.b = t,
                        this.c = i,
                        this.d = n,
                        this.da = n - e,
                        this.ca = i - e,
                        this.ba = t - e
                    }
                      , l = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,"
                      , c = function(e, t, i, n) {
                        var r = {
                            a: e
                        }
                          , a = {}
                          , o = {}
                          , s = {
                            c: n
                        }
                          , l = (e + t) / 2
                          , c = (t + i) / 2
                          , h = (i + n) / 2
                          , u = (l + c) / 2
                          , d = (c + h) / 2
                          , p = (d - u) / 8;
                        return r.b = l + (e - l) / 4,
                        a.b = u + p,
                        r.c = a.a = (r.b + a.b) / 2,
                        a.c = o.a = (u + d) / 2,
                        o.b = d - p,
                        s.b = h + (n - h) / 4,
                        o.c = s.a = (o.b + s.b) / 2,
                        [r, a, o, s]
                    }
                      , h = function(e, i, a, o, s) {
                        var l, h, u, d, p, f, m, v, g, y, _, x, b, w = e.length - 1, T = 0, M = e[0].a;
                        for (l = 0; w > l; l++)
                            p = e[T],
                            h = p.a,
                            u = p.d,
                            d = e[T + 1].d,
                            s ? (_ = t[l],
                            x = n[l],
                            b = (x + _) * i * .25 / (o ? .5 : r[l] || .5),
                            f = u - (u - h) * (o ? .5 * i : 0 !== _ ? b / _ : 0),
                            m = u + (d - u) * (o ? .5 * i : 0 !== x ? b / x : 0),
                            v = u - (f + ((m - f) * (3 * _ / (_ + x) + .5) / 4 || 0))) : (f = u - (u - h) * i * .5,
                            m = u + (d - u) * i * .5,
                            v = u - (f + m) / 2),
                            f += v,
                            m += v,
                            p.c = g = f,
                            p.b = 0 !== l ? M : M = p.a + .6 * (p.c - p.a),
                            p.da = u - h,
                            p.ca = g - h,
                            p.ba = M - h,
                            a ? (y = c(h, M, g, u),
                            e.splice(T, 1, y[0], y[1], y[2], y[3]),
                            T += 4) : T++,
                            M = m;
                        p = e[T],
                        p.b = M,
                        p.c = M + .4 * (p.d - M),
                        p.da = p.d - p.a,
                        p.ca = p.c - p.a,
                        p.ba = M - p.a,
                        a && (y = c(p.a, M, p.c, p.d),
                        e.splice(T, 1, y[0], y[1], y[2], y[3]))
                    }
                      , u = function(e, i, r, a) {
                        var o, l, c, h, u, d, p = [];
                        if (a)
                            for (e = [a].concat(e),
                            l = e.length; --l > -1; )
                                "string" == typeof (d = e[l][i]) && "=" === d.charAt(1) && (e[l][i] = a[i] + Number(d.charAt(0) + d.substr(2)));
                        if (o = e.length - 2,
                        0 > o)
                            return p[0] = new s(e[0][i],0,0,e[0][i]),
                            p;
                        for (l = 0; o > l; l++)
                            c = e[l][i],
                            h = e[l + 1][i],
                            p[l] = new s(c,0,0,h),
                            r && (u = e[l + 2][i],
                            t[l] = (t[l] || 0) + (h - c) * (h - c),
                            n[l] = (n[l] || 0) + (u - h) * (u - h));
                        return p[l] = new s(e[l][i],0,0,e[l + 1][i]),
                        p
                    }
                      , d = function(e, i, o, s, c, d) {
                        var p, f, m, v, g, y, _, x, b = {}, w = [], T = d || e[0];
                        c = "string" == typeof c ? "," + c + "," : l,
                        null == i && (i = 1);
                        for (f in e[0])
                            w.push(f);
                        if (e.length > 1) {
                            for (x = e[e.length - 1],
                            _ = !0,
                            p = w.length; --p > -1; )
                                if (f = w[p],
                                Math.abs(T[f] - x[f]) > .05) {
                                    _ = !1;
                                    break
                                }
                            _ && (e = e.concat(),
                            d && e.unshift(d),
                            e.push(e[1]),
                            d = e[e.length - 3])
                        }
                        for (t.length = n.length = r.length = 0,
                        p = w.length; --p > -1; )
                            f = w[p],
                            a[f] = -1 !== c.indexOf("," + f + ","),
                            b[f] = u(e, f, a[f], d);
                        for (p = t.length; --p > -1; )
                            t[p] = Math.sqrt(t[p]),
                            n[p] = Math.sqrt(n[p]);
                        if (!s) {
                            for (p = w.length; --p > -1; )
                                if (a[f])
                                    for (m = b[w[p]],
                                    y = m.length - 1,
                                    v = 0; y > v; v++)
                                        g = m[v + 1].da / n[v] + m[v].da / t[v] || 0,
                                        r[v] = (r[v] || 0) + g * g;
                            for (p = r.length; --p > -1; )
                                r[p] = Math.sqrt(r[p])
                        }
                        for (p = w.length,
                        v = o ? 4 : 1; --p > -1; )
                            f = w[p],
                            m = b[f],
                            h(m, i, o, s, a[f]),
                            _ && (m.splice(0, v),
                            m.splice(m.length - v, v));
                        return b
                    }
                      , p = function(e, t, i) {
                        t = t || "soft";
                        var n, r, a, o, l, c, h, u, d, p, f, m = {}, v = "cubic" === t ? 3 : 2, g = "soft" === t, y = [];
                        if (g && i && (e = [i].concat(e)),
                        null == e || e.length < v + 1)
                            throw "invalid Bezier data";
                        for (d in e[0])
                            y.push(d);
                        for (c = y.length; --c > -1; ) {
                            for (d = y[c],
                            m[d] = l = [],
                            p = 0,
                            u = e.length,
                            h = 0; u > h; h++)
                                n = null == i ? e[h][d] : "string" == typeof (f = e[h][d]) && "=" === f.charAt(1) ? i[d] + Number(f.charAt(0) + f.substr(2)) : Number(f),
                                g && h > 1 && u - 1 > h && (l[p++] = (n + l[p - 2]) / 2),
                                l[p++] = n;
                            for (u = p - v + 1,
                            p = 0,
                            h = 0; u > h; h += v)
                                n = l[h],
                                r = l[h + 1],
                                a = l[h + 2],
                                o = 2 === v ? 0 : l[h + 3],
                                l[p++] = f = 3 === v ? new s(n,r,a,o) : new s(n,(2 * r + n) / 3,(2 * r + a) / 3,a);
                            l.length = p
                        }
                        return m
                    }
                      , f = function(e, t, i) {
                        for (var n, r, a, o, s, l, c, h, u, d, p, f = 1 / i, m = e.length; --m > -1; )
                            for (d = e[m],
                            a = d.a,
                            o = d.d - a,
                            s = d.c - a,
                            l = d.b - a,
                            n = r = 0,
                            h = 1; i >= h; h++)
                                c = f * h,
                                u = 1 - c,
                                n = r - (r = (c * c * o + 3 * u * (c * s + u * l)) * c),
                                p = m * i + h - 1,
                                t[p] = (t[p] || 0) + n * n
                    }
                      , m = function(e, t) {
                        t = t >> 0 || 6;
                        var i, n, r, a, o = [], s = [], l = 0, c = 0, h = t - 1, u = [], d = [];
                        for (i in e)
                            f(e[i], o, t);
                        for (r = o.length,
                        n = 0; r > n; n++)
                            l += Math.sqrt(o[n]),
                            a = n % t,
                            d[a] = l,
                            a === h && (c += l,
                            a = n / t >> 0,
                            u[a] = d,
                            s[a] = c,
                            l = 0,
                            d = []);
                        return {
                            length: c,
                            lengths: s,
                            segments: u
                        }
                    }
                      , v = i._gsDefine.plugin({
                        propName: "bezier",
                        priority: -1,
                        version: "1.3.8",
                        API: 2,
                        global: !0,
                        init: function(e, t, i) {
                            this._target = e,
                            t instanceof Array && (t = {
                                values: t
                            }),
                            this._func = {},
                            this._mod = {},
                            this._props = [],
                            this._timeRes = null == t.timeResolution ? 6 : parseInt(t.timeResolution, 10);
                            var n, r, a, o, s, l = t.values || [], c = {}, h = l[0], u = t.autoRotate || i.vars.orientToBezier;
                            this._autoRotate = u ? u instanceof Array ? u : [["x", "y", "rotation", u === !0 ? 0 : Number(u) || 0]] : null;
                            for (n in h)
                                this._props.push(n);
                            for (a = this._props.length; --a > -1; )
                                n = this._props[a],
                                this._overwriteProps.push(n),
                                r = this._func[n] = "function" == typeof e[n],
                                c[n] = r ? e[n.indexOf("set") || "function" != typeof e["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(e[n]),
                                s || c[n] !== l[0][n] && (s = c);
                            if (this._beziers = "cubic" !== t.type && "quadratic" !== t.type && "soft" !== t.type ? d(l, isNaN(t.curviness) ? 1 : t.curviness, !1, "thruBasic" === t.type, t.correlate, s) : p(l, t.type, c),
                            this._segCount = this._beziers[n].length,
                            this._timeRes) {
                                var f = m(this._beziers, this._timeRes);
                                this._length = f.length,
                                this._lengths = f.lengths,
                                this._segments = f.segments,
                                this._l1 = this._li = this._s1 = this._si = 0,
                                this._l2 = this._lengths[0],
                                this._curSeg = this._segments[0],
                                this._s2 = this._curSeg[0],
                                this._prec = 1 / this._curSeg.length
                            }
                            if (u = this._autoRotate)
                                for (this._initialRotations = [],
                                u[0]instanceof Array || (this._autoRotate = u = [u]),
                                a = u.length; --a > -1; ) {
                                    for (o = 0; 3 > o; o++)
                                        n = u[a][o],
                                        this._func[n] = "function" == typeof e[n] ? e[n.indexOf("set") || "function" != typeof e["get" + n.substr(3)] ? n : "get" + n.substr(3)] : !1;
                                    n = u[a][2],
                                    this._initialRotations[a] = (this._func[n] ? this._func[n].call(this._target) : this._target[n]) || 0,
                                    this._overwriteProps.push(n)
                                }
                            return this._startRatio = i.vars.runBackwards ? 1 : 0,
                            !0
                        },
                        set: function(t) {
                            var i, n, r, a, o, s, l, c, h, u, d = this._segCount, p = this._func, f = this._target, m = t !== this._startRatio;
                            if (this._timeRes) {
                                if (h = this._lengths,
                                u = this._curSeg,
                                t *= this._length,
                                r = this._li,
                                t > this._l2 && d - 1 > r) {
                                    for (c = d - 1; c > r && (this._l2 = h[++r]) <= t; )
                                        ;
                                    this._l1 = h[r - 1],
                                    this._li = r,
                                    this._curSeg = u = this._segments[r],
                                    this._s2 = u[this._s1 = this._si = 0]
                                } else if (t < this._l1 && r > 0) {
                                    for (; r > 0 && (this._l1 = h[--r]) >= t; )
                                        ;
                                    0 === r && t < this._l1 ? this._l1 = 0 : r++,
                                    this._l2 = h[r],
                                    this._li = r,
                                    this._curSeg = u = this._segments[r],
                                    this._s1 = u[(this._si = u.length - 1) - 1] || 0,
                                    this._s2 = u[this._si]
                                }
                                if (i = r,
                                t -= this._l1,
                                r = this._si,
                                t > this._s2 && r < u.length - 1) {
                                    for (c = u.length - 1; c > r && (this._s2 = u[++r]) <= t; )
                                        ;
                                    this._s1 = u[r - 1],
                                    this._si = r
                                } else if (t < this._s1 && r > 0) {
                                    for (; r > 0 && (this._s1 = u[--r]) >= t; )
                                        ;
                                    0 === r && t < this._s1 ? this._s1 = 0 : r++,
                                    this._s2 = u[r],
                                    this._si = r
                                }
                                s = (r + (t - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                            } else
                                i = 0 > t ? 0 : t >= 1 ? d - 1 : d * t >> 0,
                                s = (t - i * (1 / d)) * d;
                            for (n = 1 - s,
                            r = this._props.length; --r > -1; )
                                a = this._props[r],
                                o = this._beziers[a][i],
                                l = (s * s * o.da + 3 * n * (s * o.ca + n * o.ba)) * s + o.a,
                                this._mod[a] && (l = this._mod[a](l, f)),
                                p[a] ? f[a](l) : f[a] = l;
                            if (this._autoRotate) {
                                var v, g, y, _, x, b, w, T = this._autoRotate;
                                for (r = T.length; --r > -1; )
                                    a = T[r][2],
                                    b = T[r][3] || 0,
                                    w = T[r][4] === !0 ? 1 : e,
                                    o = this._beziers[T[r][0]],
                                    v = this._beziers[T[r][1]],
                                    o && v && (o = o[i],
                                    v = v[i],
                                    g = o.a + (o.b - o.a) * s,
                                    _ = o.b + (o.c - o.b) * s,
                                    g += (_ - g) * s,
                                    _ += (o.c + (o.d - o.c) * s - _) * s,
                                    y = v.a + (v.b - v.a) * s,
                                    x = v.b + (v.c - v.b) * s,
                                    y += (x - y) * s,
                                    x += (v.c + (v.d - v.c) * s - x) * s,
                                    l = m ? Math.atan2(x - y, _ - g) * w + b : this._initialRotations[r],
                                    this._mod[a] && (l = this._mod[a](l, f)),
                                    p[a] ? f[a](l) : f[a] = l)
                            }
                        }
                    })
                      , g = v.prototype;
                    v.bezierThrough = d,
                    v.cubicToQuadratic = c,
                    v._autoCSS = !0,
                    v.quadraticToCubic = function(e, t, i) {
                        return new s(e,(2 * t + e) / 3,(2 * t + i) / 3,i)
                    }
                    ,
                    v._cssRegister = function() {
                        var e = o.CSSPlugin;
                        if (e) {
                            var t = e._internals
                              , i = t._parseToProxy
                              , n = t._setPluginRatio
                              , r = t.CSSPropTween;
                            t._registerComplexSpecialProp("bezier", {
                                parser: function(e, t, a, o, s, l) {
                                    t instanceof Array && (t = {
                                        values: t
                                    }),
                                    l = new v;
                                    var c, h, u, d = t.values, p = d.length - 1, f = [], m = {};
                                    if (0 > p)
                                        return s;
                                    for (c = 0; p >= c; c++)
                                        u = i(e, d[c], o, s, l, p !== c),
                                        f[c] = u.end;
                                    for (h in t)
                                        m[h] = t[h];
                                    return m.values = f,
                                    s = new r(e,"bezier",0,0,u.pt,2),
                                    s.data = u,
                                    s.plugin = l,
                                    s.setRatio = n,
                                    0 === m.autoRotate && (m.autoRotate = !0),
                                    !m.autoRotate || m.autoRotate instanceof Array || (c = m.autoRotate === !0 ? 0 : Number(m.autoRotate),
                                    m.autoRotate = null != u.end.left ? [["left", "top", "rotation", c, !1]] : null != u.end.x ? [["x", "y", "rotation", c, !1]] : !1),
                                    m.autoRotate && (o._transform || o._enableTransforms(!1),
                                    u.autoRotate = o._target._gsTransform,
                                    u.proxy.rotation = u.autoRotate.rotation || 0,
                                    o._overwriteProps.push("rotation")),
                                    l._onInitTween(u.proxy, m, o._tween),
                                    s
                                }
                            })
                        }
                    }
                    ,
                    g._mod = function(e) {
                        for (var t, i = this._overwriteProps, n = i.length; --n > -1; )
                            t = e[i[n]],
                            t && "function" == typeof t && (this._mod[i[n]] = t)
                    }
                    ,
                    g._kill = function(e) {
                        var t, i, n = this._props;
                        for (t in this._beziers)
                            if (t in e)
                                for (delete this._beziers[t],
                                delete this._func[t],
                                i = n.length; --i > -1; )
                                    n[i] === t && n.splice(i, 1);
                        if (n = this._autoRotate)
                            for (i = n.length; --i > -1; )
                                e[n[i][2]] && n.splice(i, 1);
                        return this._super._kill.call(this, e)
                    }
                }(),
                i._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(e, t) {
                    var n, r, a, o, s = function() {
                        e.call(this, "css"),
                        this._overwriteProps.length = 0,
                        this.setRatio = s.prototype.setRatio
                    }, l = i._gsDefine.globals, c = {}, h = s.prototype = new e("css");
                    h.constructor = s,
                    s.version = "1.20.3",
                    s.API = 2,
                    s.defaultTransformPerspective = 0,
                    s.defaultSkewType = "compensated",
                    s.defaultSmoothOrigin = !0,
                    h = "px",
                    s.suffixMap = {
                        top: h,
                        right: h,
                        bottom: h,
                        left: h,
                        width: h,
                        height: h,
                        fontSize: h,
                        padding: h,
                        margin: h,
                        perspective: h,
                        lineHeight: ""
                    };
                    var u, d, p, f, m, v, g, y, _ = /(?:\-|\.|\b)(\d|\.|e\-)+/g, x = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, b = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, T = /(?:\d|\-|\+|=|#|\.)*/g, M = /opacity *= *([^)]*)/i, E = /opacity:([^;]*)/i, S = /alpha\(opacity *=.+?\)/i, A = /^(rgb|hsl)/, P = /([A-Z])/g, C = /-([a-z])/gi, L = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, R = function(e, t) {
                        return t.toUpperCase()
                    }, O = /(?:Left|Right|Width)/i, I = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, D = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, U = /,(?=[^\)]*(?:\(|$))/gi, F = /[\s,\(]/i, k = Math.PI / 180, N = 180 / Math.PI, z = {}, B = {
                        style: {}
                    }, G = i.document || {
                        createElement: function() {
                            return B
                        }
                    }, H = function(e, t) {
                        return G.createElementNS ? G.createElementNS(t || "http://www.w3.org/1999/xhtml", e) : G.createElement(e)
                    }, j = H("div"), V = H("img"), W = s._internals = {
                        _specialProps: c
                    }, X = (i.navigator || {}).userAgent || "", Y = function() {
                        var e = X.indexOf("Android")
                          , t = H("a");
                        return p = -1 !== X.indexOf("Safari") && -1 === X.indexOf("Chrome") && (-1 === e || parseFloat(X.substr(e + 8, 2)) > 3),
                        m = p && parseFloat(X.substr(X.indexOf("Version/") + 8, 2)) < 6,
                        f = -1 !== X.indexOf("Firefox"),
                        (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(X) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(X)) && (v = parseFloat(RegExp.$1)),
                        t ? (t.style.cssText = "top:1px;opacity:.55;",
                        /^0.55/.test(t.style.opacity)) : !1
                    }(), q = function(e) {
                        return M.test("string" == typeof e ? e : (e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                    }, Z = function(e) {
                        i.console && console.log(e)
                    }, Q = "", J = "", K = function(e, t) {
                        t = t || j;
                        var i, n, r = t.style;
                        if (void 0 !== r[e])
                            return e;
                        for (e = e.charAt(0).toUpperCase() + e.substr(1),
                        i = ["O", "Moz", "ms", "Ms", "Webkit"],
                        n = 5; --n > -1 && void 0 === r[i[n] + e]; )
                            ;
                        return n >= 0 ? (J = 3 === n ? "ms" : i[n],
                        Q = "-" + J.toLowerCase() + "-",
                        J + e) : null
                    }, $ = G.defaultView ? G.defaultView.getComputedStyle : function() {}
                    , et = s.getStyle = function(e, t, i, n, r) {
                        var a;
                        return Y || "opacity" !== t ? (!n && e.style[t] ? a = e.style[t] : (i = i || $(e)) ? a = i[t] || i.getPropertyValue(t) || i.getPropertyValue(t.replace(P, "-$1").toLowerCase()) : e.currentStyle && (a = e.currentStyle[t]),
                        null == r || a && "none" !== a && "auto" !== a && "auto auto" !== a ? a : r) : q(e)
                    }
                    , tt = W.convertToPixels = function(e, i, n, r, a) {
                        if ("px" === r || !r && "lineHeight" !== i)
                            return n;
                        if ("auto" === r || !n)
                            return 0;
                        var o, l, c, h = O.test(i), u = e, d = j.style, p = 0 > n, f = 1 === n;
                        if (p && (n = -n),
                        f && (n *= 100),
                        "lineHeight" !== i || r)
                            if ("%" === r && -1 !== i.indexOf("border"))
                                o = n / 100 * (h ? e.clientWidth : e.clientHeight);
                            else {
                                if (d.cssText = "border:0 solid red;position:" + et(e, "position") + ";line-height:0;",
                                "%" !== r && u.appendChild && "v" !== r.charAt(0) && "rem" !== r)
                                    d[h ? "borderLeftWidth" : "borderTopWidth"] = n + r;
                                else {
                                    if (u = e.parentNode || G.body,
                                    -1 !== et(u, "display").indexOf("flex") && (d.position = "absolute"),
                                    l = u._gsCache,
                                    c = t.ticker.frame,
                                    l && h && l.time === c)
                                        return l.width * n / 100;
                                    d[h ? "width" : "height"] = n + r
                                }
                                u.appendChild(j),
                                o = parseFloat(j[h ? "offsetWidth" : "offsetHeight"]),
                                u.removeChild(j),
                                h && "%" === r && s.cacheWidths !== !1 && (l = u._gsCache = u._gsCache || {},
                                l.time = c,
                                l.width = o / n * 100),
                                0 !== o || a || (o = tt(e, i, n, r, !0))
                            }
                        else
                            l = $(e).lineHeight,
                            e.style.lineHeight = n,
                            o = parseFloat($(e).lineHeight),
                            e.style.lineHeight = l;
                        return f && (o /= 100),
                        p ? -o : o
                    }
                    , it = W.calculateOffset = function(e, t, i) {
                        if ("absolute" !== et(e, "position", i))
                            return 0;
                        var n = "left" === t ? "Left" : "Top"
                          , r = et(e, "margin" + n, i);
                        return e["offset" + n] - (tt(e, t, parseFloat(r), r.replace(T, "")) || 0)
                    }
                    , nt = function(e, t) {
                        var i, n, r, a = {};
                        if (t = t || $(e, null))
                            if (i = t.length)
                                for (; --i > -1; )
                                    r = t[i],
                                    (-1 === r.indexOf("-transform") || Lt === r) && (a[r.replace(C, R)] = t.getPropertyValue(r));
                            else
                                for (i in t)
                                    (-1 === i.indexOf("Transform") || Ct === i) && (a[i] = t[i]);
                        else if (t = e.currentStyle || e.style)
                            for (i in t)
                                "string" == typeof i && void 0 === a[i] && (a[i.replace(C, R)] = t[i]);
                        return Y || (a.opacity = q(e)),
                        n = Vt(e, t, !1),
                        a.rotation = n.rotation,
                        a.skewX = n.skewX,
                        a.scaleX = n.scaleX,
                        a.scaleY = n.scaleY,
                        a.x = n.x,
                        a.y = n.y,
                        Ot && (a.z = n.z,
                        a.rotationX = n.rotationX,
                        a.rotationY = n.rotationY,
                        a.scaleZ = n.scaleZ),
                        a.filters && delete a.filters,
                        a
                    }, rt = function(e, t, i, n, r) {
                        var a, o, s, l = {}, c = e.style;
                        for (o in i)
                            "cssText" !== o && "length" !== o && isNaN(o) && (t[o] !== (a = i[o]) || r && r[o]) && -1 === o.indexOf("Origin") && ("number" == typeof a || "string" == typeof a) && (l[o] = "auto" !== a || "left" !== o && "top" !== o ? "" !== a && "auto" !== a && "none" !== a || "string" != typeof t[o] || "" === t[o].replace(w, "") ? a : 0 : it(e, o),
                            void 0 !== c[o] && (s = new _t(c,o,c[o],s)));
                        if (n)
                            for (o in n)
                                "className" !== o && (l[o] = n[o]);
                        return {
                            difs: l,
                            firstMPT: s
                        }
                    }, at = {
                        width: ["Left", "Right"],
                        height: ["Top", "Bottom"]
                    }, ot = ["marginLeft", "marginRight", "marginTop", "marginBottom"], st = function(e, t, i) {
                        if ("svg" === (e.nodeName + "").toLowerCase())
                            return (i || $(e))[t] || 0;
                        if (e.getCTM && Gt(e))
                            return e.getBBox()[t] || 0;
                        var n = parseFloat("width" === t ? e.offsetWidth : e.offsetHeight)
                          , r = at[t]
                          , a = r.length;
                        for (i = i || $(e, null); --a > -1; )
                            n -= parseFloat(et(e, "padding" + r[a], i, !0)) || 0,
                            n -= parseFloat(et(e, "border" + r[a] + "Width", i, !0)) || 0;
                        return n
                    }, lt = function(e, t) {
                        if ("contain" === e || "auto" === e || "auto auto" === e)
                            return e + " ";
                        (null == e || "" === e) && (e = "0 0");
                        var i, n = e.split(" "), r = -1 !== e.indexOf("left") ? "0%" : -1 !== e.indexOf("right") ? "100%" : n[0], a = -1 !== e.indexOf("top") ? "0%" : -1 !== e.indexOf("bottom") ? "100%" : n[1];
                        if (n.length > 3 && !t) {
                            for (n = e.split(", ").join(",").split(","),
                            e = [],
                            i = 0; i < n.length; i++)
                                e.push(lt(n[i]));
                            return e.join(",")
                        }
                        return null == a ? a = "center" === r ? "50%" : "0" : "center" === a && (a = "50%"),
                        ("center" === r || isNaN(parseFloat(r)) && -1 === (r + "").indexOf("=")) && (r = "50%"),
                        e = r + " " + a + (n.length > 2 ? " " + n[2] : ""),
                        t && (t.oxp = -1 !== r.indexOf("%"),
                        t.oyp = -1 !== a.indexOf("%"),
                        t.oxr = "=" === r.charAt(1),
                        t.oyr = "=" === a.charAt(1),
                        t.ox = parseFloat(r.replace(w, "")),
                        t.oy = parseFloat(a.replace(w, "")),
                        t.v = e),
                        t || e
                    }, ct = function(e, t) {
                        return "function" == typeof e && (e = e(y, g)),
                        "string" == typeof e && "=" === e.charAt(1) ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(t) || 0
                    }, ht = function(e, t) {
                        return "function" == typeof e && (e = e(y, g)),
                        null == e ? t : "string" == typeof e && "=" === e.charAt(1) ? parseInt(e.charAt(0) + "1", 10) * parseFloat(e.substr(2)) + t : parseFloat(e) || 0
                    }, ut = function(e, t, i, n) {
                        var r, a, o, s, l, c = 1e-6;
                        return "function" == typeof e && (e = e(y, g)),
                        null == e ? s = t : "number" == typeof e ? s = e : (r = 360,
                        a = e.split("_"),
                        l = "=" === e.charAt(1),
                        o = (l ? parseInt(e.charAt(0) + "1", 10) * parseFloat(a[0].substr(2)) : parseFloat(a[0])) * (-1 === e.indexOf("rad") ? 1 : N) - (l ? 0 : t),
                        a.length && (n && (n[i] = t + o),
                        -1 !== e.indexOf("short") && (o %= r,
                        o !== o % (r / 2) && (o = 0 > o ? o + r : o - r)),
                        -1 !== e.indexOf("_cw") && 0 > o ? o = (o + 9999999999 * r) % r - (o / r | 0) * r : -1 !== e.indexOf("ccw") && o > 0 && (o = (o - 9999999999 * r) % r - (o / r | 0) * r)),
                        s = t + o),
                        c > s && s > -c && (s = 0),
                        s
                    }, dt = {
                        aqua: [0, 255, 255],
                        lime: [0, 255, 0],
                        silver: [192, 192, 192],
                        black: [0, 0, 0],
                        maroon: [128, 0, 0],
                        teal: [0, 128, 128],
                        blue: [0, 0, 255],
                        navy: [0, 0, 128],
                        white: [255, 255, 255],
                        fuchsia: [255, 0, 255],
                        olive: [128, 128, 0],
                        yellow: [255, 255, 0],
                        orange: [255, 165, 0],
                        gray: [128, 128, 128],
                        purple: [128, 0, 128],
                        green: [0, 128, 0],
                        red: [255, 0, 0],
                        pink: [255, 192, 203],
                        cyan: [0, 255, 255],
                        transparent: [255, 255, 255, 0]
                    }, pt = function(e, t, i) {
                        return e = 0 > e ? e + 1 : e > 1 ? e - 1 : e,
                        255 * (1 > 6 * e ? t + (i - t) * e * 6 : .5 > e ? i : 2 > 3 * e ? t + (i - t) * (2 / 3 - e) * 6 : t) + .5 | 0
                    }, ft = s.parseColor = function(e, t) {
                        var i, n, r, a, o, s, l, c, h, u, d;
                        if (e)
                            if ("number" == typeof e)
                                i = [e >> 16, e >> 8 & 255, 255 & e];
                            else {
                                if ("," === e.charAt(e.length - 1) && (e = e.substr(0, e.length - 1)),
                                dt[e])
                                    i = dt[e];
                                else if ("#" === e.charAt(0))
                                    4 === e.length && (n = e.charAt(1),
                                    r = e.charAt(2),
                                    a = e.charAt(3),
                                    e = "#" + n + n + r + r + a + a),
                                    e = parseInt(e.substr(1), 16),
                                    i = [e >> 16, e >> 8 & 255, 255 & e];
                                else if ("hsl" === e.substr(0, 3))
                                    if (i = d = e.match(_),
                                    t) {
                                        if (-1 !== e.indexOf("="))
                                            return e.match(x)
                                    } else
                                        o = Number(i[0]) % 360 / 360,
                                        s = Number(i[1]) / 100,
                                        l = Number(i[2]) / 100,
                                        r = .5 >= l ? l * (s + 1) : l + s - l * s,
                                        n = 2 * l - r,
                                        i.length > 3 && (i[3] = Number(i[3])),
                                        i[0] = pt(o + 1 / 3, n, r),
                                        i[1] = pt(o, n, r),
                                        i[2] = pt(o - 1 / 3, n, r);
                                else
                                    i = e.match(_) || dt.transparent;
                                i[0] = Number(i[0]),
                                i[1] = Number(i[1]),
                                i[2] = Number(i[2]),
                                i.length > 3 && (i[3] = Number(i[3]))
                            }
                        else
                            i = dt.black;
                        return t && !d && (n = i[0] / 255,
                        r = i[1] / 255,
                        a = i[2] / 255,
                        c = Math.max(n, r, a),
                        h = Math.min(n, r, a),
                        l = (c + h) / 2,
                        c === h ? o = s = 0 : (u = c - h,
                        s = l > .5 ? u / (2 - c - h) : u / (c + h),
                        o = c === n ? (r - a) / u + (a > r ? 6 : 0) : c === r ? (a - n) / u + 2 : (n - r) / u + 4,
                        o *= 60),
                        i[0] = o + .5 | 0,
                        i[1] = 100 * s + .5 | 0,
                        i[2] = 100 * l + .5 | 0),
                        i
                    }
                    , mt = function(e, t) {
                        var i, n, r, a = e.match(vt) || [], o = 0, s = "";
                        if (!a.length)
                            return e;
                        for (i = 0; i < a.length; i++)
                            n = a[i],
                            r = e.substr(o, e.indexOf(n, o) - o),
                            o += r.length + n.length,
                            n = ft(n, t),
                            3 === n.length && n.push(1),
                            s += r + (t ? "hsla(" + n[0] + "," + n[1] + "%," + n[2] + "%," + n[3] : "rgba(" + n.join(",")) + ")";
                        return s + e.substr(o)
                    }, vt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                    for (h in dt)
                        vt += "|" + h + "\\b";
                    vt = new RegExp(vt + ")","gi"),
                    s.colorStringFilter = function(e) {
                        var t, i = e[0] + " " + e[1];
                        vt.test(i) && (t = -1 !== i.indexOf("hsl(") || -1 !== i.indexOf("hsla("),
                        e[0] = mt(e[0], t),
                        e[1] = mt(e[1], t)),
                        vt.lastIndex = 0
                    }
                    ,
                    t.defaultStringFilter || (t.defaultStringFilter = s.colorStringFilter);
                    var gt = function(e, t, i, n) {
                        if (null == e)
                            return function(e) {
                                return e
                            }
                            ;
                        var r, a = t ? (e.match(vt) || [""])[0] : "", o = e.split(a).join("").match(b) || [], s = e.substr(0, e.indexOf(o[0])), l = ")" === e.charAt(e.length - 1) ? ")" : "", c = -1 !== e.indexOf(" ") ? " " : ",", h = o.length, u = h > 0 ? o[0].replace(_, "") : "";
                        return h ? r = t ? function(e) {
                            var t, d, p, f;
                            if ("number" == typeof e)
                                e += u;
                            else if (n && U.test(e)) {
                                for (f = e.replace(U, "|").split("|"),
                                p = 0; p < f.length; p++)
                                    f[p] = r(f[p]);
                                return f.join(",")
                            }
                            if (t = (e.match(vt) || [a])[0],
                            d = e.split(t).join("").match(b) || [],
                            p = d.length,
                            h > p--)
                                for (; ++p < h; )
                                    d[p] = i ? d[(p - 1) / 2 | 0] : o[p];
                            return s + d.join(c) + c + t + l + (-1 !== e.indexOf("inset") ? " inset" : "")
                        }
                        : function(e) {
                            var t, a, d;
                            if ("number" == typeof e)
                                e += u;
                            else if (n && U.test(e)) {
                                for (a = e.replace(U, "|").split("|"),
                                d = 0; d < a.length; d++)
                                    a[d] = r(a[d]);
                                return a.join(",")
                            }
                            if (t = e.match(b) || [],
                            d = t.length,
                            h > d--)
                                for (; ++d < h; )
                                    t[d] = i ? t[(d - 1) / 2 | 0] : o[d];
                            return s + t.join(c) + l
                        }
                        : function(e) {
                            return e
                        }
                    }
                      , yt = function(e) {
                        return e = e.split(","),
                        function(t, i, n, r, a, o, s) {
                            var l, c = (i + "").split(" ");
                            for (s = {},
                            l = 0; 4 > l; l++)
                                s[e[l]] = c[l] = c[l] || c[(l - 1) / 2 >> 0];
                            return r.parse(t, s, a, o)
                        }
                    }
                      , _t = (W._setPluginRatio = function(e) {
                        this.plugin.setRatio(e);
                        for (var t, i, n, r, a, o = this.data, s = o.proxy, l = o.firstMPT, c = 1e-6; l; )
                            t = s[l.v],
                            l.r ? t = Math.round(t) : c > t && t > -c && (t = 0),
                            l.t[l.p] = t,
                            l = l._next;
                        if (o.autoRotate && (o.autoRotate.rotation = o.mod ? o.mod(s.rotation, this.t) : s.rotation),
                        1 === e || 0 === e)
                            for (l = o.firstMPT,
                            a = 1 === e ? "e" : "b"; l; ) {
                                if (i = l.t,
                                i.type) {
                                    if (1 === i.type) {
                                        for (r = i.xs0 + i.s + i.xs1,
                                        n = 1; n < i.l; n++)
                                            r += i["xn" + n] + i["xs" + (n + 1)];
                                        i[a] = r
                                    }
                                } else
                                    i[a] = i.s + i.xs0;
                                l = l._next
                            }
                    }
                    ,
                    function(e, t, i, n, r) {
                        this.t = e,
                        this.p = t,
                        this.v = i,
                        this.r = r,
                        n && (n._prev = this,
                        this._next = n)
                    }
                    )
                      , xt = (W._parseToProxy = function(e, t, i, n, r, a) {
                        var o, s, l, c, h, u = n, d = {}, p = {}, f = i._transform, m = z;
                        for (i._transform = null,
                        z = t,
                        n = h = i.parse(e, t, n, r),
                        z = m,
                        a && (i._transform = f,
                        u && (u._prev = null,
                        u._prev && (u._prev._next = null))); n && n !== u; ) {
                            if (n.type <= 1 && (s = n.p,
                            p[s] = n.s + n.c,
                            d[s] = n.s,
                            a || (c = new _t(n,"s",s,c,n.r),
                            n.c = 0),
                            1 === n.type))
                                for (o = n.l; --o > 0; )
                                    l = "xn" + o,
                                    s = n.p + "_" + l,
                                    p[s] = n.data[l],
                                    d[s] = n[l],
                                    a || (c = new _t(n,l,s,c,n.rxp[l]));
                            n = n._next
                        }
                        return {
                            proxy: d,
                            end: p,
                            firstMPT: c,
                            pt: h
                        }
                    }
                    ,
                    W.CSSPropTween = function(e, t, i, r, a, s, l, c, h, u, d) {
                        this.t = e,
                        this.p = t,
                        this.s = i,
                        this.c = r,
                        this.n = l || t,
                        e instanceof xt || o.push(this.n),
                        this.r = c,
                        this.type = s || 0,
                        h && (this.pr = h,
                        n = !0),
                        this.b = void 0 === u ? i : u,
                        this.e = void 0 === d ? i + r : d,
                        a && (this._next = a,
                        a._prev = this)
                    }
                    )
                      , bt = function(e, t, i, n, r, a) {
                        var o = new xt(e,t,i,n - i,r,-1,a);
                        return o.b = i,
                        o.e = o.xs0 = n,
                        o
                    }
                      , wt = s.parseComplex = function(e, t, i, n, r, a, o, l, c, h) {
                        i = i || a || "",
                        "function" == typeof n && (n = n(y, g)),
                        o = new xt(e,t,0,0,o,h ? 2 : 1,null,!1,l,i,n),
                        n += "",
                        r && vt.test(n + i) && (n = [i, n],
                        s.colorStringFilter(n),
                        i = n[0],
                        n = n[1]);
                        var d, p, f, m, v, b, w, T, M, E, S, A, P, C = i.split(", ").join(",").split(" "), L = n.split(", ").join(",").split(" "), R = C.length, O = u !== !1;
                        for ((-1 !== n.indexOf(",") || -1 !== i.indexOf(",")) && (-1 !== (n + i).indexOf("rgb") || -1 !== (n + i).indexOf("hsl") ? (C = C.join(" ").replace(U, ", ").split(" "),
                        L = L.join(" ").replace(U, ", ").split(" ")) : (C = C.join(" ").split(",").join(", ").split(" "),
                        L = L.join(" ").split(",").join(", ").split(" ")),
                        R = C.length),
                        R !== L.length && (C = (a || "").split(" "),
                        R = C.length),
                        o.plugin = c,
                        o.setRatio = h,
                        vt.lastIndex = 0,
                        d = 0; R > d; d++)
                            if (m = C[d],
                            v = L[d],
                            T = parseFloat(m),
                            T || 0 === T)
                                o.appendXtra("", T, ct(v, T), v.replace(x, ""), O && -1 !== v.indexOf("px"), !0);
                            else if (r && vt.test(m))
                                A = v.indexOf(")") + 1,
                                A = ")" + (A ? v.substr(A) : ""),
                                P = -1 !== v.indexOf("hsl") && Y,
                                E = v,
                                m = ft(m, P),
                                v = ft(v, P),
                                M = m.length + v.length > 6,
                                M && !Y && 0 === v[3] ? (o["xs" + o.l] += o.l ? " transparent" : "transparent",
                                o.e = o.e.split(L[d]).join("transparent")) : (Y || (M = !1),
                                P ? o.appendXtra(E.substr(0, E.indexOf("hsl")) + (M ? "hsla(" : "hsl("), m[0], ct(v[0], m[0]), ",", !1, !0).appendXtra("", m[1], ct(v[1], m[1]), "%,", !1).appendXtra("", m[2], ct(v[2], m[2]), M ? "%," : "%" + A, !1) : o.appendXtra(E.substr(0, E.indexOf("rgb")) + (M ? "rgba(" : "rgb("), m[0], v[0] - m[0], ",", !0, !0).appendXtra("", m[1], v[1] - m[1], ",", !0).appendXtra("", m[2], v[2] - m[2], M ? "," : A, !0),
                                M && (m = m.length < 4 ? 1 : m[3],
                                o.appendXtra("", m, (v.length < 4 ? 1 : v[3]) - m, A, !1))),
                                vt.lastIndex = 0;
                            else if (b = m.match(_)) {
                                if (w = v.match(x),
                                !w || w.length !== b.length)
                                    return o;
                                for (f = 0,
                                p = 0; p < b.length; p++)
                                    S = b[p],
                                    E = m.indexOf(S, f),
                                    o.appendXtra(m.substr(f, E - f), Number(S), ct(w[p], S), "", O && "px" === m.substr(E + S.length, 2), 0 === p),
                                    f = E + S.length;
                                o["xs" + o.l] += m.substr(f)
                            } else
                                o["xs" + o.l] += o.l || o["xs" + o.l] ? " " + v : v;
                        if (-1 !== n.indexOf("=") && o.data) {
                            for (A = o.xs0 + o.data.s,
                            d = 1; d < o.l; d++)
                                A += o["xs" + d] + o.data["xn" + d];
                            o.e = A + o["xs" + d]
                        }
                        return o.l || (o.type = -1,
                        o.xs0 = o.e),
                        o.xfirst || o
                    }
                      , Tt = 9;
                    for (h = xt.prototype,
                    h.l = h.pr = 0; --Tt > 0; )
                        h["xn" + Tt] = 0,
                        h["xs" + Tt] = "";
                    h.xs0 = "",
                    h._next = h._prev = h.xfirst = h.data = h.plugin = h.setRatio = h.rxp = null,
                    h.appendXtra = function(e, t, i, n, r, a) {
                        var o = this
                          , s = o.l;
                        return o["xs" + s] += a && (s || o["xs" + s]) ? " " + e : e || "",
                        i || 0 === s || o.plugin ? (o.l++,
                        o.type = o.setRatio ? 2 : 1,
                        o["xs" + o.l] = n || "",
                        s > 0 ? (o.data["xn" + s] = t + i,
                        o.rxp["xn" + s] = r,
                        o["xn" + s] = t,
                        o.plugin || (o.xfirst = new xt(o,"xn" + s,t,i,o.xfirst || o,0,o.n,r,o.pr),
                        o.xfirst.xs0 = 0),
                        o) : (o.data = {
                            s: t + i
                        },
                        o.rxp = {},
                        o.s = t,
                        o.c = i,
                        o.r = r,
                        o)) : (o["xs" + s] += t + (n || ""),
                        o)
                    }
                    ;
                    var Mt = function(e, t) {
                        t = t || {},
                        this.p = t.prefix ? K(e) || e : e,
                        c[e] = c[this.p] = this,
                        this.format = t.formatter || gt(t.defaultValue, t.color, t.collapsible, t.multi),
                        t.parser && (this.parse = t.parser),
                        this.clrs = t.color,
                        this.multi = t.multi,
                        this.keyword = t.keyword,
                        this.dflt = t.defaultValue,
                        this.pr = t.priority || 0
                    }
                      , Et = W._registerComplexSpecialProp = function(e, t, i) {
                        "object" != typeof t && (t = {
                            parser: i
                        });
                        var n, r, a = e.split(","), o = t.defaultValue;
                        for (i = i || [o],
                        n = 0; n < a.length; n++)
                            t.prefix = 0 === n && t.prefix,
                            t.defaultValue = i[n] || o,
                            r = new Mt(a[n],t)
                    }
                      , St = W._registerPluginProp = function(e) {
                        if (!c[e]) {
                            var t = e.charAt(0).toUpperCase() + e.substr(1) + "Plugin";
                            Et(e, {
                                parser: function(e, i, n, r, a, o, s) {
                                    var h = l.com.greensock.plugins[t];
                                    return h ? (h._cssRegister(),
                                    c[n].parse(e, i, n, r, a, o, s)) : (Z("Error: " + t + " js file not loaded."),
                                    a)
                                }
                            })
                        }
                    }
                    ;
                    h = Mt.prototype,
                    h.parseComplex = function(e, t, i, n, r, a) {
                        var o, s, l, c, h, u, d = this.keyword;
                        if (this.multi && (U.test(i) || U.test(t) ? (s = t.replace(U, "|").split("|"),
                        l = i.replace(U, "|").split("|")) : d && (s = [t],
                        l = [i])),
                        l) {
                            for (c = l.length > s.length ? l.length : s.length,
                            o = 0; c > o; o++)
                                t = s[o] = s[o] || this.dflt,
                                i = l[o] = l[o] || this.dflt,
                                d && (h = t.indexOf(d),
                                u = i.indexOf(d),
                                h !== u && (-1 === u ? s[o] = s[o].split(d).join("") : -1 === h && (s[o] += " " + d)));
                            t = s.join(", "),
                            i = l.join(", ")
                        }
                        return wt(e, this.p, t, i, this.clrs, this.dflt, n, this.pr, r, a)
                    }
                    ,
                    h.parse = function(e, t, i, n, r, o) {
                        return this.parseComplex(e.style, this.format(et(e, this.p, a, !1, this.dflt)), this.format(t), r, o)
                    }
                    ,
                    s.registerSpecialProp = function(e, t, i) {
                        Et(e, {
                            parser: function(e, n, r, a, o, s) {
                                var l = new xt(e,r,0,0,o,2,r,!1,i);
                                return l.plugin = s,
                                l.setRatio = t(e, n, a._tween, r),
                                l
                            },
                            priority: i
                        })
                    }
                    ,
                    s.useSVGTransformAttr = !0;
                    var At, Pt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Ct = K("transform"), Lt = Q + "transform", Rt = K("transformOrigin"), Ot = null !== K("perspective"), It = W.Transform = function() {
                        this.perspective = parseFloat(s.defaultTransformPerspective) || 0,
                        this.force3D = s.defaultForce3D !== !1 && Ot ? s.defaultForce3D || "auto" : !1
                    }
                    , Dt = i.SVGElement, Ut = function(e, t, i) {
                        var n, r = G.createElementNS("http://www.w3.org/2000/svg", e), a = /([a-z])([A-Z])/g;
                        for (n in i)
                            r.setAttributeNS(null, n.replace(a, "$1-$2").toLowerCase(), i[n]);
                        return t.appendChild(r),
                        r
                    }, Ft = G.documentElement || {}, kt = function() {
                        var e, t, n, r = v || /Android/i.test(X) && !i.chrome;
                        return G.createElementNS && !r && (e = Ut("svg", Ft),
                        t = Ut("rect", e, {
                            width: 100,
                            height: 50,
                            x: 100
                        }),
                        n = t.getBoundingClientRect().width,
                        t.style[Rt] = "50% 50%",
                        t.style[Ct] = "scaleX(0.5)",
                        r = n === t.getBoundingClientRect().width && !(f && Ot),
                        Ft.removeChild(e)),
                        r
                    }(), Nt = function(e, t, i, n, r, a) {
                        var o, l, c, h, u, d, p, f, m, v, g, y, _, x, b = e._gsTransform, w = jt(e, !0);
                        b && (_ = b.xOrigin,
                        x = b.yOrigin),
                        (!n || (o = n.split(" ")).length < 2) && (p = e.getBBox(),
                        0 === p.x && 0 === p.y && p.width + p.height === 0 && (p = {
                            x: parseFloat(e.hasAttribute("x") ? e.getAttribute("x") : e.hasAttribute("cx") ? e.getAttribute("cx") : 0) || 0,
                            y: parseFloat(e.hasAttribute("y") ? e.getAttribute("y") : e.hasAttribute("cy") ? e.getAttribute("cy") : 0) || 0,
                            width: 0,
                            height: 0
                        }),
                        t = lt(t).split(" "),
                        o = [(-1 !== t[0].indexOf("%") ? parseFloat(t[0]) / 100 * p.width : parseFloat(t[0])) + p.x, (-1 !== t[1].indexOf("%") ? parseFloat(t[1]) / 100 * p.height : parseFloat(t[1])) + p.y]),
                        i.xOrigin = h = parseFloat(o[0]),
                        i.yOrigin = u = parseFloat(o[1]),
                        n && w !== Ht && (d = w[0],
                        p = w[1],
                        f = w[2],
                        m = w[3],
                        v = w[4],
                        g = w[5],
                        y = d * m - p * f,
                        y && (l = h * (m / y) + u * (-f / y) + (f * g - m * v) / y,
                        c = h * (-p / y) + u * (d / y) - (d * g - p * v) / y,
                        h = i.xOrigin = o[0] = l,
                        u = i.yOrigin = o[1] = c)),
                        b && (a && (i.xOffset = b.xOffset,
                        i.yOffset = b.yOffset,
                        b = i),
                        r || r !== !1 && s.defaultSmoothOrigin !== !1 ? (l = h - _,
                        c = u - x,
                        b.xOffset += l * w[0] + c * w[2] - l,
                        b.yOffset += l * w[1] + c * w[3] - c) : b.xOffset = b.yOffset = 0),
                        a || e.setAttribute("data-svg-origin", o.join(" "))
                    }, zt = function(e) {
                        var t, i = H("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), n = this.parentNode, r = this.nextSibling, a = this.style.cssText;
                        if (Ft.appendChild(i),
                        i.appendChild(this),
                        this.style.display = "block",
                        e)
                            try {
                                t = this.getBBox(),
                                this._originalGetBBox = this.getBBox,
                                this.getBBox = zt
                            } catch (o) {}
                        else
                            this._originalGetBBox && (t = this._originalGetBBox());
                        return r ? n.insertBefore(this, r) : n.appendChild(this),
                        Ft.removeChild(i),
                        this.style.cssText = a,
                        t
                    }, Bt = function(e) {
                        try {
                            return e.getBBox()
                        } catch (t) {
                            return zt.call(e, !0)
                        }
                    }, Gt = function(e) {
                        return !(!Dt || !e.getCTM || e.parentNode && !e.ownerSVGElement || !Bt(e))
                    }, Ht = [1, 0, 0, 1, 0, 0], jt = function(e, t) {
                        var i, n, r, a, o, s, l = e._gsTransform || new It, c = 1e5, h = e.style;
                        if (Ct ? n = et(e, Lt, null, !0) : e.currentStyle && (n = e.currentStyle.filter.match(I),
                        n = n && 4 === n.length ? [n[0].substr(4), Number(n[2].substr(4)), Number(n[1].substr(4)), n[3].substr(4), l.x || 0, l.y || 0].join(",") : ""),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        !Ct || !(s = !$(e) || "none" === $(e).display) && e.parentNode || (s && (a = h.display,
                        h.display = "block"),
                        e.parentNode || (o = 1,
                        Ft.appendChild(e)),
                        n = et(e, Lt, null, !0),
                        i = !n || "none" === n || "matrix(1, 0, 0, 1, 0, 0)" === n,
                        a ? h.display = a : s && qt(h, "display"),
                        o && Ft.removeChild(e)),
                        (l.svg || e.getCTM && Gt(e)) && (i && -1 !== (h[Ct] + "").indexOf("matrix") && (n = h[Ct],
                        i = 0),
                        r = e.getAttribute("transform"),
                        i && r && (-1 !== r.indexOf("matrix") ? (n = r,
                        i = 0) : -1 !== r.indexOf("translate") && (n = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")",
                        i = 0))),
                        i)
                            return Ht;
                        for (r = (n || "").match(_) || [],
                        Tt = r.length; --Tt > -1; )
                            a = Number(r[Tt]),
                            r[Tt] = (o = a - (a |= 0)) ? (o * c + (0 > o ? -.5 : .5) | 0) / c + a : a;
                        return t && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r
                    }, Vt = W.getTransform = function(e, i, n, r) {
                        if (e._gsTransform && n && !r)
                            return e._gsTransform;
                        var a, o, l, c, h, u, d = n ? e._gsTransform || new It : new It, p = d.scaleX < 0, f = 2e-5, m = 1e5, v = Ot ? parseFloat(et(e, Rt, i, !1, "0 0 0").split(" ")[2]) || d.zOrigin || 0 : 0, g = parseFloat(s.defaultTransformPerspective) || 0;
                        if (d.svg = !(!e.getCTM || !Gt(e)),
                        d.svg && (Nt(e, et(e, Rt, i, !1, "50% 50%") + "", d, e.getAttribute("data-svg-origin")),
                        At = s.useSVGTransformAttr || kt),
                        a = jt(e),
                        a !== Ht) {
                            if (16 === a.length) {
                                var y, _, x, b, w, T = a[0], M = a[1], E = a[2], S = a[3], A = a[4], P = a[5], C = a[6], L = a[7], R = a[8], O = a[9], I = a[10], D = a[12], U = a[13], F = a[14], k = a[11], z = Math.atan2(C, I);
                                d.zOrigin && (F = -d.zOrigin,
                                D = R * F - a[12],
                                U = O * F - a[13],
                                F = I * F + d.zOrigin - a[14]),
                                d.rotationX = z * N,
                                z && (b = Math.cos(-z),
                                w = Math.sin(-z),
                                y = A * b + R * w,
                                _ = P * b + O * w,
                                x = C * b + I * w,
                                R = A * -w + R * b,
                                O = P * -w + O * b,
                                I = C * -w + I * b,
                                k = L * -w + k * b,
                                A = y,
                                P = _,
                                C = x),
                                z = Math.atan2(-E, I),
                                d.rotationY = z * N,
                                z && (b = Math.cos(-z),
                                w = Math.sin(-z),
                                y = T * b - R * w,
                                _ = M * b - O * w,
                                x = E * b - I * w,
                                O = M * w + O * b,
                                I = E * w + I * b,
                                k = S * w + k * b,
                                T = y,
                                M = _,
                                E = x),
                                z = Math.atan2(M, T),
                                d.rotation = z * N,
                                z && (b = Math.cos(z),
                                w = Math.sin(z),
                                y = T * b + M * w,
                                _ = A * b + P * w,
                                x = R * b + O * w,
                                M = M * b - T * w,
                                P = P * b - A * w,
                                O = O * b - R * w,
                                T = y,
                                A = _,
                                R = x),
                                d.rotationX && Math.abs(d.rotationX) + Math.abs(d.rotation) > 359.9 && (d.rotationX = d.rotation = 0,
                                d.rotationY = 180 - d.rotationY),
                                z = Math.atan2(A, P),
                                d.scaleX = (Math.sqrt(T * T + M * M + E * E) * m + .5 | 0) / m,
                                d.scaleY = (Math.sqrt(P * P + C * C) * m + .5 | 0) / m,
                                d.scaleZ = (Math.sqrt(R * R + O * O + I * I) * m + .5 | 0) / m,
                                T /= d.scaleX,
                                A /= d.scaleY,
                                M /= d.scaleX,
                                P /= d.scaleY,
                                Math.abs(z) > f ? (d.skewX = z * N,
                                A = 0,
                                "simple" !== d.skewType && (d.scaleY *= 1 / Math.cos(z))) : d.skewX = 0,
                                d.perspective = k ? 1 / (0 > k ? -k : k) : 0,
                                d.x = D,
                                d.y = U,
                                d.z = F,
                                d.svg && (d.x -= d.xOrigin - (d.xOrigin * T - d.yOrigin * A),
                                d.y -= d.yOrigin - (d.yOrigin * M - d.xOrigin * P))
                            } else if (!Ot || r || !a.length || d.x !== a[4] || d.y !== a[5] || !d.rotationX && !d.rotationY) {
                                var B = a.length >= 6
                                  , G = B ? a[0] : 1
                                  , H = a[1] || 0
                                  , j = a[2] || 0
                                  , V = B ? a[3] : 1;
                                d.x = a[4] || 0,
                                d.y = a[5] || 0,
                                l = Math.sqrt(G * G + H * H),
                                c = Math.sqrt(V * V + j * j),
                                h = G || H ? Math.atan2(H, G) * N : d.rotation || 0,
                                u = j || V ? Math.atan2(j, V) * N + h : d.skewX || 0,
                                d.scaleX = l,
                                d.scaleY = c,
                                d.rotation = h,
                                d.skewX = u,
                                Ot && (d.rotationX = d.rotationY = d.z = 0,
                                d.perspective = g,
                                d.scaleZ = 1),
                                d.svg && (d.x -= d.xOrigin - (d.xOrigin * G + d.yOrigin * j),
                                d.y -= d.yOrigin - (d.xOrigin * H + d.yOrigin * V))
                            }
                            Math.abs(d.skewX) > 90 && Math.abs(d.skewX) < 270 && (p ? (d.scaleX *= -1,
                            d.skewX += d.rotation <= 0 ? 180 : -180,
                            d.rotation += d.rotation <= 0 ? 180 : -180) : (d.scaleY *= -1,
                            d.skewX += d.skewX <= 0 ? 180 : -180)),
                            d.zOrigin = v;
                            for (o in d)
                                d[o] < f && d[o] > -f && (d[o] = 0)
                        }
                        return n && (e._gsTransform = d,
                        d.svg && (At && e.style[Ct] ? t.delayedCall(.001, function() {
                            qt(e.style, Ct)
                        }) : !At && e.getAttribute("transform") && t.delayedCall(.001, function() {
                            e.removeAttribute("transform")
                        }))),
                        d
                    }
                    , Wt = function(e) {
                        var t, i, n = this.data, r = -n.rotation * k, a = r + n.skewX * k, o = 1e5, s = (Math.cos(r) * n.scaleX * o | 0) / o, l = (Math.sin(r) * n.scaleX * o | 0) / o, c = (Math.sin(a) * -n.scaleY * o | 0) / o, h = (Math.cos(a) * n.scaleY * o | 0) / o, u = this.t.style, d = this.t.currentStyle;
                        if (d) {
                            i = l,
                            l = -c,
                            c = -i,
                            t = d.filter,
                            u.filter = "";
                            var p, f, m = this.t.offsetWidth, g = this.t.offsetHeight, y = "absolute" !== d.position, _ = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + l + ", M21=" + c + ", M22=" + h, x = n.x + m * n.xPercent / 100, b = n.y + g * n.yPercent / 100;
                            if (null != n.ox && (p = (n.oxp ? m * n.ox * .01 : n.ox) - m / 2,
                            f = (n.oyp ? g * n.oy * .01 : n.oy) - g / 2,
                            x += p - (p * s + f * l),
                            b += f - (p * c + f * h)),
                            y ? (p = m / 2,
                            f = g / 2,
                            _ += ", Dx=" + (p - (p * s + f * l) + x) + ", Dy=" + (f - (p * c + f * h) + b) + ")") : _ += ", sizingMethod='auto expand')",
                            u.filter = -1 !== t.indexOf("DXImageTransform.Microsoft.Matrix(") ? t.replace(D, _) : _ + " " + t,
                            (0 === e || 1 === e) && 1 === s && 0 === l && 0 === c && 1 === h && (y && -1 === _.indexOf("Dx=0, Dy=0") || M.test(t) && 100 !== parseFloat(RegExp.$1) || -1 === t.indexOf("gradient(" && t.indexOf("Alpha")) && u.removeAttribute("filter")),
                            !y) {
                                var w, E, S, A = 8 > v ? 1 : -1;
                                for (p = n.ieOffsetX || 0,
                                f = n.ieOffsetY || 0,
                                n.ieOffsetX = Math.round((m - ((0 > s ? -s : s) * m + (0 > l ? -l : l) * g)) / 2 + x),
                                n.ieOffsetY = Math.round((g - ((0 > h ? -h : h) * g + (0 > c ? -c : c) * m)) / 2 + b),
                                Tt = 0; 4 > Tt; Tt++)
                                    E = ot[Tt],
                                    w = d[E],
                                    i = -1 !== w.indexOf("px") ? parseFloat(w) : tt(this.t, E, parseFloat(w), w.replace(T, "")) || 0,
                                    S = i !== n[E] ? 2 > Tt ? -n.ieOffsetX : -n.ieOffsetY : 2 > Tt ? p - n.ieOffsetX : f - n.ieOffsetY,
                                    u[E] = (n[E] = Math.round(i - S * (0 === Tt || 2 === Tt ? 1 : A))) + "px"
                            }
                        }
                    }, Xt = W.set3DTransformRatio = W.setTransformRatio = function(e) {
                        var t, i, n, r, a, o, s, l, c, h, u, d, p, m, v, g, y, _, x, b, w, T, M, E = this.data, S = this.t.style, A = E.rotation, P = E.rotationX, C = E.rotationY, L = E.scaleX, R = E.scaleY, O = E.scaleZ, I = E.x, D = E.y, U = E.z, F = E.svg, N = E.perspective, z = E.force3D, B = E.skewY, G = E.skewX;
                        if (B && (G += B,
                        A += B),
                        !(((1 !== e && 0 !== e || "auto" !== z || this.tween._totalTime !== this.tween._totalDuration && this.tween._totalTime) && z || U || N || C || P || 1 !== O) && (!At || !F) && Ot))
                            return void (A || G || F ? (A *= k,
                            T = G * k,
                            M = 1e5,
                            i = Math.cos(A) * L,
                            a = Math.sin(A) * L,
                            n = Math.sin(A - T) * -R,
                            o = Math.cos(A - T) * R,
                            T && "simple" === E.skewType && (t = Math.tan(T - B * k),
                            t = Math.sqrt(1 + t * t),
                            n *= t,
                            o *= t,
                            B && (t = Math.tan(B * k),
                            t = Math.sqrt(1 + t * t),
                            i *= t,
                            a *= t)),
                            F && (I += E.xOrigin - (E.xOrigin * i + E.yOrigin * n) + E.xOffset,
                            D += E.yOrigin - (E.xOrigin * a + E.yOrigin * o) + E.yOffset,
                            At && (E.xPercent || E.yPercent) && (v = this.t.getBBox(),
                            I += .01 * E.xPercent * v.width,
                            D += .01 * E.yPercent * v.height),
                            v = 1e-6,
                            v > I && I > -v && (I = 0),
                            v > D && D > -v && (D = 0)),
                            x = (i * M | 0) / M + "," + (a * M | 0) / M + "," + (n * M | 0) / M + "," + (o * M | 0) / M + "," + I + "," + D + ")",
                            F && At ? this.t.setAttribute("transform", "matrix(" + x) : S[Ct] = (E.xPercent || E.yPercent ? "translate(" + E.xPercent + "%," + E.yPercent + "%) matrix(" : "matrix(") + x) : S[Ct] = (E.xPercent || E.yPercent ? "translate(" + E.xPercent + "%," + E.yPercent + "%) matrix(" : "matrix(") + L + ",0,0," + R + "," + I + "," + D + ")");
                        if (f && (v = 1e-4,
                        v > L && L > -v && (L = O = 2e-5),
                        v > R && R > -v && (R = O = 2e-5),
                        !N || E.z || E.rotationX || E.rotationY || (N = 0)),
                        A || G)
                            A *= k,
                            g = i = Math.cos(A),
                            y = a = Math.sin(A),
                            G && (A -= G * k,
                            g = Math.cos(A),
                            y = Math.sin(A),
                            "simple" === E.skewType && (t = Math.tan((G - B) * k),
                            t = Math.sqrt(1 + t * t),
                            g *= t,
                            y *= t,
                            E.skewY && (t = Math.tan(B * k),
                            t = Math.sqrt(1 + t * t),
                            i *= t,
                            a *= t))),
                            n = -y,
                            o = g;
                        else {
                            if (!(C || P || 1 !== O || N || F))
                                return void (S[Ct] = (E.xPercent || E.yPercent ? "translate(" + E.xPercent + "%," + E.yPercent + "%) translate3d(" : "translate3d(") + I + "px," + D + "px," + U + "px)" + (1 !== L || 1 !== R ? " scale(" + L + "," + R + ")" : ""));
                            i = o = 1,
                            n = a = 0
                        }
                        h = 1,
                        r = s = l = c = u = d = 0,
                        p = N ? -1 / N : 0,
                        m = E.zOrigin,
                        v = 1e-6,
                        b = ",",
                        w = "0",
                        A = C * k,
                        A && (g = Math.cos(A),
                        y = Math.sin(A),
                        l = -y,
                        u = p * -y,
                        r = i * y,
                        s = a * y,
                        h = g,
                        p *= g,
                        i *= g,
                        a *= g),
                        A = P * k,
                        A && (g = Math.cos(A),
                        y = Math.sin(A),
                        t = n * g + r * y,
                        _ = o * g + s * y,
                        c = h * y,
                        d = p * y,
                        r = n * -y + r * g,
                        s = o * -y + s * g,
                        h *= g,
                        p *= g,
                        n = t,
                        o = _),
                        1 !== O && (r *= O,
                        s *= O,
                        h *= O,
                        p *= O),
                        1 !== R && (n *= R,
                        o *= R,
                        c *= R,
                        d *= R),
                        1 !== L && (i *= L,
                        a *= L,
                        l *= L,
                        u *= L),
                        (m || F) && (m && (I += r * -m,
                        D += s * -m,
                        U += h * -m + m),
                        F && (I += E.xOrigin - (E.xOrigin * i + E.yOrigin * n) + E.xOffset,
                        D += E.yOrigin - (E.xOrigin * a + E.yOrigin * o) + E.yOffset),
                        v > I && I > -v && (I = w),
                        v > D && D > -v && (D = w),
                        v > U && U > -v && (U = 0)),
                        x = E.xPercent || E.yPercent ? "translate(" + E.xPercent + "%," + E.yPercent + "%) matrix3d(" : "matrix3d(",
                        x += (v > i && i > -v ? w : i) + b + (v > a && a > -v ? w : a) + b + (v > l && l > -v ? w : l),
                        x += b + (v > u && u > -v ? w : u) + b + (v > n && n > -v ? w : n) + b + (v > o && o > -v ? w : o),
                        P || C || 1 !== O ? (x += b + (v > c && c > -v ? w : c) + b + (v > d && d > -v ? w : d) + b + (v > r && r > -v ? w : r),
                        x += b + (v > s && s > -v ? w : s) + b + (v > h && h > -v ? w : h) + b + (v > p && p > -v ? w : p) + b) : x += ",0,0,0,0,1,0,",
                        x += I + b + D + b + U + b + (N ? 1 + -U / N : 1) + ")",
                        S[Ct] = x
                    }
                    ;
                    h = It.prototype,
                    h.x = h.y = h.z = h.skewX = h.skewY = h.rotation = h.rotationX = h.rotationY = h.zOrigin = h.xPercent = h.yPercent = h.xOffset = h.yOffset = 0,
                    h.scaleX = h.scaleY = h.scaleZ = 1,
                    Et("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                        parser: function(e, t, i, n, r, o, l) {
                            if (n._lastParsedTransform === l)
                                return r;
                            n._lastParsedTransform = l;
                            var c, h = l.scale && "function" == typeof l.scale ? l.scale : 0;
                            "function" == typeof l[i] && (c = l[i],
                            l[i] = t),
                            h && (l.scale = h(y, e));
                            var u, d, p, f, m, v, _, x, b, w = e._gsTransform, T = e.style, M = 1e-6, E = Pt.length, S = l, A = {}, P = "transformOrigin", C = Vt(e, a, !0, S.parseTransform), L = S.transform && ("function" == typeof S.transform ? S.transform(y, g) : S.transform);
                            if (C.skewType = S.skewType || C.skewType || s.defaultSkewType,
                            n._transform = C,
                            L && "string" == typeof L && Ct)
                                d = j.style,
                                d[Ct] = L,
                                d.display = "block",
                                d.position = "absolute",
                                G.body.appendChild(j),
                                u = Vt(j, null, !1),
                                "simple" === C.skewType && (u.scaleY *= Math.cos(u.skewX * k)),
                                C.svg && (v = C.xOrigin,
                                _ = C.yOrigin,
                                u.x -= C.xOffset,
                                u.y -= C.yOffset,
                                (S.transformOrigin || S.svgOrigin) && (L = {},
                                Nt(e, lt(S.transformOrigin), L, S.svgOrigin, S.smoothOrigin, !0),
                                v = L.xOrigin,
                                _ = L.yOrigin,
                                u.x -= L.xOffset - C.xOffset,
                                u.y -= L.yOffset - C.yOffset),
                                (v || _) && (x = jt(j, !0),
                                u.x -= v - (v * x[0] + _ * x[2]),
                                u.y -= _ - (v * x[1] + _ * x[3]))),
                                G.body.removeChild(j),
                                u.perspective || (u.perspective = C.perspective),
                                null != S.xPercent && (u.xPercent = ht(S.xPercent, C.xPercent)),
                                null != S.yPercent && (u.yPercent = ht(S.yPercent, C.yPercent));
                            else if ("object" == typeof S) {
                                if (u = {
                                    scaleX: ht(null != S.scaleX ? S.scaleX : S.scale, C.scaleX),
                                    scaleY: ht(null != S.scaleY ? S.scaleY : S.scale, C.scaleY),
                                    scaleZ: ht(S.scaleZ, C.scaleZ),
                                    x: ht(S.x, C.x),
                                    y: ht(S.y, C.y),
                                    z: ht(S.z, C.z),
                                    xPercent: ht(S.xPercent, C.xPercent),
                                    yPercent: ht(S.yPercent, C.yPercent),
                                    perspective: ht(S.transformPerspective, C.perspective)
                                },
                                m = S.directionalRotation,
                                null != m)
                                    if ("object" == typeof m)
                                        for (d in m)
                                            S[d] = m[d];
                                    else
                                        S.rotation = m;
                                "string" == typeof S.x && -1 !== S.x.indexOf("%") && (u.x = 0,
                                u.xPercent = ht(S.x, C.xPercent)),
                                "string" == typeof S.y && -1 !== S.y.indexOf("%") && (u.y = 0,
                                u.yPercent = ht(S.y, C.yPercent)),
                                u.rotation = ut("rotation"in S ? S.rotation : "shortRotation"in S ? S.shortRotation + "_short" : "rotationZ"in S ? S.rotationZ : C.rotation, C.rotation, "rotation", A),
                                Ot && (u.rotationX = ut("rotationX"in S ? S.rotationX : "shortRotationX"in S ? S.shortRotationX + "_short" : C.rotationX || 0, C.rotationX, "rotationX", A),
                                u.rotationY = ut("rotationY"in S ? S.rotationY : "shortRotationY"in S ? S.shortRotationY + "_short" : C.rotationY || 0, C.rotationY, "rotationY", A)),
                                u.skewX = ut(S.skewX, C.skewX),
                                u.skewY = ut(S.skewY, C.skewY)
                            }
                            for (Ot && null != S.force3D && (C.force3D = S.force3D,
                            f = !0),
                            p = C.force3D || C.z || C.rotationX || C.rotationY || u.z || u.rotationX || u.rotationY || u.perspective,
                            p || null == S.scale || (u.scaleZ = 1); --E > -1; )
                                b = Pt[E],
                                L = u[b] - C[b],
                                (L > M || -M > L || null != S[b] || null != z[b]) && (f = !0,
                                r = new xt(C,b,C[b],L,r),
                                b in A && (r.e = A[b]),
                                r.xs0 = 0,
                                r.plugin = o,
                                n._overwriteProps.push(r.n));
                            return L = S.transformOrigin,
                            C.svg && (L || S.svgOrigin) && (v = C.xOffset,
                            _ = C.yOffset,
                            Nt(e, lt(L), u, S.svgOrigin, S.smoothOrigin),
                            r = bt(C, "xOrigin", (w ? C : u).xOrigin, u.xOrigin, r, P),
                            r = bt(C, "yOrigin", (w ? C : u).yOrigin, u.yOrigin, r, P),
                            (v !== C.xOffset || _ !== C.yOffset) && (r = bt(C, "xOffset", w ? v : C.xOffset, C.xOffset, r, P),
                            r = bt(C, "yOffset", w ? _ : C.yOffset, C.yOffset, r, P)),
                            L = "0px 0px"),
                            (L || Ot && p && C.zOrigin) && (Ct ? (f = !0,
                            b = Rt,
                            L = (L || et(e, b, a, !1, "50% 50%")) + "",
                            r = new xt(T,b,0,0,r,-1,P),
                            r.b = T[b],
                            r.plugin = o,
                            Ot ? (d = C.zOrigin,
                            L = L.split(" "),
                            C.zOrigin = (L.length > 2 && (0 === d || "0px" !== L[2]) ? parseFloat(L[2]) : d) || 0,
                            r.xs0 = r.e = L[0] + " " + (L[1] || "50%") + " 0px",
                            r = new xt(C,"zOrigin",0,0,r,-1,r.n),
                            r.b = d,
                            r.xs0 = r.e = C.zOrigin) : r.xs0 = r.e = L) : lt(L + "", C)),
                            f && (n._transformType = C.svg && At || !p && 3 !== this._transformType ? 2 : 3),
                            c && (l[i] = c),
                            h && (l.scale = h),
                            r
                        },
                        prefix: !0
                    }),
                    Et("boxShadow", {
                        defaultValue: "0px 0px 0px 0px #999",
                        prefix: !0,
                        color: !0,
                        multi: !0,
                        keyword: "inset"
                    }),
                    Et("borderRadius", {
                        defaultValue: "0px",
                        parser: function(e, t, i, n, o) {
                            t = this.format(t);
                            var s, l, c, h, u, d, p, f, m, v, g, y, _, x, b, w, T = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], M = e.style;
                            for (m = parseFloat(e.offsetWidth),
                            v = parseFloat(e.offsetHeight),
                            s = t.split(" "),
                            l = 0; l < T.length; l++)
                                this.p.indexOf("border") && (T[l] = K(T[l])),
                                u = h = et(e, T[l], a, !1, "0px"),
                                -1 !== u.indexOf(" ") && (h = u.split(" "),
                                u = h[0],
                                h = h[1]),
                                d = c = s[l],
                                p = parseFloat(u),
                                y = u.substr((p + "").length),
                                _ = "=" === d.charAt(1),
                                _ ? (f = parseInt(d.charAt(0) + "1", 10),
                                d = d.substr(2),
                                f *= parseFloat(d),
                                g = d.substr((f + "").length - (0 > f ? 1 : 0)) || "") : (f = parseFloat(d),
                                g = d.substr((f + "").length)),
                                "" === g && (g = r[i] || y),
                                g !== y && (x = tt(e, "borderLeft", p, y),
                                b = tt(e, "borderTop", p, y),
                                "%" === g ? (u = x / m * 100 + "%",
                                h = b / v * 100 + "%") : "em" === g ? (w = tt(e, "borderLeft", 1, "em"),
                                u = x / w + "em",
                                h = b / w + "em") : (u = x + "px",
                                h = b + "px"),
                                _ && (d = parseFloat(u) + f + g,
                                c = parseFloat(h) + f + g)),
                                o = wt(M, T[l], u + " " + h, d + " " + c, !1, "0px", o);
                            return o
                        },
                        prefix: !0,
                        formatter: gt("0px 0px 0px 0px", !1, !0)
                    }),
                    Et("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                        defaultValue: "0px",
                        parser: function(e, t, i, n, r) {
                            return wt(e.style, i, this.format(et(e, i, a, !1, "0px 0px")), this.format(t), !1, "0px", r)
                        },
                        prefix: !0,
                        formatter: gt("0px 0px", !1, !0)
                    }),
                    Et("backgroundPosition", {
                        defaultValue: "0 0",
                        parser: function(e, t, i, n, r, o) {
                            var s, l, c, h, u, d, p = "background-position", f = a || $(e, null), m = this.format((f ? v ? f.getPropertyValue(p + "-x") + " " + f.getPropertyValue(p + "-y") : f.getPropertyValue(p) : e.currentStyle.backgroundPositionX + " " + e.currentStyle.backgroundPositionY) || "0 0"), g = this.format(t);
                            if (-1 !== m.indexOf("%") != (-1 !== g.indexOf("%")) && g.split(",").length < 2 && (d = et(e, "backgroundImage").replace(L, ""),
                            d && "none" !== d)) {
                                for (s = m.split(" "),
                                l = g.split(" "),
                                V.setAttribute("src", d),
                                c = 2; --c > -1; )
                                    m = s[c],
                                    h = -1 !== m.indexOf("%"),
                                    h !== (-1 !== l[c].indexOf("%")) && (u = 0 === c ? e.offsetWidth - V.width : e.offsetHeight - V.height,
                                    s[c] = h ? parseFloat(m) / 100 * u + "px" : parseFloat(m) / u * 100 + "%");
                                m = s.join(" ")
                            }
                            return this.parseComplex(e.style, m, g, r, o)
                        },
                        formatter: lt
                    }),
                    Et("backgroundSize", {
                        defaultValue: "0 0",
                        formatter: function(e) {
                            return e += "",
                            lt(-1 === e.indexOf(" ") ? e + " " + e : e)
                        }
                    }),
                    Et("perspective", {
                        defaultValue: "0px",
                        prefix: !0
                    }),
                    Et("perspectiveOrigin", {
                        defaultValue: "50% 50%",
                        prefix: !0
                    }),
                    Et("transformStyle", {
                        prefix: !0
                    }),
                    Et("backfaceVisibility", {
                        prefix: !0
                    }),
                    Et("userSelect", {
                        prefix: !0
                    }),
                    Et("margin", {
                        parser: yt("marginTop,marginRight,marginBottom,marginLeft")
                    }),
                    Et("padding", {
                        parser: yt("paddingTop,paddingRight,paddingBottom,paddingLeft")
                    }),
                    Et("clip", {
                        defaultValue: "rect(0px,0px,0px,0px)",
                        parser: function(e, t, i, n, r, o) {
                            var s, l, c;
                            return 9 > v ? (l = e.currentStyle,
                            c = 8 > v ? " " : ",",
                            s = "rect(" + l.clipTop + c + l.clipRight + c + l.clipBottom + c + l.clipLeft + ")",
                            t = this.format(t).split(",").join(c)) : (s = this.format(et(e, this.p, a, !1, this.dflt)),
                            t = this.format(t)),
                            this.parseComplex(e.style, s, t, r, o)
                        }
                    }),
                    Et("textShadow", {
                        defaultValue: "0px 0px 0px #999",
                        color: !0,
                        multi: !0
                    }),
                    Et("autoRound,strictUnits", {
                        parser: function(e, t, i, n, r) {
                            return r
                        }
                    }),
                    Et("border", {
                        defaultValue: "0px solid #000",
                        parser: function(e, t, i, n, r, o) {
                            var s = et(e, "borderTopWidth", a, !1, "0px")
                              , l = this.format(t).split(" ")
                              , c = l[0].replace(T, "");
                            return "px" !== c && (s = parseFloat(s) / tt(e, "borderTopWidth", 1, c) + c),
                            this.parseComplex(e.style, this.format(s + " " + et(e, "borderTopStyle", a, !1, "solid") + " " + et(e, "borderTopColor", a, !1, "#000")), l.join(" "), r, o)
                        },
                        color: !0,
                        formatter: function(e) {
                            var t = e.split(" ");
                            return t[0] + " " + (t[1] || "solid") + " " + (e.match(vt) || ["#000"])[0]
                        }
                    }),
                    Et("borderWidth", {
                        parser: yt("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                    }),
                    Et("float,cssFloat,styleFloat", {
                        parser: function(e, t, i, n, r) {
                            var a = e.style
                              , o = "cssFloat"in a ? "cssFloat" : "styleFloat";
                            return new xt(a,o,0,0,r,-1,i,!1,0,a[o],t)
                        }
                    });
                    var Yt = function(e) {
                        var t, i = this.t, n = i.filter || et(this.data, "filter") || "", r = this.s + this.c * e | 0;
                        100 === r && (-1 === n.indexOf("atrix(") && -1 === n.indexOf("radient(") && -1 === n.indexOf("oader(") ? (i.removeAttribute("filter"),
                        t = !et(this.data, "filter")) : (i.filter = n.replace(S, ""),
                        t = !0)),
                        t || (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"),
                        -1 === n.indexOf("pacity") ? 0 === r && this.xn1 || (i.filter = n + " alpha(opacity=" + r + ")") : i.filter = n.replace(M, "opacity=" + r))
                    };
                    Et("opacity,alpha,autoAlpha", {
                        defaultValue: "1",
                        parser: function(e, t, i, n, r, o) {
                            var s = parseFloat(et(e, "opacity", a, !1, "1"))
                              , l = e.style
                              , c = "autoAlpha" === i;
                            return "string" == typeof t && "=" === t.charAt(1) && (t = ("-" === t.charAt(0) ? -1 : 1) * parseFloat(t.substr(2)) + s),
                            c && 1 === s && "hidden" === et(e, "visibility", a) && 0 !== t && (s = 0),
                            Y ? r = new xt(l,"opacity",s,t - s,r) : (r = new xt(l,"opacity",100 * s,100 * (t - s),r),
                            r.xn1 = c ? 1 : 0,
                            l.zoom = 1,
                            r.type = 2,
                            r.b = "alpha(opacity=" + r.s + ")",
                            r.e = "alpha(opacity=" + (r.s + r.c) + ")",
                            r.data = e,
                            r.plugin = o,
                            r.setRatio = Yt),
                            c && (r = new xt(l,"visibility",0,0,r,-1,null,!1,0,0 !== s ? "inherit" : "hidden",0 === t ? "hidden" : "inherit"),
                            r.xs0 = "inherit",
                            n._overwriteProps.push(r.n),
                            n._overwriteProps.push(i)),
                            r
                        }
                    });
                    var qt = function(e, t) {
                        t && (e.removeProperty ? (("ms" === t.substr(0, 2) || "webkit" === t.substr(0, 6)) && (t = "-" + t),
                        e.removeProperty(t.replace(P, "-$1").toLowerCase())) : e.removeAttribute(t))
                    }
                      , Zt = function(e) {
                        if (this.t._gsClassPT = this,
                        1 === e || 0 === e) {
                            this.t.setAttribute("class", 0 === e ? this.b : this.e);
                            for (var t = this.data, i = this.t.style; t; )
                                t.v ? i[t.p] = t.v : qt(i, t.p),
                                t = t._next;
                            1 === e && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                        } else
                            this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                    };
                    Et("className", {
                        parser: function(e, t, i, r, o, s, l) {
                            var c, h, u, d, p, f = e.getAttribute("class") || "", m = e.style.cssText;
                            if (o = r._classNamePT = new xt(e,i,0,0,o,2),
                            o.setRatio = Zt,
                            o.pr = -11,
                            n = !0,
                            o.b = f,
                            h = nt(e, a),
                            u = e._gsClassPT) {
                                for (d = {},
                                p = u.data; p; )
                                    d[p.p] = 1,
                                    p = p._next;
                                u.setRatio(1)
                            }
                            return e._gsClassPT = o,
                            o.e = "=" !== t.charAt(1) ? t : f.replace(new RegExp("(?:\\s|^)" + t.substr(2) + "(?![\\w-])"), "") + ("+" === t.charAt(0) ? " " + t.substr(2) : ""),
                            e.setAttribute("class", o.e),
                            c = rt(e, h, nt(e), l, d),
                            e.setAttribute("class", f),
                            o.data = c.firstMPT,
                            e.style.cssText = m,
                            o = o.xfirst = r.parse(e, c.difs, o, s)
                        }
                    });
                    var Qt = function(e) {
                        if ((1 === e || 0 === e) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                            var t, i, n, r, a, o = this.t.style, s = c.transform.parse;
                            if ("all" === this.e)
                                o.cssText = "",
                                r = !0;
                            else
                                for (t = this.e.split(" ").join("").split(","),
                                n = t.length; --n > -1; )
                                    i = t[n],
                                    c[i] && (c[i].parse === s ? r = !0 : i = "transformOrigin" === i ? Rt : c[i].p),
                                    qt(o, i);
                            r && (qt(o, Ct),
                            a = this.t._gsTransform,
                            a && (a.svg && (this.t.removeAttribute("data-svg-origin"),
                            this.t.removeAttribute("transform")),
                            delete this.t._gsTransform))
                        }
                    };
                    for (Et("clearProps", {
                        parser: function(e, t, i, r, a) {
                            return a = new xt(e,i,0,0,a,2),
                            a.setRatio = Qt,
                            a.e = t,
                            a.pr = -10,
                            a.data = r._tween,
                            n = !0,
                            a
                        }
                    }),
                    h = "bezier,throwProps,physicsProps,physics2D".split(","),
                    Tt = h.length; Tt--; )
                        St(h[Tt]);
                    h = s.prototype,
                    h._firstPT = h._lastParsedTransform = h._transform = null,
                    h._onInitTween = function(e, t, i, l) {
                        if (!e.nodeType)
                            return !1;
                        this._target = g = e,
                        this._tween = i,
                        this._vars = t,
                        y = l,
                        u = t.autoRound,
                        n = !1,
                        r = t.suffixMap || s.suffixMap,
                        a = $(e, ""),
                        o = this._overwriteProps;
                        var h, f, v, _, x, b, w, T, M, S = e.style;
                        if (d && "" === S.zIndex && (h = et(e, "zIndex", a),
                        ("auto" === h || "" === h) && this._addLazySet(S, "zIndex", 0)),
                        "string" == typeof t && (_ = S.cssText,
                        h = nt(e, a),
                        S.cssText = _ + ";" + t,
                        h = rt(e, h, nt(e)).difs,
                        !Y && E.test(t) && (h.opacity = parseFloat(RegExp.$1)),
                        t = h,
                        S.cssText = _),
                        this._firstPT = f = t.className ? c.className.parse(e, t.className, "className", this, null, null, t) : this.parse(e, t, null),
                        this._transformType) {
                            for (M = 3 === this._transformType,
                            Ct ? p && (d = !0,
                            "" === S.zIndex && (w = et(e, "zIndex", a),
                            ("auto" === w || "" === w) && this._addLazySet(S, "zIndex", 0)),
                            m && this._addLazySet(S, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (M ? "visible" : "hidden"))) : S.zoom = 1,
                            v = f; v && v._next; )
                                v = v._next;
                            T = new xt(e,"transform",0,0,null,2),
                            this._linkCSSP(T, null, v),
                            T.setRatio = Ct ? Xt : Wt,
                            T.data = this._transform || Vt(e, a, !0),
                            T.tween = i,
                            T.pr = -1,
                            o.pop()
                        }
                        if (n) {
                            for (; f; ) {
                                for (b = f._next,
                                v = _; v && v.pr > f.pr; )
                                    v = v._next;
                                (f._prev = v ? v._prev : x) ? f._prev._next = f : _ = f,
                                (f._next = v) ? v._prev = f : x = f,
                                f = b
                            }
                            this._firstPT = _
                        }
                        return !0
                    }
                    ,
                    h.parse = function(e, t, i, n) {
                        var o, s, l, h, d, p, f, m, v, _, x = e.style;
                        for (o in t) {
                            if (p = t[o],
                            "function" == typeof p && (p = p(y, g)),
                            s = c[o])
                                i = s.parse(e, p, o, this, i, n, t);
                            else {
                                if ("--" === o.substr(0, 2)) {
                                    this._tween._propLookup[o] = this._addTween.call(this._tween, e.style, "setProperty", $(e).getPropertyValue(o) + "", p + "", o, !1, o);
                                    continue
                                }
                                d = et(e, o, a) + "",
                                v = "string" == typeof p,
                                "color" === o || "fill" === o || "stroke" === o || -1 !== o.indexOf("Color") || v && A.test(p) ? (v || (p = ft(p),
                                p = (p.length > 3 ? "rgba(" : "rgb(") + p.join(",") + ")"),
                                i = wt(x, o, d, p, !0, "transparent", i, 0, n)) : v && F.test(p) ? i = wt(x, o, d, p, !0, null, i, 0, n) : (l = parseFloat(d),
                                f = l || 0 === l ? d.substr((l + "").length) : "",
                                ("" === d || "auto" === d) && ("width" === o || "height" === o ? (l = st(e, o, a),
                                f = "px") : "left" === o || "top" === o ? (l = it(e, o, a),
                                f = "px") : (l = "opacity" !== o ? 0 : 1,
                                f = "")),
                                _ = v && "=" === p.charAt(1),
                                _ ? (h = parseInt(p.charAt(0) + "1", 10),
                                p = p.substr(2),
                                h *= parseFloat(p),
                                m = p.replace(T, "")) : (h = parseFloat(p),
                                m = v ? p.replace(T, "") : ""),
                                "" === m && (m = o in r ? r[o] : f),
                                p = h || 0 === h ? (_ ? h + l : h) + m : t[o],
                                f !== m && ("" !== m || "lineHeight" === o) && (h || 0 === h) && l && (l = tt(e, o, l, f),
                                "%" === m ? (l /= tt(e, o, 100, "%") / 100,
                                t.strictUnits !== !0 && (d = l + "%")) : "em" === m || "rem" === m || "vw" === m || "vh" === m ? l /= tt(e, o, 1, m) : "px" !== m && (h = tt(e, o, h, m),
                                m = "px"),
                                _ && (h || 0 === h) && (p = h + l + m)),
                                _ && (h += l),
                                !l && 0 !== l || !h && 0 !== h ? void 0 !== x[o] && (p || p + "" != "NaN" && null != p) ? (i = new xt(x,o,h || l || 0,0,i,-1,o,!1,0,d,p),
                                i.xs0 = "none" !== p || "display" !== o && -1 === o.indexOf("Style") ? p : d) : Z("invalid " + o + " tween value: " + t[o]) : (i = new xt(x,o,l,h - l,i,0,o,u !== !1 && ("px" === m || "zIndex" === o),0,d,p),
                                i.xs0 = m))
                            }
                            n && i && !i.plugin && (i.plugin = n)
                        }
                        return i
                    }
                    ,
                    h.setRatio = function(e) {
                        var t, i, n, r = this._firstPT, a = 1e-6;
                        if (1 !== e || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                            if (e || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
                                for (; r; ) {
                                    if (t = r.c * e + r.s,
                                    r.r ? t = Math.round(t) : a > t && t > -a && (t = 0),
                                    r.type)
                                        if (1 === r.type)
                                            if (n = r.l,
                                            2 === n)
                                                r.t[r.p] = r.xs0 + t + r.xs1 + r.xn1 + r.xs2;
                                            else if (3 === n)
                                                r.t[r.p] = r.xs0 + t + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                                            else if (4 === n)
                                                r.t[r.p] = r.xs0 + t + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                                            else if (5 === n)
                                                r.t[r.p] = r.xs0 + t + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                                            else {
                                                for (i = r.xs0 + t + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        else
                                            -1 === r.type ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(e);
                                    else
                                        r.t[r.p] = t + r.xs0;
                                    r = r._next
                                }
                            else
                                for (; r; )
                                    2 !== r.type ? r.t[r.p] = r.b : r.setRatio(e),
                                    r = r._next;
                        else
                            for (; r; ) {
                                if (2 !== r.type)
                                    if (r.r && -1 !== r.type)
                                        if (t = Math.round(r.s + r.c),
                                        r.type) {
                                            if (1 === r.type) {
                                                for (n = r.l,
                                                i = r.xs0 + t + r.xs1,
                                                n = 1; n < r.l; n++)
                                                    i += r["xn" + n] + r["xs" + (n + 1)];
                                                r.t[r.p] = i
                                            }
                                        } else
                                            r.t[r.p] = t + r.xs0;
                                    else
                                        r.t[r.p] = r.e;
                                else
                                    r.setRatio(e);
                                r = r._next
                            }
                    }
                    ,
                    h._enableTransforms = function(e) {
                        this._transform = this._transform || Vt(this._target, a, !0),
                        this._transformType = this._transform.svg && At || !e && 3 !== this._transformType ? 2 : 3
                    }
                    ;
                    var Jt = function() {
                        this.t[this.p] = this.e,
                        this.data._linkCSSP(this, this._next, null, !0)
                    };
                    h._addLazySet = function(e, t, i) {
                        var n = this._firstPT = new xt(e,t,0,0,this._firstPT,2);
                        n.e = i,
                        n.setRatio = Jt,
                        n.data = this
                    }
                    ,
                    h._linkCSSP = function(e, t, i, n) {
                        return e && (t && (t._prev = e),
                        e._next && (e._next._prev = e._prev),
                        e._prev ? e._prev._next = e._next : this._firstPT === e && (this._firstPT = e._next,
                        n = !0),
                        i ? i._next = e : n || null !== this._firstPT || (this._firstPT = e),
                        e._next = t,
                        e._prev = i),
                        e
                    }
                    ,
                    h._mod = function(e) {
                        for (var t = this._firstPT; t; )
                            "function" == typeof e[t.p] && e[t.p] === Math.round && (t.r = 1),
                            t = t._next
                    }
                    ,
                    h._kill = function(t) {
                        var i, n, r, a = t;
                        if (t.autoAlpha || t.alpha) {
                            a = {};
                            for (n in t)
                                a[n] = t[n];
                            a.opacity = 1,
                            a.autoAlpha && (a.visibility = 1)
                        }
                        for (t.className && (i = this._classNamePT) && (r = i.xfirst,
                        r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next),
                        i._next && this._linkCSSP(i._next, i._next._next, r._prev),
                        this._classNamePT = null),
                        i = this._firstPT; i; )
                            i.plugin && i.plugin !== n && i.plugin._kill && (i.plugin._kill(t),
                            n = i.plugin),
                            i = i._next;
                        return e.prototype._kill.call(this, a)
                    }
                    ;
                    var Kt = function(e, t, i) {
                        var n, r, a, o;
                        if (e.slice)
                            for (r = e.length; --r > -1; )
                                Kt(e[r], t, i);
                        else
                            for (n = e.childNodes,
                            r = n.length; --r > -1; )
                                a = n[r],
                                o = a.type,
                                a.style && (t.push(nt(a)),
                                i && i.push(a)),
                                1 !== o && 9 !== o && 11 !== o || !a.childNodes.length || Kt(a, t, i)
                    };
                    return s.cascadeTo = function(e, i, n) {
                        var r, a, o, s, l = t.to(e, i, n), c = [l], h = [], u = [], d = [], p = t._internals.reservedProps;
                        for (e = l._targets || l.target,
                        Kt(e, h, d),
                        l.render(i, !0, !0),
                        Kt(e, u),
                        l.render(0, !0, !0),
                        l._enabled(!0),
                        r = d.length; --r > -1; )
                            if (a = rt(d[r], h[r], u[r]),
                            a.firstMPT) {
                                a = a.difs;
                                for (o in n)
                                    p[o] && (a[o] = n[o]);
                                s = {};
                                for (o in a)
                                    s[o] = h[r][o];
                                c.push(t.fromTo(d[r], i, s, a))
                            }
                        return c
                    }
                    ,
                    e.activate([s]),
                    s
                }, !0),
                function() {
                    var e = i._gsDefine.plugin({
                        propName: "roundProps",
                        version: "1.6.0",
                        priority: -1,
                        API: 2,
                        init: function(e, t, i) {
                            return this._tween = i,
                            !0
                        }
                    })
                      , t = function(e) {
                        for (; e; )
                            e.f || e.blob || (e.m = Math.round),
                            e = e._next
                    }
                      , n = e.prototype;
                    n._onInitAllProps = function() {
                        for (var e, i, n, r = this._tween, a = r.vars.roundProps.join ? r.vars.roundProps : r.vars.roundProps.split(","), o = a.length, s = {}, l = r._propLookup.roundProps; --o > -1; )
                            s[a[o]] = Math.round;
                        for (o = a.length; --o > -1; )
                            for (e = a[o],
                            i = r._firstPT; i; )
                                n = i._next,
                                i.pg ? i.t._mod(s) : i.n === e && (2 === i.f && i.t ? t(i.t._firstPT) : (this._add(i.t, e, i.s, i.c),
                                n && (n._prev = i._prev),
                                i._prev ? i._prev._next = n : r._firstPT === i && (r._firstPT = n),
                                i._next = i._prev = null,
                                r._propLookup[e] = l)),
                                i = n;
                        return !1
                    }
                    ,
                    n._add = function(e, t, i, n) {
                        this._addTween(e, t, i, i + n, t, Math.round),
                        this._overwriteProps.push(t)
                    }
                }(),
                function() {
                    i._gsDefine.plugin({
                        propName: "attr",
                        API: 2,
                        version: "0.6.1",
                        init: function(e, t, i, n) {
                            var r, a;
                            if ("function" != typeof e.setAttribute)
                                return !1;
                            for (r in t)
                                a = t[r],
                                "function" == typeof a && (a = a(n, e)),
                                this._addTween(e, "setAttribute", e.getAttribute(r) + "", a + "", r, !1, r),
                                this._overwriteProps.push(r);
                            return !0
                        }
                    })
                }(),
                i._gsDefine.plugin({
                    propName: "directionalRotation",
                    version: "0.3.1",
                    API: 2,
                    init: function(e, t, i, n) {
                        "object" != typeof t && (t = {
                            rotation: t
                        }),
                        this.finals = {};
                        var r, a, o, s, l, c, h = t.useRadians === !0 ? 2 * Math.PI : 360, u = 1e-6;
                        for (r in t)
                            "useRadians" !== r && (s = t[r],
                            "function" == typeof s && (s = s(n, e)),
                            c = (s + "").split("_"),
                            a = c[0],
                            o = parseFloat("function" != typeof e[r] ? e[r] : e[r.indexOf("set") || "function" != typeof e["get" + r.substr(3)] ? r : "get" + r.substr(3)]()),
                            s = this.finals[r] = "string" == typeof a && "=" === a.charAt(1) ? o + parseInt(a.charAt(0) + "1", 10) * Number(a.substr(2)) : Number(a) || 0,
                            l = s - o,
                            c.length && (a = c.join("_"),
                            -1 !== a.indexOf("short") && (l %= h,
                            l !== l % (h / 2) && (l = 0 > l ? l + h : l - h)),
                            -1 !== a.indexOf("_cw") && 0 > l ? l = (l + 9999999999 * h) % h - (l / h | 0) * h : -1 !== a.indexOf("ccw") && l > 0 && (l = (l - 9999999999 * h) % h - (l / h | 0) * h)),
                            (l > u || -u > l) && (this._addTween(e, r, o, o + l, r),
                            this._overwriteProps.push(r)));
                        return !0
                    },
                    set: function(e) {
                        var t;
                        if (1 !== e)
                            this._super.setRatio.call(this, e);
                        else
                            for (t = this._firstPT; t; )
                                t.f ? t.t[t.p](this.finals[t.p]) : t.t[t.p] = this.finals[t.p],
                                t = t._next
                    }
                })._autoCSS = !0,
                i._gsDefine("easing.Back", ["easing.Ease"], function(e) {
                    var t, n, r, a = i.GreenSockGlobals || i, o = a.com.greensock, s = 2 * Math.PI, l = Math.PI / 2, c = o._class, h = function(t, i) {
                        var n = c("easing." + t, function() {}, !0)
                          , r = n.prototype = new e;
                        return r.constructor = n,
                        r.getRatio = i,
                        n
                    }, u = e.register || function() {}
                    , d = function(e, t, i, n) {
                        var r = c("easing." + e, {
                            easeOut: new t,
                            easeIn: new i,
                            easeInOut: new n
                        }, !0);
                        return u(r, e),
                        r
                    }, p = function(e, t, i) {
                        this.t = e,
                        this.v = t,
                        i && (this.next = i,
                        i.prev = this,
                        this.c = i.v - t,
                        this.gap = i.t - e)
                    }, f = function(t, i) {
                        var n = c("easing." + t, function(e) {
                            this._p1 = e || 0 === e ? e : 1.70158,
                            this._p2 = 1.525 * this._p1
                        }, !0)
                          , r = n.prototype = new e;
                        return r.constructor = n,
                        r.getRatio = i,
                        r.config = function(e) {
                            return new n(e)
                        }
                        ,
                        n
                    }, m = d("Back", f("BackOut", function(e) {
                        return (e -= 1) * e * ((this._p1 + 1) * e + this._p1) + 1
                    }), f("BackIn", function(e) {
                        return e * e * ((this._p1 + 1) * e - this._p1)
                    }), f("BackInOut", function(e) {
                        return (e *= 2) < 1 ? .5 * e * e * ((this._p2 + 1) * e - this._p2) : .5 * ((e -= 2) * e * ((this._p2 + 1) * e + this._p2) + 2)
                    })), v = c("easing.SlowMo", function(e, t, i) {
                        t = t || 0 === t ? t : .7,
                        null == e ? e = .7 : e > 1 && (e = 1),
                        this._p = 1 !== e ? t : 0,
                        this._p1 = (1 - e) / 2,
                        this._p2 = e,
                        this._p3 = this._p1 + this._p2,
                        this._calcEnd = i === !0
                    }, !0), g = v.prototype = new e;
                    return g.constructor = v,
                    g.getRatio = function(e) {
                        var t = e + (.5 - e) * this._p;
                        return e < this._p1 ? this._calcEnd ? 1 - (e = 1 - e / this._p1) * e : t - (e = 1 - e / this._p1) * e * e * e * t : e > this._p3 ? this._calcEnd ? 1 === e ? 0 : 1 - (e = (e - this._p3) / this._p1) * e : t + (e - t) * (e = (e - this._p3) / this._p1) * e * e * e : this._calcEnd ? 1 : t
                    }
                    ,
                    v.ease = new v(.7,.7),
                    g.config = v.config = function(e, t, i) {
                        return new v(e,t,i)
                    }
                    ,
                    t = c("easing.SteppedEase", function(e, t) {
                        e = e || 1,
                        this._p1 = 1 / e,
                        this._p2 = e + (t ? 0 : 1),
                        this._p3 = t ? 1 : 0
                    }, !0),
                    g = t.prototype = new e,
                    g.constructor = t,
                    g.getRatio = function(e) {
                        return 0 > e ? e = 0 : e >= 1 && (e = .999999999),
                        ((this._p2 * e | 0) + this._p3) * this._p1
                    }
                    ,
                    g.config = t.config = function(e, i) {
                        return new t(e,i)
                    }
                    ,
                    n = c("easing.RoughEase", function(t) {
                        t = t || {};
                        for (var i, n, r, a, o, s, l = t.taper || "none", c = [], h = 0, u = 0 | (t.points || 20), d = u, f = t.randomize !== !1, m = t.clamp === !0, v = t.template instanceof e ? t.template : null, g = "number" == typeof t.strength ? .4 * t.strength : .4; --d > -1; )
                            i = f ? Math.random() : 1 / u * d,
                            n = v ? v.getRatio(i) : i,
                            "none" === l ? r = g : "out" === l ? (a = 1 - i,
                            r = a * a * g) : "in" === l ? r = i * i * g : .5 > i ? (a = 2 * i,
                            r = a * a * .5 * g) : (a = 2 * (1 - i),
                            r = a * a * .5 * g),
                            f ? n += Math.random() * r - .5 * r : d % 2 ? n += .5 * r : n -= .5 * r,
                            m && (n > 1 ? n = 1 : 0 > n && (n = 0)),
                            c[h++] = {
                                x: i,
                                y: n
                            };
                        for (c.sort(function(e, t) {
                            return e.x - t.x
                        }),
                        s = new p(1,1,null),
                        d = u; --d > -1; )
                            o = c[d],
                            s = new p(o.x,o.y,s);
                        this._prev = new p(0,0,0 !== s.t ? s : s.next)
                    }, !0),
                    g = n.prototype = new e,
                    g.constructor = n,
                    g.getRatio = function(e) {
                        var t = this._prev;
                        if (e > t.t) {
                            for (; t.next && e >= t.t; )
                                t = t.next;
                            t = t.prev
                        } else
                            for (; t.prev && e <= t.t; )
                                t = t.prev;
                        return this._prev = t,
                        t.v + (e - t.t) / t.gap * t.c
                    }
                    ,
                    g.config = function(e) {
                        return new n(e)
                    }
                    ,
                    n.ease = new n,
                    d("Bounce", h("BounceOut", function(e) {
                        return 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                    }), h("BounceIn", function(e) {
                        return (e = 1 - e) < 1 / 2.75 ? 1 - 7.5625 * e * e : 2 / 2.75 > e ? 1 - (7.5625 * (e -= 1.5 / 2.75) * e + .75) : 2.5 / 2.75 > e ? 1 - (7.5625 * (e -= 2.25 / 2.75) * e + .9375) : 1 - (7.5625 * (e -= 2.625 / 2.75) * e + .984375)
                    }), h("BounceInOut", function(e) {
                        var t = .5 > e;
                        return e = t ? 1 - 2 * e : 2 * e - 1,
                        e = 1 / 2.75 > e ? 7.5625 * e * e : 2 / 2.75 > e ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : 2.5 / 2.75 > e ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375,
                        t ? .5 * (1 - e) : .5 * e + .5
                    })),
                    d("Circ", h("CircOut", function(e) {
                        return Math.sqrt(1 - (e -= 1) * e)
                    }), h("CircIn", function(e) {
                        return -(Math.sqrt(1 - e * e) - 1)
                    }), h("CircInOut", function(e) {
                        return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                    })),
                    r = function(t, i, n) {
                        var r = c("easing." + t, function(e, t) {
                            this._p1 = e >= 1 ? e : 1,
                            this._p2 = (t || n) / (1 > e ? e : 1),
                            this._p3 = this._p2 / s * (Math.asin(1 / this._p1) || 0),
                            this._p2 = s / this._p2
                        }, !0)
                          , a = r.prototype = new e;
                        return a.constructor = r,
                        a.getRatio = i,
                        a.config = function(e, t) {
                            return new r(e,t)
                        }
                        ,
                        r
                    }
                    ,
                    d("Elastic", r("ElasticOut", function(e) {
                        return this._p1 * Math.pow(2, -10 * e) * Math.sin((e - this._p3) * this._p2) + 1
                    }, .3), r("ElasticIn", function(e) {
                        return -(this._p1 * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2))
                    }, .3), r("ElasticInOut", function(e) {
                        return (e *= 2) < 1 ? -.5 * this._p1 * Math.pow(2, 10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2) : this._p1 * Math.pow(2, -10 * (e -= 1)) * Math.sin((e - this._p3) * this._p2) * .5 + 1
                    }, .45)),
                    d("Expo", h("ExpoOut", function(e) {
                        return 1 - Math.pow(2, -10 * e)
                    }), h("ExpoIn", function(e) {
                        return Math.pow(2, 10 * (e - 1)) - .001
                    }), h("ExpoInOut", function(e) {
                        return (e *= 2) < 1 ? .5 * Math.pow(2, 10 * (e - 1)) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
                    })),
                    d("Sine", h("SineOut", function(e) {
                        return Math.sin(e * l)
                    }), h("SineIn", function(e) {
                        return -Math.cos(e * l) + 1
                    }), h("SineInOut", function(e) {
                        return -.5 * (Math.cos(Math.PI * e) - 1)
                    })),
                    c("easing.EaseLookup", {
                        find: function(t) {
                            return e.map[t]
                        }
                    }, !0),
                    u(a.SlowMo, "SlowMo", "ease,"),
                    u(n, "RoughEase", "ease,"),
                    u(t, "SteppedEase", "ease,"),
                    m
                }, !0)
            }),
            i._gsDefine && i._gsQueue.pop()(),
            function(e, i) {
                "use strict";
                var n = {}
                  , r = e.document
                  , a = e.GreenSockGlobals = e.GreenSockGlobals || e;
                if (!a.TweenLite) {
                    var o, s, l, c, h, u = function(e) {
                        var t, i = e.split("."), n = a;
                        for (t = 0; t < i.length; t++)
                            n[i[t]] = n = n[i[t]] || {};
                        return n
                    }, d = u("com.greensock"), p = 1e-10, f = function(e) {
                        var t, i = [], n = e.length;
                        for (t = 0; t !== n; i.push(e[t++]))
                            ;
                        return i
                    }, m = function() {}, v = function() {
                        var e = Object.prototype.toString
                          , t = e.call([]);
                        return function(i) {
                            return null != i && (i instanceof Array || "object" == typeof i && !!i.push && e.call(i) === t)
                        }
                    }(), g = {}, y = function(r, o, s, l) {
                        this.sc = g[r] ? g[r].sc : [],
                        g[r] = this,
                        this.gsClass = null,
                        this.func = s;
                        var c = [];
                        this.check = function(h) {
                            for (var d, p, f, m, v = o.length, _ = v; --v > -1; )
                                (d = g[o[v]] || new y(o[v],[])).gsClass ? (c[v] = d.gsClass,
                                _--) : h && d.sc.push(this);
                            if (0 === _ && s) {
                                if (p = ("com.greensock." + r).split("."),
                                f = p.pop(),
                                m = u(p.join("."))[f] = this.gsClass = s.apply(s, c),
                                l)
                                    if (a[f] = n[f] = m,
                                    "undefined" != typeof t && t.exports)
                                        if (r === i) {
                                            t.exports = n[i] = m;
                                            for (v in n)
                                                m[v] = n[v]
                                        } else
                                            n[i] && (n[i][f] = m);
                                    else
                                        "function" == typeof define && define.amd && define((e.GreenSockAMDPath ? e.GreenSockAMDPath + "/" : "") + r.split(".").pop(), [], function() {
                                            return m
                                        });
                                for (v = 0; v < this.sc.length; v++)
                                    this.sc[v].check()
                            }
                        }
                        ,
                        this.check(!0)
                    }, _ = e._gsDefine = function(e, t, i, n) {
                        return new y(e,t,i,n)
                    }
                    , x = d._class = function(e, t, i) {
                        return t = t || function() {}
                        ,
                        _(e, [], function() {
                            return t
                        }, i),
                        t
                    }
                    ;
                    _.globals = a;
                    var b = [0, 0, 1, 1]
                      , w = x("easing.Ease", function(e, t, i, n) {
                        this._func = e,
                        this._type = i || 0,
                        this._power = n || 0,
                        this._params = t ? b.concat(t) : b
                    }, !0)
                      , T = w.map = {}
                      , M = w.register = function(e, t, i, n) {
                        for (var r, a, o, s, l = t.split(","), c = l.length, h = (i || "easeIn,easeOut,easeInOut").split(","); --c > -1; )
                            for (a = l[c],
                            r = n ? x("easing." + a, null, !0) : d.easing[a] || {},
                            o = h.length; --o > -1; )
                                s = h[o],
                                T[a + "." + s] = T[s + a] = r[s] = e.getRatio ? e : e[s] || new e
                    }
                    ;
                    for (l = w.prototype,
                    l._calcEnd = !1,
                    l.getRatio = function(e) {
                        if (this._func)
                            return this._params[0] = e,
                            this._func.apply(null, this._params);
                        var t = this._type
                          , i = this._power
                          , n = 1 === t ? 1 - e : 2 === t ? e : .5 > e ? 2 * e : 2 * (1 - e);
                        return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n),
                        1 === t ? 1 - n : 2 === t ? n : .5 > e ? n / 2 : 1 - n / 2
                    }
                    ,
                    o = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    s = o.length; --s > -1; )
                        l = o[s] + ",Power" + s,
                        M(new w(null,null,1,s), l, "easeOut", !0),
                        M(new w(null,null,2,s), l, "easeIn" + (0 === s ? ",easeNone" : "")),
                        M(new w(null,null,3,s), l, "easeInOut");
                    T.linear = d.easing.Linear.easeIn,
                    T.swing = d.easing.Quad.easeInOut;
                    var E = x("events.EventDispatcher", function(e) {
                        this._listeners = {},
                        this._eventTarget = e || this
                    });
                    l = E.prototype,
                    l.addEventListener = function(e, t, i, n, r) {
                        r = r || 0;
                        var a, o, s = this._listeners[e], l = 0;
                        for (this !== c || h || c.wake(),
                        null == s && (this._listeners[e] = s = []),
                        o = s.length; --o > -1; )
                            a = s[o],
                            a.c === t && a.s === i ? s.splice(o, 1) : 0 === l && a.pr < r && (l = o + 1);
                        s.splice(l, 0, {
                            c: t,
                            s: i,
                            up: n,
                            pr: r
                        })
                    }
                    ,
                    l.removeEventListener = function(e, t) {
                        var i, n = this._listeners[e];
                        if (n)
                            for (i = n.length; --i > -1; )
                                if (n[i].c === t)
                                    return void n.splice(i, 1)
                    }
                    ,
                    l.dispatchEvent = function(e) {
                        var t, i, n, r = this._listeners[e];
                        if (r)
                            for (t = r.length,
                            t > 1 && (r = r.slice(0)),
                            i = this._eventTarget; --t > -1; )
                                n = r[t],
                                n && (n.up ? n.c.call(n.s || i, {
                                    type: e,
                                    target: i
                                }) : n.c.call(n.s || i))
                    }
                    ;
                    var S = e.requestAnimationFrame
                      , A = e.cancelAnimationFrame
                      , P = Date.now || function() {
                        return (new Date).getTime()
                    }
                      , C = P();
                    for (o = ["ms", "moz", "webkit", "o"],
                    s = o.length; --s > -1 && !S; )
                        S = e[o[s] + "RequestAnimationFrame"],
                        A = e[o[s] + "CancelAnimationFrame"] || e[o[s] + "CancelRequestAnimationFrame"];
                    x("Ticker", function(e, t) {
                        var i, n, a, o, s, l = this, u = P(), d = t !== !1 && S ? "auto" : !1, f = 500, v = 33, g = "tick", y = function(e) {
                            var t, r, c = P() - C;
                            c > f && (u += c - v),
                            C += c,
                            l.time = (C - u) / 1e3,
                            t = l.time - s,
                            (!i || t > 0 || e === !0) && (l.frame++,
                            s += t + (t >= o ? .004 : o - t),
                            r = !0),
                            e !== !0 && (a = n(y)),
                            r && l.dispatchEvent(g)
                        };
                        E.call(l),
                        l.time = l.frame = 0,
                        l.tick = function() {
                            y(!0)
                        }
                        ,
                        l.lagSmoothing = function(e, t) {
                            return arguments.length ? (f = e || 1 / p,
                            void (v = Math.min(t, f, 0))) : 1 / p > f
                        }
                        ,
                        l.sleep = function() {
                            null != a && (d && A ? A(a) : clearTimeout(a),
                            n = m,
                            a = null,
                            l === c && (h = !1))
                        }
                        ,
                        l.wake = function(e) {
                            null !== a ? l.sleep() : e ? u += -C + (C = P()) : l.frame > 10 && (C = P() - f + 5),
                            n = 0 === i ? m : d && S ? S : function(e) {
                                return setTimeout(e, 1e3 * (s - l.time) + 1 | 0)
                            }
                            ,
                            l === c && (h = !0),
                            y(2)
                        }
                        ,
                        l.fps = function(e) {
                            return arguments.length ? (i = e,
                            o = 1 / (i || 60),
                            s = this.time + o,
                            void l.wake()) : i
                        }
                        ,
                        l.useRAF = function(e) {
                            return arguments.length ? (l.sleep(),
                            d = e,
                            void l.fps(i)) : d
                        }
                        ,
                        l.fps(e),
                        setTimeout(function() {
                            "auto" === d && l.frame < 5 && "hidden" !== r.visibilityState && l.useRAF(!1)
                        }, 1500)
                    }),
                    l = d.Ticker.prototype = new d.events.EventDispatcher,
                    l.constructor = d.Ticker;
                    var L = x("core.Animation", function(e, t) {
                        if (this.vars = t = t || {},
                        this._duration = this._totalDuration = e || 0,
                        this._delay = Number(t.delay) || 0,
                        this._timeScale = 1,
                        this._active = t.immediateRender === !0,
                        this.data = t.data,
                        this._reversed = t.reversed === !0,
                        Q) {
                            h || c.wake();
                            var i = this.vars.useFrames ? Z : Q;
                            i.add(this, i._time),
                            this.vars.paused && this.paused(!0)
                        }
                    });
                    c = L.ticker = new d.Ticker,
                    l = L.prototype,
                    l._dirty = l._gc = l._initted = l._paused = !1,
                    l._totalTime = l._time = 0,
                    l._rawPrevTime = -1,
                    l._next = l._last = l._onUpdate = l._timeline = l.timeline = null,
                    l._paused = !1;
                    var R = function() {
                        h && P() - C > 2e3 && ("hidden" !== r.visibilityState || !c.lagSmoothing()) && c.wake();
                        var e = setTimeout(R, 2e3);
                        e.unref && e.unref()
                    };
                    R(),
                    l.play = function(e, t) {
                        return null != e && this.seek(e, t),
                        this.reversed(!1).paused(!1)
                    }
                    ,
                    l.pause = function(e, t) {
                        return null != e && this.seek(e, t),
                        this.paused(!0)
                    }
                    ,
                    l.resume = function(e, t) {
                        return null != e && this.seek(e, t),
                        this.paused(!1)
                    }
                    ,
                    l.seek = function(e, t) {
                        return this.totalTime(Number(e), t !== !1)
                    }
                    ,
                    l.restart = function(e, t) {
                        return this.reversed(!1).paused(!1).totalTime(e ? -this._delay : 0, t !== !1, !0)
                    }
                    ,
                    l.reverse = function(e, t) {
                        return null != e && this.seek(e || this.totalDuration(), t),
                        this.reversed(!0).paused(!1)
                    }
                    ,
                    l.render = function() {}
                    ,
                    l.invalidate = function() {
                        return this._time = this._totalTime = 0,
                        this._initted = this._gc = !1,
                        this._rawPrevTime = -1,
                        (this._gc || !this.timeline) && this._enabled(!0),
                        this
                    }
                    ,
                    l.isActive = function() {
                        var e, t = this._timeline, i = this._startTime;
                        return !t || !this._gc && !this._paused && t.isActive() && (e = t.rawTime(!0)) >= i && e < i + this.totalDuration() / this._timeScale - 1e-7
                    }
                    ,
                    l._enabled = function(e, t) {
                        return h || c.wake(),
                        this._gc = !e,
                        this._active = this.isActive(),
                        t !== !0 && (e && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !e && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    }
                    ,
                    l._kill = function() {
                        return this._enabled(!1, !1)
                    }
                    ,
                    l.kill = function(e, t) {
                        return this._kill(e, t),
                        this
                    }
                    ,
                    l._uncache = function(e) {
                        for (var t = e ? this : this.timeline; t; )
                            t._dirty = !0,
                            t = t.timeline;
                        return this
                    }
                    ,
                    l._swapSelfInParams = function(e) {
                        for (var t = e.length, i = e.concat(); --t > -1; )
                            "{self}" === e[t] && (i[t] = this);
                        return i
                    }
                    ,
                    l._callback = function(e) {
                        var t = this.vars
                          , i = t[e]
                          , n = t[e + "Params"]
                          , r = t[e + "Scope"] || t.callbackScope || this
                          , a = n ? n.length : 0;
                        switch (a) {
                        case 0:
                            i.call(r);
                            break;
                        case 1:
                            i.call(r, n[0]);
                            break;
                        case 2:
                            i.call(r, n[0], n[1]);
                            break;
                        default:
                            i.apply(r, n)
                        }
                    }
                    ,
                    l.eventCallback = function(e, t, i, n) {
                        if ("on" === (e || "").substr(0, 2)) {
                            var r = this.vars;
                            if (1 === arguments.length)
                                return r[e];
                            null == t ? delete r[e] : (r[e] = t,
                            r[e + "Params"] = v(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i,
                            r[e + "Scope"] = n),
                            "onUpdate" === e && (this._onUpdate = t)
                        }
                        return this
                    }
                    ,
                    l.delay = function(e) {
                        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + e - this._delay),
                        this._delay = e,
                        this) : this._delay
                    }
                    ,
                    l.duration = function(e) {
                        return arguments.length ? (this._duration = this._totalDuration = e,
                        this._uncache(!0),
                        this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== e && this.totalTime(this._totalTime * (e / this._duration), !0),
                        this) : (this._dirty = !1,
                        this._duration)
                    }
                    ,
                    l.totalDuration = function(e) {
                        return this._dirty = !1,
                        arguments.length ? this.duration(e) : this._totalDuration
                    }
                    ,
                    l.time = function(e, t) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        this.totalTime(e > this._duration ? this._duration : e, t)) : this._time
                    }
                    ,
                    l.totalTime = function(e, t, i) {
                        if (h || c.wake(),
                        !arguments.length)
                            return this._totalTime;
                        if (this._timeline) {
                            if (0 > e && !i && (e += this.totalDuration()),
                            this._timeline.smoothChildTiming) {
                                this._dirty && this.totalDuration();
                                var n = this._totalDuration
                                  , r = this._timeline;
                                if (e > n && !i && (e = n),
                                this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - e : e) / this._timeScale,
                                r._dirty || this._uncache(!1),
                                r._timeline)
                                    for (; r._timeline; )
                                        r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0),
                                        r = r._timeline
                            }
                            this._gc && this._enabled(!0, !1),
                            (this._totalTime !== e || 0 === this._duration) && (F.length && K(),
                            this.render(e, t, !1),
                            F.length && K())
                        }
                        return this
                    }
                    ,
                    l.progress = l.totalProgress = function(e, t) {
                        var i = this.duration();
                        return arguments.length ? this.totalTime(i * e, t) : i ? this._time / i : this.ratio
                    }
                    ,
                    l.startTime = function(e) {
                        return arguments.length ? (e !== this._startTime && (this._startTime = e,
                        this.timeline && this.timeline._sortChildren && this.timeline.add(this, e - this._delay)),
                        this) : this._startTime
                    }
                    ,
                    l.endTime = function(e) {
                        return this._startTime + (0 != e ? this.totalDuration() : this.duration()) / this._timeScale
                    }
                    ,
                    l.timeScale = function(e) {
                        if (!arguments.length)
                            return this._timeScale;
                        var t, i;
                        for (e = e || p,
                        this._timeline && this._timeline.smoothChildTiming && (t = this._pauseTime,
                        i = t || 0 === t ? t : this._timeline.totalTime(),
                        this._startTime = i - (i - this._startTime) * this._timeScale / e),
                        this._timeScale = e,
                        i = this.timeline; i && i.timeline; )
                            i._dirty = !0,
                            i.totalDuration(),
                            i = i.timeline;
                        return this
                    }
                    ,
                    l.reversed = function(e) {
                        return arguments.length ? (e != this._reversed && (this._reversed = e,
                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                        this) : this._reversed
                    }
                    ,
                    l.paused = function(e) {
                        if (!arguments.length)
                            return this._paused;
                        var t, i, n = this._timeline;
                        return e != this._paused && n && (h || e || c.wake(),
                        t = n.rawTime(),
                        i = t - this._pauseTime,
                        !e && n.smoothChildTiming && (this._startTime += i,
                        this._uncache(!1)),
                        this._pauseTime = e ? t : null,
                        this._paused = e,
                        this._active = this.isActive(),
                        !e && 0 !== i && this._initted && this.duration() && (t = n.smoothChildTiming ? this._totalTime : (t - this._startTime) / this._timeScale,
                        this.render(t, t === this._totalTime, !0))),
                        this._gc && !e && this._enabled(!0, !1),
                        this
                    }
                    ;
                    var O = x("core.SimpleTimeline", function(e) {
                        L.call(this, 0, e),
                        this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    l = O.prototype = new L,
                    l.constructor = O,
                    l.kill()._gc = !1,
                    l._first = l._last = l._recent = null,
                    l._sortChildren = !1,
                    l.add = l.insert = function(e, t) {
                        var i, n;
                        if (e._startTime = Number(t || 0) + e._delay,
                        e._paused && this !== e._timeline && (e._pauseTime = e._startTime + (this.rawTime() - e._startTime) / e._timeScale),
                        e.timeline && e.timeline._remove(e, !0),
                        e.timeline = e._timeline = this,
                        e._gc && e._enabled(!0, !0),
                        i = this._last,
                        this._sortChildren)
                            for (n = e._startTime; i && i._startTime > n; )
                                i = i._prev;
                        return i ? (e._next = i._next,
                        i._next = e) : (e._next = this._first,
                        this._first = e),
                        e._next ? e._next._prev = e : this._last = e,
                        e._prev = i,
                        this._recent = e,
                        this._timeline && this._uncache(!0),
                        this
                    }
                    ,
                    l._remove = function(e, t) {
                        return e.timeline === this && (t || e._enabled(!1, !0),
                        e._prev ? e._prev._next = e._next : this._first === e && (this._first = e._next),
                        e._next ? e._next._prev = e._prev : this._last === e && (this._last = e._prev),
                        e._next = e._prev = e.timeline = null,
                        e === this._recent && (this._recent = this._last),
                        this._timeline && this._uncache(!0)),
                        this
                    }
                    ,
                    l.render = function(e, t, i) {
                        var n, r = this._first;
                        for (this._totalTime = this._time = this._rawPrevTime = e; r; )
                            n = r._next,
                            (r._active || e >= r._startTime && !r._paused && !r._gc) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (e - r._startTime) * r._timeScale, t, i) : r.render((e - r._startTime) * r._timeScale, t, i)),
                            r = n
                    }
                    ,
                    l.rawTime = function() {
                        return h || c.wake(),
                        this._totalTime
                    }
                    ;
                    var I = x("TweenLite", function(t, i, n) {
                        if (L.call(this, i, n),
                        this.render = I.prototype.render,
                        null == t)
                            throw "Cannot tween a null target.";
                        this.target = t = "string" != typeof t ? t : I.selector(t) || t;
                        var r, a, o, s = t.jquery || t.length && t !== e && t[0] && (t[0] === e || t[0].nodeType && t[0].style && !t.nodeType), l = this.vars.overwrite;
                        if (this._overwrite = l = null == l ? q[I.defaultOverwrite] : "number" == typeof l ? l >> 0 : q[l],
                        (s || t instanceof Array || t.push && v(t)) && "number" != typeof t[0])
                            for (this._targets = o = f(t),
                            this._propLookup = [],
                            this._siblings = [],
                            r = 0; r < o.length; r++)
                                a = o[r],
                                a ? "string" != typeof a ? a.length && a !== e && a[0] && (a[0] === e || a[0].nodeType && a[0].style && !a.nodeType) ? (o.splice(r--, 1),
                                this._targets = o = o.concat(f(a))) : (this._siblings[r] = $(a, this, !1),
                                1 === l && this._siblings[r].length > 1 && tt(a, this, null, 1, this._siblings[r])) : (a = o[r--] = I.selector(a),
                                "string" == typeof a && o.splice(r + 1, 1)) : o.splice(r--, 1);
                        else
                            this._propLookup = {},
                            this._siblings = $(t, this, !1),
                            1 === l && this._siblings.length > 1 && tt(t, this, null, 1, this._siblings);
                        (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -p,
                        this.render(Math.min(0, -this._delay)))
                    }, !0)
                      , D = function(t) {
                        return t && t.length && t !== e && t[0] && (t[0] === e || t[0].nodeType && t[0].style && !t.nodeType)
                    }
                      , U = function(e, t) {
                        var i, n = {};
                        for (i in e)
                            Y[i] || i in t && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!V[i] || V[i] && V[i]._autoCSS) || (n[i] = e[i],
                            delete e[i]);
                        e.css = n
                    };
                    l = I.prototype = new L,
                    l.constructor = I,
                    l.kill()._gc = !1,
                    l.ratio = 0,
                    l._firstPT = l._targets = l._overwrittenProps = l._startAt = null,
                    l._notifyPluginsOfEnabled = l._lazy = !1,
                    I.version = "1.20.3",
                    I.defaultEase = l._ease = new w(null,null,1,1),
                    I.defaultOverwrite = "auto",
                    I.ticker = c,
                    I.autoSleep = 120,
                    I.lagSmoothing = function(e, t) {
                        c.lagSmoothing(e, t)
                    }
                    ,
                    I.selector = e.$ || e.jQuery || function(t) {
                        var i = e.$ || e.jQuery;
                        return i ? (I.selector = i,
                        i(t)) : "undefined" == typeof r ? t : r.querySelectorAll ? r.querySelectorAll(t) : r.getElementById("#" === t.charAt(0) ? t.substr(1) : t)
                    }
                    ;
                    var F = []
                      , k = {}
                      , N = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                      , z = /[\+-]=-?[\.\d]/
                      , B = function(e) {
                        for (var t, i = this._firstPT, n = 1e-6; i; )
                            t = i.blob ? 1 === e && null != this.end ? this.end : e ? this.join("") : this.start : i.c * e + i.s,
                            i.m ? t = i.m(t, this._target || i.t) : n > t && t > -n && !i.blob && (t = 0),
                            i.f ? i.fp ? i.t[i.p](i.fp, t) : i.t[i.p](t) : i.t[i.p] = t,
                            i = i._next
                    }
                      , G = function(e, t, i, n) {
                        var r, a, o, s, l, c, h, u = [], d = 0, p = "", f = 0;
                        for (u.start = e,
                        u.end = t,
                        e = u[0] = e + "",
                        t = u[1] = t + "",
                        i && (i(u),
                        e = u[0],
                        t = u[1]),
                        u.length = 0,
                        r = e.match(N) || [],
                        a = t.match(N) || [],
                        n && (n._next = null,
                        n.blob = 1,
                        u._firstPT = u._applyPT = n),
                        l = a.length,
                        s = 0; l > s; s++)
                            h = a[s],
                            c = t.substr(d, t.indexOf(h, d) - d),
                            p += c || !s ? c : ",",
                            d += c.length,
                            f ? f = (f + 1) % 5 : "rgba(" === c.substr(-5) && (f = 1),
                            h === r[s] || r.length <= s ? p += h : (p && (u.push(p),
                            p = ""),
                            o = parseFloat(r[s]),
                            u.push(o),
                            u._firstPT = {
                                _next: u._firstPT,
                                t: u,
                                p: u.length - 1,
                                s: o,
                                c: ("=" === h.charAt(1) ? parseInt(h.charAt(0) + "1", 10) * parseFloat(h.substr(2)) : parseFloat(h) - o) || 0,
                                f: 0,
                                m: f && 4 > f ? Math.round : 0
                            }),
                            d += h.length;
                        return p += t.substr(d),
                        p && u.push(p),
                        u.setRatio = B,
                        z.test(t) && (u.end = null),
                        u
                    }
                      , H = function(e, t, i, n, r, a, o, s, l) {
                        "function" == typeof n && (n = n(l || 0, e));
                        var c, h = typeof e[t], u = "function" !== h ? "" : t.indexOf("set") || "function" != typeof e["get" + t.substr(3)] ? t : "get" + t.substr(3), d = "get" !== i ? i : u ? o ? e[u](o) : e[u]() : e[t], p = "string" == typeof n && "=" === n.charAt(1), f = {
                            t: e,
                            p: t,
                            s: d,
                            f: "function" === h,
                            pg: 0,
                            n: r || t,
                            m: a ? "function" == typeof a ? a : Math.round : 0,
                            pr: 0,
                            c: p ? parseInt(n.charAt(0) + "1", 10) * parseFloat(n.substr(2)) : parseFloat(n) - d || 0
                        };
                        return ("number" != typeof d || "number" != typeof n && !p) && (o || isNaN(d) || !p && isNaN(n) || "boolean" == typeof d || "boolean" == typeof n ? (f.fp = o,
                        c = G(d, p ? parseFloat(f.s) + f.c : n, s || I.defaultStringFilter, f),
                        f = {
                            t: c,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: r || t,
                            pr: 0,
                            m: 0
                        }) : (f.s = parseFloat(d),
                        p || (f.c = parseFloat(n) - f.s || 0))),
                        f.c ? ((f._next = this._firstPT) && (f._next._prev = f),
                        this._firstPT = f,
                        f) : void 0
                    }
                      , j = I._internals = {
                        isArray: v,
                        isSelector: D,
                        lazyTweens: F,
                        blobDif: G
                    }
                      , V = I._plugins = {}
                      , W = j.tweenLookup = {}
                      , X = 0
                      , Y = j.reservedProps = {
                        ease: 1,
                        delay: 1,
                        overwrite: 1,
                        onComplete: 1,
                        onCompleteParams: 1,
                        onCompleteScope: 1,
                        useFrames: 1,
                        runBackwards: 1,
                        startAt: 1,
                        onUpdate: 1,
                        onUpdateParams: 1,
                        onUpdateScope: 1,
                        onStart: 1,
                        onStartParams: 1,
                        onStartScope: 1,
                        onReverseComplete: 1,
                        onReverseCompleteParams: 1,
                        onReverseCompleteScope: 1,
                        onRepeat: 1,
                        onRepeatParams: 1,
                        onRepeatScope: 1,
                        easeParams: 1,
                        yoyo: 1,
                        immediateRender: 1,
                        repeat: 1,
                        repeatDelay: 1,
                        data: 1,
                        paused: 1,
                        reversed: 1,
                        autoCSS: 1,
                        lazy: 1,
                        onOverwrite: 1,
                        callbackScope: 1,
                        stringFilter: 1,
                        id: 1,
                        yoyoEase: 1
                    }
                      , q = {
                        none: 0,
                        all: 1,
                        auto: 2,
                        concurrent: 3,
                        allOnStart: 4,
                        preexisting: 5,
                        "true": 1,
                        "false": 0
                    }
                      , Z = L._rootFramesTimeline = new O
                      , Q = L._rootTimeline = new O
                      , J = 30
                      , K = j.lazyRender = function() {
                        var e, t = F.length;
                        for (k = {}; --t > -1; )
                            e = F[t],
                            e && e._lazy !== !1 && (e.render(e._lazy[0], e._lazy[1], !0),
                            e._lazy = !1);
                        F.length = 0
                    }
                    ;
                    Q._startTime = c.time,
                    Z._startTime = c.frame,
                    Q._active = Z._active = !0,
                    setTimeout(K, 1),
                    L._updateRoot = I.render = function() {
                        var e, t, i;
                        if (F.length && K(),
                        Q.render((c.time - Q._startTime) * Q._timeScale, !1, !1),
                        Z.render((c.frame - Z._startTime) * Z._timeScale, !1, !1),
                        F.length && K(),
                        c.frame >= J) {
                            J = c.frame + (parseInt(I.autoSleep, 10) || 120);
                            for (i in W) {
                                for (t = W[i].tweens,
                                e = t.length; --e > -1; )
                                    t[e]._gc && t.splice(e, 1);
                                0 === t.length && delete W[i]
                            }
                            if (i = Q._first,
                            (!i || i._paused) && I.autoSleep && !Z._first && 1 === c._listeners.tick.length) {
                                for (; i && i._paused; )
                                    i = i._next;
                                i || c.sleep()
                            }
                        }
                    }
                    ,
                    c.addEventListener("tick", L._updateRoot);
                    var $ = function(e, t, i) {
                        var n, r, a = e._gsTweenID;
                        if (W[a || (e._gsTweenID = a = "t" + X++)] || (W[a] = {
                            target: e,
                            tweens: []
                        }),
                        t && (n = W[a].tweens,
                        n[r = n.length] = t,
                        i))
                            for (; --r > -1; )
                                n[r] === t && n.splice(r, 1);
                        return W[a].tweens
                    }
                      , et = function(e, t, i, n) {
                        var r, a, o = e.vars.onOverwrite;
                        return o && (r = o(e, t, i, n)),
                        o = I.onOverwrite,
                        o && (a = o(e, t, i, n)),
                        r !== !1 && a !== !1
                    }
                      , tt = function(e, t, i, n, r) {
                        var a, o, s, l;
                        if (1 === n || n >= 4) {
                            for (l = r.length,
                            a = 0; l > a; a++)
                                if ((s = r[a]) !== t)
                                    s._gc || s._kill(null, e, t) && (o = !0);
                                else if (5 === n)
                                    break;
                            return o
                        }
                        var c, h = t._startTime + p, u = [], d = 0, f = 0 === t._duration;
                        for (a = r.length; --a > -1; )
                            (s = r[a]) === t || s._gc || s._paused || (s._timeline !== t._timeline ? (c = c || it(t, 0, f),
                            0 === it(s, c, f) && (u[d++] = s)) : s._startTime <= h && s._startTime + s.totalDuration() / s._timeScale > h && ((f || !s._initted) && h - s._startTime <= 2e-10 || (u[d++] = s)));
                        for (a = d; --a > -1; )
                            if (s = u[a],
                            2 === n && s._kill(i, e, t) && (o = !0),
                            2 !== n || !s._firstPT && s._initted) {
                                if (2 !== n && !et(s, t))
                                    continue;
                                s._enabled(!1, !1) && (o = !0)
                            }
                        return o
                    }
                      , it = function(e, t, i) {
                        for (var n = e._timeline, r = n._timeScale, a = e._startTime; n._timeline; ) {
                            if (a += n._startTime,
                            r *= n._timeScale,
                            n._paused)
                                return -100;
                            n = n._timeline
                        }
                        return a /= r,
                        a > t ? a - t : i && a === t || !e._initted && 2 * p > a - t ? p : (a += e.totalDuration() / e._timeScale / r) > t + p ? 0 : a - t - p
                    };
                    l._init = function() {
                        var e, t, i, n, r, a, o = this.vars, s = this._overwrittenProps, l = this._duration, c = !!o.immediateRender, h = o.ease;
                        if (o.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                            this._startAt.kill()),
                            r = {};
                            for (n in o.startAt)
                                r[n] = o.startAt[n];
                            if (r.data = "isStart",
                            r.overwrite = !1,
                            r.immediateRender = !0,
                            r.lazy = c && o.lazy !== !1,
                            r.startAt = r.delay = null,
                            r.onUpdate = o.onUpdate,
                            r.onUpdateParams = o.onUpdateParams,
                            r.onUpdateScope = o.onUpdateScope || o.callbackScope || this,
                            this._startAt = I.to(this.target, 0, r),
                            c)
                                if (this._time > 0)
                                    this._startAt = null;
                                else if (0 !== l)
                                    return
                        } else if (o.runBackwards && 0 !== l)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                this._startAt.kill(),
                                this._startAt = null;
                            else {
                                0 !== this._time && (c = !1),
                                i = {};
                                for (n in o)
                                    Y[n] && "autoCSS" !== n || (i[n] = o[n]);
                                if (i.overwrite = 0,
                                i.data = "isFromStart",
                                i.lazy = c && o.lazy !== !1,
                                i.immediateRender = c,
                                this._startAt = I.to(this.target, 0, i),
                                c) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                    this._startAt._enabled(!1),
                                    this.vars.immediateRender && (this._startAt = null)
                            }
                        if (this._ease = h = h ? h instanceof w ? h : "function" == typeof h ? new w(h,o.easeParams) : T[h] || I.defaultEase : I.defaultEase,
                        o.easeParams instanceof Array && h.config && (this._ease = h.config.apply(h, o.easeParams)),
                        this._easeType = this._ease._type,
                        this._easePower = this._ease._power,
                        this._firstPT = null,
                        this._targets)
                            for (a = this._targets.length,
                            e = 0; a > e; e++)
                                this._initProps(this._targets[e], this._propLookup[e] = {}, this._siblings[e], s ? s[e] : null, e) && (t = !0);
                        else
                            t = this._initProps(this.target, this._propLookup, this._siblings, s, 0);
                        if (t && I._onPluginEvent("_onInitAllProps", this),
                        s && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                        o.runBackwards)
                            for (i = this._firstPT; i; )
                                i.s += i.c,
                                i.c = -i.c,
                                i = i._next;
                        this._onUpdate = o.onUpdate,
                        this._initted = !0
                    }
                    ,
                    l._initProps = function(t, i, n, r, a) {
                        var o, s, l, c, h, u;
                        if (null == t)
                            return !1;
                        k[t._gsTweenID] && K(),
                        this.vars.css || t.style && t !== e && t.nodeType && V.css && this.vars.autoCSS !== !1 && U(this.vars, t);
                        for (o in this.vars)
                            if (u = this.vars[o],
                            Y[o])
                                u && (u instanceof Array || u.push && v(u)) && -1 !== u.join("").indexOf("{self}") && (this.vars[o] = u = this._swapSelfInParams(u, this));
                            else if (V[o] && (c = new V[o])._onInitTween(t, this.vars[o], this, a)) {
                                for (this._firstPT = h = {
                                    _next: this._firstPT,
                                    t: c,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: o,
                                    pg: 1,
                                    pr: c._priority,
                                    m: 0
                                },
                                s = c._overwriteProps.length; --s > -1; )
                                    i[c._overwriteProps[s]] = this._firstPT;
                                (c._priority || c._onInitAllProps) && (l = !0),
                                (c._onDisable || c._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                h._next && (h._next._prev = h)
                            } else
                                i[o] = H.call(this, t, o, "get", u, o, 0, null, this.vars.stringFilter, a);
                        return r && this._kill(r, t) ? this._initProps(t, i, n, r, a) : this._overwrite > 1 && this._firstPT && n.length > 1 && tt(t, this, i, this._overwrite, n) ? (this._kill(i, t),
                        this._initProps(t, i, n, r, a)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (k[t._gsTweenID] = !0),
                        l)
                    }
                    ,
                    l.render = function(e, t, i) {
                        var n, r, a, o, s = this._time, l = this._duration, c = this._rawPrevTime;
                        if (e >= l - 1e-7 && e >= 0)
                            this._totalTime = this._time = l,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                            this._reversed || (n = !0,
                            r = "onComplete",
                            i = i || this._timeline.autoRemoveChildren),
                            0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (e = 0),
                            (0 > c || 0 >= e && e >= -1e-7 || c === p && "isPause" !== this.data) && c !== e && (i = !0,
                            c > p && (r = "onReverseComplete")),
                            this._rawPrevTime = o = !t || e || c === e ? e : p);
                        else if (1e-7 > e)
                            this._totalTime = this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== s || 0 === l && c > 0) && (r = "onReverseComplete",
                            n = this._reversed),
                            0 > e && (this._active = !1,
                            0 === l && (this._initted || !this.vars.lazy || i) && (c >= 0 && (c !== p || "isPause" !== this.data) && (i = !0),
                            this._rawPrevTime = o = !t || e || c === e ? e : p)),
                            (!this._initted || this._startAt && this._startAt.progress()) && (i = !0);
                        else if (this._totalTime = this._time = e,
                        this._easeType) {
                            var h = e / l
                              , u = this._easeType
                              , d = this._easePower;
                            (1 === u || 3 === u && h >= .5) && (h = 1 - h),
                            3 === u && (h *= 2),
                            1 === d ? h *= h : 2 === d ? h *= h * h : 3 === d ? h *= h * h * h : 4 === d && (h *= h * h * h * h),
                            this.ratio = 1 === u ? 1 - h : 2 === u ? h : .5 > e / l ? h / 2 : 1 - h / 2
                        } else
                            this.ratio = this._ease.getRatio(e / l);
                        if (this._time !== s || i) {
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = this._totalTime = s,
                                    this._rawPrevTime = c,
                                    F.push(this),
                                    void (this._lazy = [e, t]);
                                this._time && !n ? this.ratio = this._ease.getRatio(this._time / l) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                            }
                            for (this._lazy !== !1 && (this._lazy = !1),
                            this._active || !this._paused && this._time !== s && e >= 0 && (this._active = !0),
                            0 === s && (this._startAt && (e >= 0 ? this._startAt.render(e, !0, i) : r || (r = "_dummyGS")),
                            this.vars.onStart && (0 !== this._time || 0 === l) && (t || this._callback("onStart"))),
                            a = this._firstPT; a; )
                                a.f ? a.t[a.p](a.c * this.ratio + a.s) : a.t[a.p] = a.c * this.ratio + a.s,
                                a = a._next;
                            this._onUpdate && (0 > e && this._startAt && e !== -1e-4 && this._startAt.render(e, !0, i),
                            t || (this._time !== s || n || i) && this._callback("onUpdate")),
                            r && (!this._gc || i) && (0 > e && this._startAt && !this._onUpdate && e !== -1e-4 && this._startAt.render(e, !0, i),
                            n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !t && this.vars[r] && this._callback(r),
                            0 === l && this._rawPrevTime === p && o !== p && (this._rawPrevTime = 0))
                        }
                    }
                    ,
                    l._kill = function(e, t, i) {
                        if ("all" === e && (e = null),
                        null == e && (null == t || t === this.target))
                            return this._lazy = !1,
                            this._enabled(!1, !1);
                        t = "string" != typeof t ? t || this._targets || this.target : I.selector(t) || t;
                        var n, r, a, o, s, l, c, h, u, d = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
                        if ((v(t) || D(t)) && "number" != typeof t[0])
                            for (n = t.length; --n > -1; )
                                this._kill(e, t[n], i) && (l = !0);
                        else {
                            if (this._targets) {
                                for (n = this._targets.length; --n > -1; )
                                    if (t === this._targets[n]) {
                                        s = this._propLookup[n] || {},
                                        this._overwrittenProps = this._overwrittenProps || [],
                                        r = this._overwrittenProps[n] = e ? this._overwrittenProps[n] || {} : "all";
                                        break
                                    }
                            } else {
                                if (t !== this.target)
                                    return !1;
                                s = this._propLookup,
                                r = this._overwrittenProps = e ? this._overwrittenProps || {} : "all"
                            }
                            if (s) {
                                if (c = e || s,
                                h = e !== r && "all" !== r && e !== s && ("object" != typeof e || !e._tempKill),
                                i && (I.onOverwrite || this.vars.onOverwrite)) {
                                    for (a in c)
                                        s[a] && (u || (u = []),
                                        u.push(a));
                                    if ((u || !e) && !et(this, i, t, u))
                                        return !1
                                }
                                for (a in c)
                                    (o = s[a]) && (d && (o.f ? o.t[o.p](o.s) : o.t[o.p] = o.s,
                                    l = !0),
                                    o.pg && o.t._kill(c) && (l = !0),
                                    o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next),
                                    o._next && (o._next._prev = o._prev),
                                    o._next = o._prev = null),
                                    delete s[a]),
                                    h && (r[a] = 1);
                                !this._firstPT && this._initted && this._enabled(!1, !1)
                            }
                        }
                        return l
                    }
                    ,
                    l.invalidate = function() {
                        return this._notifyPluginsOfEnabled && I._onPluginEvent("_onDisable", this),
                        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                        this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                        this._propLookup = this._targets ? {} : [],
                        L.prototype.invalidate.call(this),
                        this.vars.immediateRender && (this._time = -p,
                        this.render(Math.min(0, -this._delay))),
                        this
                    }
                    ,
                    l._enabled = function(e, t) {
                        if (h || c.wake(),
                        e && this._gc) {
                            var i, n = this._targets;
                            if (n)
                                for (i = n.length; --i > -1; )
                                    this._siblings[i] = $(n[i], this, !0);
                            else
                                this._siblings = $(this.target, this, !0)
                        }
                        return L.prototype._enabled.call(this, e, t),
                        this._notifyPluginsOfEnabled && this._firstPT ? I._onPluginEvent(e ? "_onEnable" : "_onDisable", this) : !1
                    }
                    ,
                    I.to = function(e, t, i) {
                        return new I(e,t,i)
                    }
                    ,
                    I.from = function(e, t, i) {
                        return i.runBackwards = !0,
                        i.immediateRender = 0 != i.immediateRender,
                        new I(e,t,i)
                    }
                    ,
                    I.fromTo = function(e, t, i, n) {
                        return n.startAt = i,
                        n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender,
                        new I(e,t,n)
                    }
                    ,
                    I.delayedCall = function(e, t, i, n, r) {
                        return new I(t,0,{
                            delay: e,
                            onComplete: t,
                            onCompleteParams: i,
                            callbackScope: n,
                            onReverseComplete: t,
                            onReverseCompleteParams: i,
                            immediateRender: !1,
                            lazy: !1,
                            useFrames: r,
                            overwrite: 0
                        })
                    }
                    ,
                    I.set = function(e, t) {
                        return new I(e,0,t)
                    }
                    ,
                    I.getTweensOf = function(e, t) {
                        if (null == e)
                            return [];
                        e = "string" != typeof e ? e : I.selector(e) || e;
                        var i, n, r, a;
                        if ((v(e) || D(e)) && "number" != typeof e[0]) {
                            for (i = e.length,
                            n = []; --i > -1; )
                                n = n.concat(I.getTweensOf(e[i], t));
                            for (i = n.length; --i > -1; )
                                for (a = n[i],
                                r = i; --r > -1; )
                                    a === n[r] && n.splice(i, 1)
                        } else if (e._gsTweenID)
                            for (n = $(e).concat(),
                            i = n.length; --i > -1; )
                                (n[i]._gc || t && !n[i].isActive()) && n.splice(i, 1);
                        return n || []
                    }
                    ,
                    I.killTweensOf = I.killDelayedCallsTo = function(e, t, i) {
                        "object" == typeof t && (i = t,
                        t = !1);
                        for (var n = I.getTweensOf(e, t), r = n.length; --r > -1; )
                            n[r]._kill(i, e)
                    }
                    ;
                    var nt = x("plugins.TweenPlugin", function(e, t) {
                        this._overwriteProps = (e || "").split(","),
                        this._propName = this._overwriteProps[0],
                        this._priority = t || 0,
                        this._super = nt.prototype
                    }, !0);
                    if (l = nt.prototype,
                    nt.version = "1.19.0",
                    nt.API = 2,
                    l._firstPT = null,
                    l._addTween = H,
                    l.setRatio = B,
                    l._kill = function(e) {
                        var t, i = this._overwriteProps, n = this._firstPT;
                        if (null != e[this._propName])
                            this._overwriteProps = [];
                        else
                            for (t = i.length; --t > -1; )
                                null != e[i[t]] && i.splice(t, 1);
                        for (; n; )
                            null != e[n.n] && (n._next && (n._next._prev = n._prev),
                            n._prev ? (n._prev._next = n._next,
                            n._prev = null) : this._firstPT === n && (this._firstPT = n._next)),
                            n = n._next;
                        return !1
                    }
                    ,
                    l._mod = l._roundProps = function(e) {
                        for (var t, i = this._firstPT; i; )
                            t = e[this._propName] || null != i.n && e[i.n.split(this._propName + "_").join("")],
                            t && "function" == typeof t && (2 === i.f ? i.t._applyPT.m = t : i.m = t),
                            i = i._next
                    }
                    ,
                    I._onPluginEvent = function(e, t) {
                        var i, n, r, a, o, s = t._firstPT;
                        if ("_onInitAllProps" === e) {
                            for (; s; ) {
                                for (o = s._next,
                                n = r; n && n.pr > s.pr; )
                                    n = n._next;
                                (s._prev = n ? n._prev : a) ? s._prev._next = s : r = s,
                                (s._next = n) ? n._prev = s : a = s,
                                s = o
                            }
                            s = t._firstPT = r
                        }
                        for (; s; )
                            s.pg && "function" == typeof s.t[e] && s.t[e]() && (i = !0),
                            s = s._next;
                        return i
                    }
                    ,
                    nt.activate = function(e) {
                        for (var t = e.length; --t > -1; )
                            e[t].API === nt.API && (V[(new e[t])._propName] = e[t]);
                        return !0
                    }
                    ,
                    _.plugin = function(e) {
                        if (!(e && e.propName && e.init && e.API))
                            throw "illegal plugin definition.";
                        var t, i = e.propName, n = e.priority || 0, r = e.overwriteProps, a = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        }, o = x("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function() {
                            nt.call(this, i, n),
                            this._overwriteProps = r || []
                        }, e.global === !0), s = o.prototype = new nt(i);
                        s.constructor = o,
                        o.API = e.API;
                        for (t in a)
                            "function" == typeof e[t] && (s[a[t]] = e[t]);
                        return o.version = e.version,
                        nt.activate([o]),
                        o
                    }
                    ,
                    o = e._gsQueue) {
                        for (s = 0; s < o.length; s++)
                            o[s]();
                        for (l in g)
                            g[l].func || e.console.log("GSAP encountered missing dependency: " + l)
                    }
                    h = !1
                }
            }("undefined" != typeof t && t.exports && "undefined" != typeof e ? e : this || window, "TweenMax")
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    7: [function(e, t) {
        t.exports = Array.isArray || function(e) {
            return "[object Array]" == Object.prototype.toString.call(e)
        }
    }
    , {}],
    8: [function(e, t, i) {
        (function() {
            var e;
            e = "undefined" != typeof i && null !== i ? i : this,
            e.Lethargy = function() {
                function e(e, t, i, n) {
                    this.stability = null != e ? Math.abs(e) : 8,
                    this.sensitivity = null != t ? 1 + Math.abs(t) : 100,
                    this.tolerance = null != i ? 1 + Math.abs(i) : 1.1,
                    this.delay = null != n ? n : 150,
                    this.lastUpDeltas = function() {
                        var e, t, i;
                        for (i = [],
                        e = 1,
                        t = 2 * this.stability; t >= 1 ? t >= e : e >= t; t >= 1 ? e++ : e--)
                            i.push(null);
                        return i
                    }
                    .call(this),
                    this.lastDownDeltas = function() {
                        var e, t, i;
                        for (i = [],
                        e = 1,
                        t = 2 * this.stability; t >= 1 ? t >= e : e >= t; t >= 1 ? e++ : e--)
                            i.push(null);
                        return i
                    }
                    .call(this),
                    this.deltasTimestamp = function() {
                        var e, t, i;
                        for (i = [],
                        e = 1,
                        t = 2 * this.stability; t >= 1 ? t >= e : e >= t; t >= 1 ? e++ : e--)
                            i.push(null);
                        return i
                    }
                    .call(this)
                }
                return e.prototype.check = function(e) {
                    var t;
                    return e = e.originalEvent || e,
                    null != e.wheelDelta ? t = e.wheelDelta : null != e.deltaY ? t = -40 * e.deltaY : (null != e.detail || 0 === e.detail) && (t = -40 * e.detail),
                    this.deltasTimestamp.push(Date.now()),
                    this.deltasTimestamp.shift(),
                    t > 0 ? (this.lastUpDeltas.push(t),
                    this.lastUpDeltas.shift(),
                    this.isInertia(1)) : (this.lastDownDeltas.push(t),
                    this.lastDownDeltas.shift(),
                    this.isInertia(-1))
                }
                ,
                e.prototype.isInertia = function(e) {
                    var t, i, n, r, a, o, s;
                    return t = -1 === e ? this.lastDownDeltas : this.lastUpDeltas,
                    null === t[0] ? e : this.deltasTimestamp[2 * this.stability - 2] + this.delay > Date.now() && t[0] === t[2 * this.stability - 1] ? !1 : (n = t.slice(0, this.stability),
                    i = t.slice(this.stability, 2 * this.stability),
                    s = n.reduce(function(e, t) {
                        return e + t
                    }),
                    a = i.reduce(function(e, t) {
                        return e + t
                    }),
                    o = s / n.length,
                    r = a / i.length,
                    Math.abs(o) < Math.abs(r * this.tolerance) && this.sensitivity < Math.abs(r) ? e : !1)
                }
                ,
                e.prototype.showLastUpDeltas = function() {
                    return this.lastUpDeltas
                }
                ,
                e.prototype.showLastDownDeltas = function() {
                    return this.lastDownDeltas
                }
                ,
                e
            }()
        }
        ).call(this)
    }
    , {}],
    9: [function(e, t) {
        (function(i) {
            "use strict";
            function n(e, t) {
                if ("function" == typeof e)
                    return n("*", e);
                if ("function" == typeof t)
                    for (var i = new s(e), r = 1; r < arguments.length; ++r)
                        n.callbacks.push(i.middleware(arguments[r]));
                else
                    "string" == typeof e ? n["string" == typeof t ? "redirect" : "show"](e, t) : n.start(e)
            }
            function r(e) {
                if (!e.handled) {
                    var t;
                    t = _ ? y + m.hash.replace("#!", "") : m.pathname + m.search,
                    t !== e.canonicalPath && (n.stop(),
                    e.handled = !1,
                    m.href = e.canonicalPath)
                }
            }
            function a(e) {
                return "string" != typeof e ? e : g ? decodeURIComponent(e.replace(/\+/g, " ")) : e
            }
            function o(e, t) {
                "/" === e[0] && 0 !== e.indexOf(y) && (e = y + (_ ? "#!" : "") + e);
                var i = e.indexOf("?");
                if (this.canonicalPath = e,
                this.path = e.replace(y, "") || "/",
                _ && (this.path = this.path.replace("#!", "") || "/"),
                this.title = document.title,
                this.state = t || {},
                this.state.path = e,
                this.querystring = ~i ? a(e.slice(i + 1)) : "",
                this.pathname = a(~i ? e.slice(0, i) : e),
                this.params = {},
                this.hash = "",
                !_) {
                    if (!~this.path.indexOf("#"))
                        return;
                    var n = this.path.split("#");
                    this.path = n[0],
                    this.hash = a(n[1]) || "",
                    this.querystring = this.querystring.split("#")[0]
                }
            }
            function s(e, t) {
                t = t || {},
                this.path = "*" === e ? "(.*)" : e,
                this.method = "GET",
                this.regexp = u(this.path, this.keys = [], t)
            }
            function l(e) {
                if (1 === c(e) && !(e.metaKey || e.ctrlKey || e.shiftKey || e.defaultPrevented)) {
                    for (var t = e.path ? e.path[0] : e.target; t && "A" !== t.nodeName; )
                        t = t.parentNode;
                    if (t && "A" === t.nodeName && !t.hasAttribute("download") && "external" !== t.getAttribute("rel")) {
                        var r = t.getAttribute("href");
                        if ((_ || t.pathname !== m.pathname || !t.hash && "#" !== r) && !(r && r.indexOf("mailto:") > -1) && !t.target && h(t.href)) {
                            var a = t.pathname + t.search + (t.hash || "");
                            "undefined" != typeof i && a.match(/^\/[a-zA-Z]:\//) && (a = a.replace(/^\/[a-zA-Z]:\//, "/"));
                            var o = a;
                            0 === a.indexOf(y) && (a = a.substr(y.length)),
                            _ && (a = a.replace("#!", "")),
                            y && o === a || (e.preventDefault(),
                            n.show(o))
                        }
                    }
                }
            }
            function c(e) {
                return e = e || window.event,
                null === e.which ? e.button : e.which
            }
            function h(e) {
                var t = m.protocol + "//" + m.hostname;
                return m.port && (t += ":" + m.port),
                e && 0 === e.indexOf(t)
            }
            var u = e("path-to-regexp");
            t.exports = n;
            var d, p, f = "undefined" != typeof document && document.ontouchstart ? "touchstart" : "click", m = "undefined" != typeof window && (window.history.location || window.location), v = !0, g = !0, y = "", _ = !1;
            n.callbacks = [],
            n.exits = [],
            n.current = "",
            n.len = 0,
            n.base = function(e) {
                return 0 === arguments.length ? y : void (y = e)
            }
            ,
            n.start = function(e) {
                if (e = e || {},
                !d && (d = !0,
                !1 === e.dispatch && (v = !1),
                !1 === e.decodeURLComponents && (g = !1),
                !1 !== e.popstate && window.addEventListener("popstate", x, !1),
                !1 !== e.click && document.addEventListener(f, l, !1),
                !0 === e.hashbang && (_ = !0),
                v)) {
                    var t = _ && ~m.hash.indexOf("#!") ? m.hash.substr(2) + m.search : m.pathname + m.search + m.hash;
                    n.replace(t, null, !0, v)
                }
            }
            ,
            n.stop = function() {
                d && (n.current = "",
                n.len = 0,
                d = !1,
                document.removeEventListener(f, l, !1),
                window.removeEventListener("popstate", x, !1))
            }
            ,
            n.show = function(e, t, i, r) {
                var a = new o(e,t);
                return n.current = a.path,
                !1 !== i && n.dispatch(a),
                !1 !== a.handled && !1 !== r && a.pushState(),
                a
            }
            ,
            n.back = function(e, t) {
                n.len > 0 ? (history.back(),
                n.len--) : setTimeout(e ? function() {
                    n.show(e, t)
                }
                : function() {
                    n.show(y, t)
                }
                )
            }
            ,
            n.redirect = function(e, t) {
                "string" == typeof e && "string" == typeof t && n(e, function() {
                    setTimeout(function() {
                        n.replace(t)
                    }, 0)
                }),
                "string" == typeof e && "undefined" == typeof t && setTimeout(function() {
                    n.replace(e)
                }, 0)
            }
            ,
            n.replace = function(e, t, i, r) {
                var a = new o(e,t);
                return n.current = a.path,
                a.init = i,
                a.save(),
                !1 !== r && n.dispatch(a),
                a
            }
            ,
            n.dispatch = function(e) {
                function t() {
                    var e = n.exits[s++];
                    return e ? void e(a, t) : i()
                }
                function i() {
                    var t = n.callbacks[o++];
                    return e.path !== n.current ? void (e.handled = !1) : t ? void t(e, i) : r(e)
                }
                var a = p
                  , o = 0
                  , s = 0;
                p = e,
                a ? t() : i()
            }
            ,
            n.exit = function(e) {
                if ("function" == typeof e)
                    return n.exit("*", e);
                for (var t = new s(e), i = 1; i < arguments.length; ++i)
                    n.exits.push(t.middleware(arguments[i]))
            }
            ,
            n.Context = o,
            o.prototype.pushState = function() {
                n.len++,
                history.pushState(this.state, this.title, _ && "/" !== this.path ? "#!" + this.path : this.canonicalPath)
            }
            ,
            o.prototype.save = function() {
                history.replaceState(this.state, this.title, _ && "/" !== this.path ? "#!" + this.path : this.canonicalPath)
            }
            ,
            n.Route = s,
            s.prototype.middleware = function(e) {
                var t = this;
                return function(i, n) {
                    return t.match(i.path, i.params) ? e(i, n) : void n()
                }
            }
            ,
            s.prototype.match = function(e, t) {
                var i = this.keys
                  , n = e.indexOf("?")
                  , r = ~n ? e.slice(0, n) : e
                  , o = this.regexp.exec(decodeURIComponent(r));
                if (!o)
                    return !1;
                for (var s = 1, l = o.length; l > s; ++s) {
                    var c = i[s - 1]
                      , h = a(o[s]);
                    void 0 === h && hasOwnProperty.call(t, c.name) || (t[c.name] = h)
                }
                return !0
            }
            ;
            var x = function() {
                var e = !1;
                if ("undefined" != typeof window)
                    return "complete" === document.readyState ? e = !0 : window.addEventListener("load", function() {
                        setTimeout(function() {
                            e = !0
                        }, 0)
                    }),
                    function(t) {
                        if (e)
                            if (t.state) {
                                var i = t.state.path;
                                n.replace(i, t.state)
                            } else
                                n.show(m.pathname + m.hash, void 0, void 0, !1)
                    }
            }();
            n.sameOrigin = h
        }
        ).call(this, e("_process"))
    }
    , {
        _process: 11,
        "path-to-regexp": 10
    }],
    10: [function(e, t) {
        function i(e) {
            for (var t, i = [], n = 0, r = 0, a = ""; null != (t = m.exec(e)); ) {
                var s = t[0]
                  , l = t[1]
                  , c = t.index;
                if (a += e.slice(r, c),
                r = c + s.length,
                l)
                    a += l[1];
                else {
                    a && (i.push(a),
                    a = "");
                    var h = t[2]
                      , u = t[3]
                      , d = t[4]
                      , p = t[5]
                      , f = t[6]
                      , v = t[7]
                      , g = "+" === f || "*" === f
                      , y = "?" === f || "*" === f
                      , _ = h || "/"
                      , x = d || p || (v ? ".*" : "[^" + _ + "]+?");
                    i.push({
                        name: u || n++,
                        prefix: h || "",
                        delimiter: _,
                        optional: y,
                        repeat: g,
                        pattern: o(x)
                    })
                }
            }
            return r < e.length && (a += e.substr(r)),
            a && i.push(a),
            i
        }
        function n(e) {
            return r(i(e))
        }
        function r(e) {
            for (var t = new Array(e.length), i = 0; i < e.length; i++)
                "object" == typeof e[i] && (t[i] = new RegExp("^" + e[i].pattern + "$"));
            return function(i) {
                for (var n = "", r = i || {}, a = 0; a < e.length; a++) {
                    var o = e[a];
                    if ("string" != typeof o) {
                        var s, l = r[o.name];
                        if (null == l) {
                            if (o.optional)
                                continue;
                            throw new TypeError('Expected "' + o.name + '" to be defined')
                        }
                        if (f(l)) {
                            if (!o.repeat)
                                throw new TypeError('Expected "' + o.name + '" to not repeat, but received "' + l + '"');
                            if (0 === l.length) {
                                if (o.optional)
                                    continue;
                                throw new TypeError('Expected "' + o.name + '" to not be empty')
                            }
                            for (var c = 0; c < l.length; c++) {
                                if (s = encodeURIComponent(l[c]),
                                !t[a].test(s))
                                    throw new TypeError('Expected all "' + o.name + '" to match "' + o.pattern + '", but received "' + s + '"');
                                n += (0 === c ? o.prefix : o.delimiter) + s
                            }
                        } else {
                            if (s = encodeURIComponent(l),
                            !t[a].test(s))
                                throw new TypeError('Expected "' + o.name + '" to match "' + o.pattern + '", but received "' + s + '"');
                            n += o.prefix + s
                        }
                    } else
                        n += o
                }
                return n
            }
        }
        function a(e) {
            return e.replace(/([.+*?=^!:${}()[\]|\/])/g, "\\$1")
        }
        function o(e) {
            return e.replace(/([=!:$\/()])/g, "\\$1")
        }
        function s(e, t) {
            return e.keys = t,
            e
        }
        function l(e) {
            return e.sensitive ? "" : "i"
        }
        function c(e, t) {
            var i = e.source.match(/\((?!\?)/g);
            if (i)
                for (var n = 0; n < i.length; n++)
                    t.push({
                        name: n,
                        prefix: null,
                        delimiter: null,
                        optional: !1,
                        repeat: !1,
                        pattern: null
                    });
            return s(e, t)
        }
        function h(e, t, i) {
            for (var n = [], r = 0; r < e.length; r++)
                n.push(p(e[r], t, i).source);
            var a = new RegExp("(?:" + n.join("|") + ")",l(i));
            return s(a, t)
        }
        function u(e, t, n) {
            for (var r = i(e), a = d(r, n), o = 0; o < r.length; o++)
                "string" != typeof r[o] && t.push(r[o]);
            return s(a, t)
        }
        function d(e, t) {
            t = t || {};
            for (var i = t.strict, n = t.end !== !1, r = "", o = e[e.length - 1], s = "string" == typeof o && /\/$/.test(o), c = 0; c < e.length; c++) {
                var h = e[c];
                if ("string" == typeof h)
                    r += a(h);
                else {
                    var u = a(h.prefix)
                      , d = h.pattern;
                    h.repeat && (d += "(?:" + u + d + ")*"),
                    d = h.optional ? u ? "(?:" + u + "(" + d + "))?" : "(" + d + ")?" : u + "(" + d + ")",
                    r += d
                }
            }
            return i || (r = (s ? r.slice(0, -2) : r) + "(?:\\/(?=$))?"),
            r += n ? "$" : i && s ? "" : "(?=\\/|$)",
            new RegExp("^" + r,l(t))
        }
        function p(e, t, i) {
            return t = t || [],
            f(t) ? i || (i = {}) : (i = t,
            t = []),
            e instanceof RegExp ? c(e, t, i) : f(e) ? h(e, t, i) : u(e, t, i)
        }
        var f = e("isarray");
        t.exports = p,
        t.exports.parse = i,
        t.exports.compile = n,
        t.exports.tokensToFunction = r,
        t.exports.tokensToRegExp = d;
        var m = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")
    }
    , {
        isarray: 7
    }],
    11: [function(e, t) {
        function i() {
            if (!o) {
                o = !0;
                for (var e, t = a.length; t; ) {
                    e = a,
                    a = [];
                    for (var i = -1; ++i < t; )
                        e[i]();
                    t = a.length
                }
                o = !1
            }
        }
        function n() {}
        var r = t.exports = {}
          , a = []
          , o = !1;
        r.nextTick = function(e) {
            a.push(e),
            o || setTimeout(i, 0)
        }
        ,
        r.title = "browser",
        r.browser = !0,
        r.env = {},
        r.argv = [],
        r.version = "",
        r.versions = {},
        r.on = n,
        r.addListener = n,
        r.once = n,
        r.off = n,
        r.removeListener = n,
        r.removeAllListeners = n,
        r.emit = n,
        r.binding = function() {
            throw new Error("process.binding is not supported")
        }
        ,
        r.cwd = function() {
            return "/"
        }
        ,
        r.chdir = function() {
            throw new Error("process.chdir is not supported")
        }
        ,
        r.umask = function() {
            return 0
        }
    }
    , {}],
    12: [function(e, t) {
        !function(e, i) {
            "function" == typeof define && define.amd ? define([], function() {
                return e.PxLoader = i()
            }) : "object" == typeof t && t.exports ? t.exports = i() : e.PxLoader = i()
        }(this, function() {
            function e(e) {
                e = e || {},
                this.settings = e,
                null == e.statusInterval && (e.statusInterval = 5e3),
                null == e.loggingDelay && (e.loggingDelay = 2e4),
                null == e.noProgressTimeout && (e.noProgressTimeout = 1 / 0);
                var i, n = [], r = [], a = [], o = Date.now(), s = {
                    QUEUED: 0,
                    WAITING: 1,
                    LOADED: 2,
                    ERROR: 3,
                    TIMEOUT: 4
                }, l = function(e) {
                    return null == e ? [] : Array.isArray(e) ? e : [e]
                };
                this.add = function(e) {
                    e.tags = new t(e.tags),
                    null == e.priority && (e.priority = 1 / 0),
                    n.push({
                        resource: e,
                        status: s.QUEUED
                    })
                }
                ,
                this.addProgressListener = function(e, i) {
                    a.push({
                        callback: e,
                        tags: new t(i)
                    })
                }
                ,
                this.addCompletionListener = function(e, i) {
                    r.push({
                        tags: new t(i),
                        callback: function(t) {
                            t.completedCount === t.totalCount && e(t)
                        }
                    })
                }
                ;
                var c = function(e) {
                    e = l(e);
                    var t = function(t) {
                        for (var i = t.resource, n = 1 / 0, r = 0; r < i.tags.length; r++)
                            for (var a = 0; a < Math.min(e.length, n) && !(i.tags.all[r] === e[a] && n > a && (n = a,
                            0 === n)) && 0 !== n; a++)
                                ;
                        return n
                    };
                    return function(e, i) {
                        var n = t(e)
                          , r = t(i);
                        return r > n ? -1 : n > r ? 1 : e.priority < i.priority ? -1 : e.priority > i.priority ? 1 : 0
                    }
                };
                this.start = function(e) {
                    i = Date.now();
                    var t = c(e);
                    n.sort(t);
                    for (var r = 0, a = n.length; a > r; r++) {
                        var o = n[r];
                        o.status = s.WAITING,
                        o.resource.start(this)
                    }
                    setTimeout(h, 100)
                }
                ;
                var h = function() {
                    for (var t = !1, i = Date.now() - o, r = i >= e.noProgressTimeout, a = i >= e.loggingDelay, l = 0, c = n.length; c > l; l++) {
                        var u = n[l];
                        u.status === s.WAITING && (u.resource.checkStatus && u.resource.checkStatus(),
                        u.status === s.WAITING && (r ? u.resource.onTimeout() : t = !0))
                    }
                    a && t && p(),
                    t && setTimeout(h, e.statusInterval)
                };
                this.isBusy = function() {
                    for (var e = 0, t = n.length; t > e; e++)
                        if (n[e].status === s.QUEUED || n[e].status === s.WAITING)
                            return !0;
                    return !1
                }
                ;
                var u = function(e, t) {
                    var i, l, c, h, u, p = null;
                    for (i = 0,
                    l = n.length; l > i; i++)
                        if (n[i].resource === e) {
                            p = n[i];
                            break
                        }
                    if (null != p && p.status === s.WAITING)
                        for (p.status = t,
                        o = Date.now(),
                        c = a.concat(r),
                        i = 0,
                        l = c.length; l > i; i++)
                            h = c[i],
                            u = 0 === h.tags.length ? !0 : e.tags.intersects(h.tags),
                            u && d(p, h)
                };
                this.onLoad = function(e) {
                    u(e, s.LOADED)
                }
                ,
                this.onError = function(e) {
                    u(e, s.ERROR)
                }
                ,
                this.onTimeout = function(e) {
                    u(e, s.TIMEOUT)
                }
                ;
                var d = function(e, t) {
                    var i, r, a, o, l = 0, c = 0;
                    for (i = 0,
                    r = n.length; r > i; i++)
                        a = n[i],
                        o = !1,
                        o = 0 === t.tags.length ? !0 : a.resource.tags.intersects(t.tags),
                        o && (c++,
                        (a.status === s.LOADED || a.status === s.ERROR || a.status === s.TIMEOUT) && l++);
                    t.callback({
                        resource: e.resource,
                        loaded: e.status === s.LOADED,
                        error: e.status === s.ERROR,
                        timeout: e.status === s.TIMEOUT,
                        completedCount: l,
                        totalCount: c
                    })
                }
                  , p = this.log = function(e) {
                    if (window.console) {
                        var t = Math.round((Date.now() - i) / 1e3);
                        window.console.log("PxLoader elapsed: " + t + " sec");
                        for (var r = 0, a = n.length; a > r; r++) {
                            var o = n[r];
                            if (e || o.status === s.WAITING) {
                                var l = "PxLoader: #" + r + " " + o.resource.getName();
                                switch (o.status) {
                                case s.QUEUED:
                                    l += " (Not Started)";
                                    break;
                                case s.WAITING:
                                    l += " (Waiting)";
                                    break;
                                case s.LOADED:
                                    l += " (Loaded)";
                                    break;
                                case s.ERROR:
                                    l += " (Error)";
                                    break;
                                case s.TIMEOUT:
                                    l += " (Timeout)"
                                }
                                o.resource.tags.length > 0 && (l += " Tags: [" + o.resource.tags.all.join(",") + "]"),
                                window.console.log(l)
                            }
                        }
                    }
                }
            }
            function t(e) {
                if (this.all = [],
                this.first = null,
                this.length = 0,
                this.lookup = {},
                e) {
                    if (Array.isArray(e))
                        this.all = e.slice(0);
                    else if ("object" == typeof e)
                        for (var t in e)
                            e.hasOwnProperty(t) && this.all.push(t);
                    else
                        this.all.push(e);
                    this.length = this.all.length,
                    this.length > 0 && (this.first = this.all[0]);
                    for (var i = 0; i < this.length; i++)
                        this.lookup[this.all[i]] = !0
                }
            }
            return t.prototype.intersects = function(e) {
                if (0 === this.length || 0 === e.length)
                    return !1;
                if (1 === this.length && 1 === e.length)
                    return this.first === e.first;
                if (e.length < this.length)
                    return e.intersects(this);
                for (var t in this.lookup)
                    if (e.lookup[t])
                        return !0;
                return !1
            }
            ,
            e
        })
    }
    , {}],
    13: [function(e, t) {
        !function(i, n) {
            "function" == typeof define && define.amd ? define(["pxloader"], function(e) {
                return i.PxLoaderData = n(e)
            }) : "object" == typeof t && t.exports ? t.exports = n(e("pxloader")) : i.PxLoaderData = n(i.PxLoader)
        }(this, function(e) {
            function t(e, t, i, n) {
                n = n || {};
                var r = this
                  , a = null;
                this.tags = t,
                this.priority = i,
                this.xhr = new XMLHttpRequest;
                var o = function() {
                    4 === r.xhr.readyState && (200 === r.xhr.status ? s() : l())
                }
                  , s = function() {
                    a.onLoad(r),
                    h()
                }
                  , l = function() {
                    a.onError(r),
                    h()
                }
                  , c = function() {
                    a.onTimeout(r),
                    h()
                }
                  , h = function() {
                    r.unbind("readystatechange", o),
                    r.unbind("error", l)
                };
                this.start = function(t) {
                    a = t,
                    r.bind("readystatechange", o),
                    r.bind("error", l),
                    r.xhr.open("GET", e, !0),
                    r.xhr.send(null),
                    r.xhr.responseType = n.responseType ? n.responseType : ""
                }
                ,
                this.checkStatus = function() {
                    o()
                }
                ,
                this.onTimeout = function() {
                    4 === r.xhr.readyState ? 200 === r.xhr.status ? s() : l() : c()
                }
                ,
                this.getName = function() {
                    return e
                }
                ,
                this.bind = function(e, t) {
                    r.xhr.addEventListener(e, t, !1)
                }
                ,
                this.unbind = function(e, t) {
                    r.xhr.removeEventListener(e, t, !1)
                }
            }
            return e.prototype.addData = function(e, i, n, r) {
                var a = new t(e,i,n,r);
                return this.add(a),
                a.xhr
            }
            ,
            t
        })
    }
    , {
        pxloader: 12
    }],
    14: [function(e, t) {
        !function(i, n) {
            "function" == typeof define && define.amd ? define(["pxloader"], function(e) {
                return i.PxLoaderImage = n(e)
            }) : "object" == typeof t && t.exports ? t.exports = n(e("pxloader")) : i.PxLoaderImage = n(i.PxLoader)
        }(this, function(e) {
            function t(e, t, i, n) {
                n = n || {};
                var r, a = this, o = null;
                r = this.img = new Image,
                n.origin && (r.crossOrigin = n.origin),
                this.tags = t,
                this.priority = i;
                var s = function() {
                    "complete" === a.img.readyState && l()
                }
                  , l = function() {
                    o.onLoad(a),
                    u()
                }
                  , c = function() {
                    o.onError(a),
                    u()
                }
                  , h = function() {
                    o.onTimeout(a),
                    u()
                }
                  , u = function() {
                    a.unbind("load", l),
                    a.unbind("readystatechange", s),
                    a.unbind("error", c)
                };
                this.start = function(t) {
                    o = t,
                    a.bind("load", l),
                    a.bind("readystatechange", s),
                    a.bind("error", c),
                    a.img.src = e
                }
                ,
                this.checkStatus = function() {
                    s()
                }
                ,
                this.onTimeout = function() {
                    a.img.complete ? l() : h()
                }
                ,
                this.getName = function() {
                    return e
                }
                ,
                this.bind = function(e, t) {
                    a.img.addEventListener(e, t, !1)
                }
                ,
                this.unbind = function(e, t) {
                    a.img.removeEventListener(e, t, !1)
                }
            }
            return e.prototype.addImage = function(e, i, n, r) {
                var a = new t(e,i,n,r);
                return this.add(a),
                a.img
            }
            ,
            t
        })
    }
    , {
        pxloader: 12
    }],
    15: [function(e, t, i) {
        !function(e, n) {
            "object" == typeof i && "undefined" != typeof t ? t.exports = n() : "function" == typeof define && define.amd ? define(n) : e.Stats = n()
        }(this, function() {
            var e = function() {
                function t(e) {
                    return r.appendChild(e.dom),
                    e
                }
                function i(e) {
                    for (var t = 0; t < r.children.length; t++)
                        r.children[t].style.display = t === e ? "block" : "none";
                    n = e
                }
                var n = 0
                  , r = document.createElement("div");
                r.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",
                r.addEventListener("click", function(e) {
                    e.preventDefault(),
                    i(++n % r.children.length)
                }, !1);
                var a = (performance || Date).now()
                  , o = a
                  , s = 0
                  , l = t(new e.Panel("FPS","#0ff","#002"))
                  , c = t(new e.Panel("MS","#0f0","#020"));
                if (self.performance && self.performance.memory)
                    var h = t(new e.Panel("MB","#f08","#201"));
                return i(0),
                {
                    REVISION: 16,
                    dom: r,
                    addPanel: t,
                    showPanel: i,
                    begin: function() {
                        a = (performance || Date).now()
                    },
                    end: function() {
                        s++;
                        var e = (performance || Date).now();
                        if (c.update(e - a, 200),
                        e > o + 1e3 && (l.update(1e3 * s / (e - o), 100),
                        o = e,
                        s = 0,
                        h)) {
                            var t = performance.memory;
                            h.update(t.usedJSHeapSize / 1048576, t.jsHeapSizeLimit / 1048576)
                        }
                        return e
                    },
                    update: function() {
                        a = this.end()
                    },
                    domElement: r,
                    setMode: i
                }
            };
            return e.Panel = function(e, t, i) {
                var n = 1 / 0
                  , r = 0
                  , a = Math.round
                  , o = a(window.devicePixelRatio || 1)
                  , s = 80 * o
                  , l = 48 * o
                  , c = 3 * o
                  , h = 2 * o
                  , u = 3 * o
                  , d = 15 * o
                  , p = 74 * o
                  , f = 30 * o
                  , m = document.createElement("canvas");
                m.width = s,
                m.height = l,
                m.style.cssText = "width:80px;height:48px";
                var v = m.getContext("2d");
                return v.font = "bold " + 9 * o + "px Helvetica,Arial,sans-serif",
                v.textBaseline = "top",
                v.fillStyle = i,
                v.fillRect(0, 0, s, l),
                v.fillStyle = t,
                v.fillText(e, c, h),
                v.fillRect(u, d, p, f),
                v.fillStyle = i,
                v.globalAlpha = .9,
                v.fillRect(u, d, p, f),
                {
                    dom: m,
                    update: function(l, g) {
                        n = Math.min(n, l),
                        r = Math.max(r, l),
                        v.fillStyle = i,
                        v.globalAlpha = 1,
                        v.fillRect(0, 0, s, d),
                        v.fillStyle = t,
                        v.fillText(a(l) + " " + e + " (" + a(n) + "-" + a(r) + ")", c, h),
                        v.drawImage(m, u + o, d, p - o, f, u, d, p - o, f),
                        v.fillRect(u + p - o, d, o, f),
                        v.fillStyle = i,
                        v.globalAlpha = .9,
                        v.fillRect(u + p - o, d, o, a((1 - l / g) * f))
                    }
                }
            }
            ,
            e
        })
    }
    , {}],
    16: [function(e, t, i) {
        !function(e, n) {
            "object" == typeof i && "undefined" != typeof t ? n(i) : "function" == typeof define && define.amd ? define(["exports"], n) : n(e.THREE = e.THREE || {})
        }(this, function(e) {
            "use strict";
            function t() {}
            function i(e, t) {
                this.x = e || 0,
                this.y = t || 0
            }
            function n() {
                this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
            }
            function r(e, t, i, n) {
                this._x = e || 0,
                this._y = t || 0,
                this._z = i || 0,
                this._w = void 0 !== n ? n : 1
            }
            function a(e, t, i) {
                this.x = e || 0,
                this.y = t || 0,
                this.z = i || 0
            }
            function o() {
                this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
            }
            function s(e, t, n, r, a, l, c, h, u, d) {
                Object.defineProperty(this, "id", {
                    value: Rl++
                }),
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.image = void 0 !== e ? e : s.DEFAULT_IMAGE,
                this.mipmaps = [],
                this.mapping = void 0 !== t ? t : s.DEFAULT_MAPPING,
                this.wrapS = void 0 !== n ? n : Es,
                this.wrapT = void 0 !== r ? r : Es,
                this.magFilter = void 0 !== a ? a : Ls,
                this.minFilter = void 0 !== l ? l : Os,
                this.anisotropy = void 0 !== u ? u : 1,
                this.format = void 0 !== c ? c : Ys,
                this.type = void 0 !== h ? h : Is,
                this.offset = new i(0,0),
                this.repeat = new i(1,1),
                this.center = new i(0,0),
                this.rotation = 0,
                this.matrixAutoUpdate = !0,
                this.matrix = new o,
                this.generateMipmaps = !0,
                this.premultiplyAlpha = !1,
                this.flipY = !0,
                this.unpackAlignment = 4,
                this.encoding = void 0 !== d ? d : xl,
                this.version = 0,
                this.onUpdate = null
            }
            function l(e, t, i, n) {
                this.x = e || 0,
                this.y = t || 0,
                this.z = i || 0,
                this.w = void 0 !== n ? n : 1
            }
            function c(e, t, i) {
                this.uuid = Ll.generateUUID(),
                this.width = e,
                this.height = t,
                this.scissor = new l(0,0,e,t),
                this.scissorTest = !1,
                this.viewport = new l(0,0,e,t),
                i = i || {},
                void 0 === i.minFilter && (i.minFilter = Ls),
                this.texture = new s(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),
                this.depthBuffer = void 0 !== i.depthBuffer ? i.depthBuffer : !0,
                this.stencilBuffer = void 0 !== i.stencilBuffer ? i.stencilBuffer : !0,
                this.depthTexture = void 0 !== i.depthTexture ? i.depthTexture : null
            }
            function h(e, t, i) {
                c.call(this, e, t, i),
                this.activeCubeFace = 0,
                this.activeMipMapLevel = 0
            }
            function u(e, t, i, n, r, a, o, l, c, h, u, d) {
                s.call(this, null, a, o, l, c, h, n, r, u, d),
                this.image = {
                    data: e,
                    width: t,
                    height: i
                },
                this.magFilter = void 0 !== c ? c : As,
                this.minFilter = void 0 !== h ? h : As,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.unpackAlignment = 1
            }
            function d(e, t, i, n, r, a, o, l, c, h) {
                e = void 0 !== e ? e : [],
                t = void 0 !== t ? t : gs,
                s.call(this, e, t, i, n, r, a, o, l, c, h),
                this.flipY = !1
            }
            function p() {
                this.seq = [],
                this.map = {}
            }
            function f(e, t, i) {
                var n = e[0];
                if (0 >= n || n > 0)
                    return e;
                var r = t * i
                  , a = Dl[r];
                if (void 0 === a && (a = new Float32Array(r),
                Dl[r] = a),
                0 !== t) {
                    n.toArray(a, 0);
                    for (var o = 1, s = 0; o !== t; ++o)
                        s += i,
                        e[o].toArray(a, s)
                }
                return a
            }
            function m(e, t) {
                var i = Ul[t];
                void 0 === i && (i = new Int32Array(t),
                Ul[t] = i);
                for (var n = 0; n !== t; ++n)
                    i[n] = e.allocTextureUnit();
                return i
            }
            function v(e, t) {
                e.uniform1f(this.addr, t)
            }
            function g(e, t) {
                e.uniform1i(this.addr, t)
            }
            function y(e, t) {
                void 0 === t.x ? e.uniform2fv(this.addr, t) : e.uniform2f(this.addr, t.x, t.y)
            }
            function _(e, t) {
                void 0 !== t.x ? e.uniform3f(this.addr, t.x, t.y, t.z) : void 0 !== t.r ? e.uniform3f(this.addr, t.r, t.g, t.b) : e.uniform3fv(this.addr, t)
            }
            function x(e, t) {
                void 0 === t.x ? e.uniform4fv(this.addr, t) : e.uniform4f(this.addr, t.x, t.y, t.z, t.w)
            }
            function b(e, t) {
                e.uniformMatrix2fv(this.addr, !1, t.elements || t)
            }
            function w(e, t) {
                void 0 === t.elements ? e.uniformMatrix3fv(this.addr, !1, t) : (kl.set(t.elements),
                e.uniformMatrix3fv(this.addr, !1, kl))
            }
            function T(e, t) {
                void 0 === t.elements ? e.uniformMatrix4fv(this.addr, !1, t) : (Fl.set(t.elements),
                e.uniformMatrix4fv(this.addr, !1, Fl))
            }
            function M(e, t, i) {
                var n = i.allocTextureUnit();
                e.uniform1i(this.addr, n),
                i.setTexture2D(t || Ol, n)
            }
            function E(e, t, i) {
                var n = i.allocTextureUnit();
                e.uniform1i(this.addr, n),
                i.setTextureCube(t || Il, n)
            }
            function S(e, t) {
                e.uniform2iv(this.addr, t)
            }
            function A(e, t) {
                e.uniform3iv(this.addr, t)
            }
            function P(e, t) {
                e.uniform4iv(this.addr, t)
            }
            function C(e) {
                switch (e) {
                case 5126:
                    return v;
                case 35664:
                    return y;
                case 35665:
                    return _;
                case 35666:
                    return x;
                case 35674:
                    return b;
                case 35675:
                    return w;
                case 35676:
                    return T;
                case 35678:
                case 36198:
                    return M;
                case 35680:
                    return E;
                case 5124:
                case 35670:
                    return g;
                case 35667:
                case 35671:
                    return S;
                case 35668:
                case 35672:
                    return A;
                case 35669:
                case 35673:
                    return P
                }
            }
            function L(e, t) {
                e.uniform1fv(this.addr, t)
            }
            function R(e, t) {
                e.uniform1iv(this.addr, t)
            }
            function O(e, t) {
                e.uniform2fv(this.addr, f(t, this.size, 2))
            }
            function I(e, t) {
                e.uniform3fv(this.addr, f(t, this.size, 3))
            }
            function D(e, t) {
                e.uniform4fv(this.addr, f(t, this.size, 4))
            }
            function U(e, t) {
                e.uniformMatrix2fv(this.addr, !1, f(t, this.size, 4))
            }
            function F(e, t) {
                e.uniformMatrix3fv(this.addr, !1, f(t, this.size, 9))
            }
            function k(e, t) {
                e.uniformMatrix4fv(this.addr, !1, f(t, this.size, 16))
            }
            function N(e, t, i) {
                var n = t.length
                  , r = m(i, n);
                e.uniform1iv(this.addr, r);
                for (var a = 0; a !== n; ++a)
                    i.setTexture2D(t[a] || Ol, r[a])
            }
            function z(e, t, i) {
                var n = t.length
                  , r = m(i, n);
                e.uniform1iv(this.addr, r);
                for (var a = 0; a !== n; ++a)
                    i.setTextureCube(t[a] || Il, r[a])
            }
            function B(e) {
                switch (e) {
                case 5126:
                    return L;
                case 35664:
                    return O;
                case 35665:
                    return I;
                case 35666:
                    return D;
                case 35674:
                    return U;
                case 35675:
                    return F;
                case 35676:
                    return k;
                case 35678:
                    return N;
                case 35680:
                    return z;
                case 5124:
                case 35670:
                    return R;
                case 35667:
                case 35671:
                    return S;
                case 35668:
                case 35672:
                    return A;
                case 35669:
                case 35673:
                    return P
                }
            }
            function G(e, t, i) {
                this.id = e,
                this.addr = i,
                this.setValue = C(t.type)
            }
            function H(e, t, i) {
                this.id = e,
                this.addr = i,
                this.size = t.size,
                this.setValue = B(t.type)
            }
            function j(e) {
                this.id = e,
                p.call(this)
            }
            function V(e, t) {
                e.seq.push(t),
                e.map[t.id] = t
            }
            function W(e, t, i) {
                var n = e.name
                  , r = n.length;
                for (Nl.lastIndex = 0; ; ) {
                    var a = Nl.exec(n)
                      , o = Nl.lastIndex
                      , s = a[1]
                      , l = "]" === a[2]
                      , c = a[3];
                    if (l && (s = 0 | s),
                    void 0 === c || "[" === c && o + 2 === r) {
                        V(i, void 0 === c ? new G(s,e,t) : new H(s,e,t));
                        break
                    }
                    var h = i.map
                      , u = h[s];
                    void 0 === u && (u = new j(s),
                    V(i, u)),
                    i = u
                }
            }
            function X(e, t, i) {
                p.call(this),
                this.renderer = i;
                for (var n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), r = 0; n > r; ++r) {
                    var a = e.getActiveUniform(t, r)
                      , o = a.name
                      , s = e.getUniformLocation(t, o);
                    W(a, s, this)
                }
            }
            function Y(e, t, i) {
                return void 0 === t && void 0 === i ? this.set(e) : this.setRGB(e, t, i)
            }
            function q(e, t) {
                this.min = void 0 !== e ? e : new i(+1 / 0,+1 / 0),
                this.max = void 0 !== t ? t : new i(-1 / 0,-1 / 0)
            }
            function Z(e, t, n, r, o) {
                function s() {
                    var e = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                      , i = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    c = t.createBuffer(),
                    h = t.createBuffer(),
                    t.bindBuffer(t.ARRAY_BUFFER, c),
                    t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW),
                    t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h),
                    t.bufferData(t.ELEMENT_ARRAY_BUFFER, i, t.STATIC_DRAW),
                    m = t.createTexture(),
                    v = t.createTexture(),
                    n.bindTexture(t.TEXTURE_2D, m),
                    t.texImage2D(t.TEXTURE_2D, 0, t.RGB, 16, 16, 0, t.RGB, t.UNSIGNED_BYTE, null),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST),
                    n.bindTexture(t.TEXTURE_2D, v),
                    t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, 16, 16, 0, t.RGBA, t.UNSIGNED_BYTE, null),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.NEAREST),
                    t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.NEAREST),
                    u = {
                        vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "	vUV = uv;", "	vec2 pos = position;", "	if ( renderType == 2 ) {", "		vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "		visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "		vVisibility =        visibility.r / 9.0;", "		vVisibility *= 1.0 - visibility.g / 9.0;", "		vVisibility *=       visibility.b / 9.0;", "		vVisibility *= 1.0 - visibility.a / 9.0;", "		pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "		pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "	}", "	gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                        fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "	if ( renderType == 0 ) {", "		gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "	} else if ( renderType == 1 ) {", "		gl_FragColor = texture2D( map, vUV );", "	} else {", "		vec4 texture = texture2D( map, vUV );", "		texture.a *= opacity * vVisibility;", "		gl_FragColor = texture;", "		gl_FragColor.rgb *= color;", "	}", "}"].join("\n")
                    },
                    d = l(u),
                    p = {
                        vertex: t.getAttribLocation(d, "position"),
                        uv: t.getAttribLocation(d, "uv")
                    },
                    f = {
                        renderType: t.getUniformLocation(d, "renderType"),
                        map: t.getUniformLocation(d, "map"),
                        occlusionMap: t.getUniformLocation(d, "occlusionMap"),
                        opacity: t.getUniformLocation(d, "opacity"),
                        color: t.getUniformLocation(d, "color"),
                        scale: t.getUniformLocation(d, "scale"),
                        rotation: t.getUniformLocation(d, "rotation"),
                        screenPosition: t.getUniformLocation(d, "screenPosition")
                    }
                }
                function l(e) {
                    var i = t.createProgram()
                      , n = t.createShader(t.FRAGMENT_SHADER)
                      , r = t.createShader(t.VERTEX_SHADER)
                      , a = "precision " + o.precision + " float;\n";
                    return t.shaderSource(n, a + e.fragmentShader),
                    t.shaderSource(r, a + e.vertexShader),
                    t.compileShader(n),
                    t.compileShader(r),
                    t.attachShader(i, n),
                    t.attachShader(i, r),
                    t.linkProgram(i),
                    i
                }
                var c, h, u, d, p, f, m, v;
                this.render = function(e, o, l, u) {
                    if (0 !== e.length) {
                        var g = new a
                          , y = u.w / u.z
                          , _ = .5 * u.z
                          , x = .5 * u.w
                          , b = 16 / u.w
                          , w = new i(b * y,b)
                          , T = new a(1,1,0)
                          , M = new i(1,1)
                          , E = new q;
                        E.min.set(u.x, u.y),
                        E.max.set(u.x + (u.z - 16), u.y + (u.w - 16)),
                        void 0 === d && s(),
                        n.useProgram(d),
                        n.initAttributes(),
                        n.enableAttribute(p.vertex),
                        n.enableAttribute(p.uv),
                        n.disableUnusedAttributes(),
                        t.uniform1i(f.occlusionMap, 0),
                        t.uniform1i(f.map, 1),
                        t.bindBuffer(t.ARRAY_BUFFER, c),
                        t.vertexAttribPointer(p.vertex, 2, t.FLOAT, !1, 16, 0),
                        t.vertexAttribPointer(p.uv, 2, t.FLOAT, !1, 16, 8),
                        t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, h),
                        n.disable(t.CULL_FACE),
                        n.buffers.depth.setMask(!1);
                        for (var S = 0, A = e.length; A > S; S++) {
                            b = 16 / u.w,
                            w.set(b * y, b);
                            var P = e[S];
                            if (g.set(P.matrixWorld.elements[12], P.matrixWorld.elements[13], P.matrixWorld.elements[14]),
                            g.applyMatrix4(l.matrixWorldInverse),
                            g.applyMatrix4(l.projectionMatrix),
                            T.copy(g),
                            M.x = u.x + T.x * _ + _ - 8,
                            M.y = u.y + T.y * x + x - 8,
                            E.containsPoint(M) === !0) {
                                n.activeTexture(t.TEXTURE0),
                                n.bindTexture(t.TEXTURE_2D, null),
                                n.activeTexture(t.TEXTURE1),
                                n.bindTexture(t.TEXTURE_2D, m),
                                t.copyTexImage2D(t.TEXTURE_2D, 0, t.RGB, M.x, M.y, 16, 16, 0),
                                t.uniform1i(f.renderType, 0),
                                t.uniform2f(f.scale, w.x, w.y),
                                t.uniform3f(f.screenPosition, T.x, T.y, T.z),
                                n.disable(t.BLEND),
                                n.enable(t.DEPTH_TEST),
                                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                                n.activeTexture(t.TEXTURE0),
                                n.bindTexture(t.TEXTURE_2D, v),
                                t.copyTexImage2D(t.TEXTURE_2D, 0, t.RGBA, M.x, M.y, 16, 16, 0),
                                t.uniform1i(f.renderType, 1),
                                n.disable(t.DEPTH_TEST),
                                n.activeTexture(t.TEXTURE1),
                                n.bindTexture(t.TEXTURE_2D, m),
                                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                                P.positionScreen.copy(T),
                                P.customUpdateCallback ? P.customUpdateCallback(P) : P.updateLensFlares(),
                                t.uniform1i(f.renderType, 2),
                                n.enable(t.BLEND);
                                for (var C = 0, L = P.lensFlares.length; L > C; C++) {
                                    var R = P.lensFlares[C];
                                    R.opacity > .001 && R.scale > .001 && (T.x = R.x,
                                    T.y = R.y,
                                    T.z = R.z,
                                    b = R.size * R.scale / u.w,
                                    w.x = b * y,
                                    w.y = b,
                                    t.uniform3f(f.screenPosition, T.x, T.y, T.z),
                                    t.uniform2f(f.scale, w.x, w.y),
                                    t.uniform1f(f.rotation, R.rotation),
                                    t.uniform1f(f.opacity, R.opacity),
                                    t.uniform3f(f.color, R.color.r, R.color.g, R.color.b),
                                    n.setBlending(R.blending, R.blendEquation, R.blendSrc, R.blendDst),
                                    r.setTexture2D(R.texture, 1),
                                    t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0))
                                }
                            }
                        }
                        n.enable(t.CULL_FACE),
                        n.enable(t.DEPTH_TEST),
                        n.buffers.depth.setMask(!0),
                        n.reset()
                    }
                }
            }
            function Q(e, t, i, n, r, a, o, l, c) {
                s.call(this, e, t, i, n, r, a, o, l, c),
                this.needsUpdate = !0
            }
            function J(e, t, i, n, o) {
                function s() {
                    var e = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                      , i = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    h = t.createBuffer(),
                    u = t.createBuffer(),
                    t.bindBuffer(t.ARRAY_BUFFER, h),
                    t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW),
                    t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, u),
                    t.bufferData(t.ELEMENT_ARRAY_BUFFER, i, t.STATIC_DRAW),
                    d = l(),
                    p = {
                        position: t.getAttribLocation(d, "position"),
                        uv: t.getAttribLocation(d, "uv")
                    },
                    f = {
                        uvOffset: t.getUniformLocation(d, "uvOffset"),
                        uvScale: t.getUniformLocation(d, "uvScale"),
                        rotation: t.getUniformLocation(d, "rotation"),
                        scale: t.getUniformLocation(d, "scale"),
                        color: t.getUniformLocation(d, "color"),
                        map: t.getUniformLocation(d, "map"),
                        opacity: t.getUniformLocation(d, "opacity"),
                        modelViewMatrix: t.getUniformLocation(d, "modelViewMatrix"),
                        projectionMatrix: t.getUniformLocation(d, "projectionMatrix"),
                        fogType: t.getUniformLocation(d, "fogType"),
                        fogDensity: t.getUniformLocation(d, "fogDensity"),
                        fogNear: t.getUniformLocation(d, "fogNear"),
                        fogFar: t.getUniformLocation(d, "fogFar"),
                        fogColor: t.getUniformLocation(d, "fogColor"),
                        fogDepth: t.getUniformLocation(d, "fogDepth"),
                        alphaTest: t.getUniformLocation(d, "alphaTest")
                    };
                    var n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    n.width = 8,
                    n.height = 8;
                    var r = n.getContext("2d");
                    r.fillStyle = "white",
                    r.fillRect(0, 0, 8, 8),
                    m = new Q(n)
                }
                function l() {
                    var e = t.createProgram()
                      , i = t.createShader(t.VERTEX_SHADER)
                      , n = t.createShader(t.FRAGMENT_SHADER);
                    return t.shaderSource(i, ["precision " + o.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "	vUV = uvOffset + uv * uvScale;", "	vec2 alignedPosition = position * scale;", "	vec2 rotatedPosition;", "	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "	vec4 mvPosition;", "	mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "	mvPosition.xy += rotatedPosition;", "	gl_Position = projectionMatrix * mvPosition;", "	fogDepth = - mvPosition.z;", "}"].join("\n")),
                    t.shaderSource(n, ["precision " + o.precision + " float;", "#define SHADER_NAME SpriteMaterial", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "varying float fogDepth;", "void main() {", "	vec4 texture = texture2D( map, vUV );", "	gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "	if ( gl_FragColor.a < alphaTest ) discard;", "	if ( fogType > 0 ) {", "		float fogFactor = 0.0;", "		if ( fogType == 1 ) {", "			fogFactor = smoothstep( fogNear, fogFar, fogDepth );", "		} else {", "			const float LOG2 = 1.442695;", "			fogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );", "			fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "		}", "		gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "	}", "}"].join("\n")),
                    t.compileShader(i),
                    t.compileShader(n),
                    t.attachShader(e, i),
                    t.attachShader(e, n),
                    t.linkProgram(e),
                    e
                }
                function c(e, t) {
                    return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : t.id - e.id
                }
                var h, u, d, p, f, m, v = new a, g = new r, y = new a;
                this.render = function(r, a, o) {
                    if (0 !== r.length) {
                        void 0 === d && s(),
                        i.useProgram(d),
                        i.initAttributes(),
                        i.enableAttribute(p.position),
                        i.enableAttribute(p.uv),
                        i.disableUnusedAttributes(),
                        i.disable(t.CULL_FACE),
                        i.enable(t.BLEND),
                        t.bindBuffer(t.ARRAY_BUFFER, h),
                        t.vertexAttribPointer(p.position, 2, t.FLOAT, !1, 16, 0),
                        t.vertexAttribPointer(p.uv, 2, t.FLOAT, !1, 16, 8),
                        t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, u),
                        t.uniformMatrix4fv(f.projectionMatrix, !1, o.projectionMatrix.elements),
                        i.activeTexture(t.TEXTURE0),
                        t.uniform1i(f.map, 0);
                        var l = 0
                          , _ = 0
                          , x = a.fog;
                        x ? (t.uniform3f(f.fogColor, x.color.r, x.color.g, x.color.b),
                        x.isFog ? (t.uniform1f(f.fogNear, x.near),
                        t.uniform1f(f.fogFar, x.far),
                        t.uniform1i(f.fogType, 1),
                        l = 1,
                        _ = 1) : x.isFogExp2 && (t.uniform1f(f.fogDensity, x.density),
                        t.uniform1i(f.fogType, 2),
                        l = 2,
                        _ = 2)) : (t.uniform1i(f.fogType, 0),
                        l = 0,
                        _ = 0);
                        for (var b = 0, w = r.length; w > b; b++) {
                            var T = r[b];
                            T.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, T.matrixWorld),
                            T.z = -T.modelViewMatrix.elements[14]
                        }
                        r.sort(c);
                        for (var M = [], b = 0, w = r.length; w > b; b++) {
                            var T = r[b]
                              , E = T.material;
                            if (E.visible !== !1) {
                                T.onBeforeRender(e, a, o, void 0, E, void 0),
                                t.uniform1f(f.alphaTest, E.alphaTest),
                                t.uniformMatrix4fv(f.modelViewMatrix, !1, T.modelViewMatrix.elements),
                                T.matrixWorld.decompose(v, g, y),
                                M[0] = y.x,
                                M[1] = y.y;
                                var S = 0;
                                a.fog && E.fog && (S = _),
                                l !== S && (t.uniform1i(f.fogType, S),
                                l = S),
                                null !== E.map ? (t.uniform2f(f.uvOffset, E.map.offset.x, E.map.offset.y),
                                t.uniform2f(f.uvScale, E.map.repeat.x, E.map.repeat.y)) : (t.uniform2f(f.uvOffset, 0, 0),
                                t.uniform2f(f.uvScale, 1, 1)),
                                t.uniform1f(f.opacity, E.opacity),
                                t.uniform3f(f.color, E.color.r, E.color.g, E.color.b),
                                t.uniform1f(f.rotation, E.rotation),
                                t.uniform2fv(f.scale, M),
                                i.setBlending(E.blending, E.blendEquation, E.blendSrc, E.blendDst, E.blendEquationAlpha, E.blendSrcAlpha, E.blendDstAlpha, E.premultipliedAlpha),
                                i.buffers.depth.setTest(E.depthTest),
                                i.buffers.depth.setMask(E.depthWrite),
                                i.buffers.color.setMask(E.colorWrite),
                                n.setTexture2D(E.map || m, 0),
                                t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0),
                                T.onAfterRender(e, a, o, void 0, E, void 0)
                            }
                        }
                        i.enable(t.CULL_FACE),
                        i.reset()
                    }
                }
            }
            function K() {
                Object.defineProperty(this, "id", {
                    value: Wh++
                }),
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.type = "Material",
                this.fog = !0,
                this.lights = !0,
                this.blending = Io,
                this.side = Mo,
                this.flatShading = !1,
                this.vertexColors = Co,
                this.opacity = 1,
                this.transparent = !1,
                this.blendSrc = Yo,
                this.blendDst = qo,
                this.blendEquation = No,
                this.blendSrcAlpha = null,
                this.blendDstAlpha = null,
                this.blendEquationAlpha = null,
                this.depthFunc = ns,
                this.depthTest = !0,
                this.depthWrite = !0,
                this.clippingPlanes = null,
                this.clipIntersection = !1,
                this.clipShadows = !1,
                this.colorWrite = !0,
                this.precision = null,
                this.polygonOffset = !1,
                this.polygonOffsetFactor = 0,
                this.polygonOffsetUnits = 0,
                this.dithering = !1,
                this.alphaTest = 0,
                this.premultipliedAlpha = !1,
                this.overdraw = 0,
                this.visible = !0,
                this.userData = {},
                this.needsUpdate = !0
            }
            function $(e) {
                K.call(this),
                this.type = "MeshDepthMaterial",
                this.depthPacking = Pl,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.setValues(e)
            }
            function et(e) {
                K.call(this),
                this.type = "MeshDistanceMaterial",
                this.referencePosition = new a,
                this.nearDistance = 1,
                this.farDistance = 1e3,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.fog = !1,
                this.lights = !1,
                this.setValues(e)
            }
            function tt(e, t) {
                this.min = void 0 !== e ? e : new a(+1 / 0,+1 / 0,+1 / 0),
                this.max = void 0 !== t ? t : new a(-1 / 0,-1 / 0,-1 / 0)
            }
            function it(e, t) {
                this.center = void 0 !== e ? e : new a,
                this.radius = void 0 !== t ? t : 0
            }
            function nt(e, t) {
                this.normal = void 0 !== e ? e : new a(1,0,0),
                this.constant = void 0 !== t ? t : 0
            }
            function rt(e, t, i, n, r, a) {
                this.planes = [void 0 !== e ? e : new nt, void 0 !== t ? t : new nt, void 0 !== i ? i : new nt, void 0 !== n ? n : new nt, void 0 !== r ? r : new nt, void 0 !== a ? a : new nt]
            }
            function at(e, t, r) {
                function o(t, i, n, r, a, o) {
                    var s = t.geometry
                      , l = null
                      , c = _
                      , h = t.customDepthMaterial;
                    if (console.log(h),
                    n && (c = x,
                    h = t.customDistanceMaterial),
                    h)
                        l = h;
                    else {
                        var u = !1;
                        i.morphTargets && (s && s.isBufferGeometry ? u = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : s && s.isGeometry && (u = s.morphTargets && s.morphTargets.length > 0)),
                        t.isSkinnedMesh && i.skinning === !1 && console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t);
                        var d = t.isSkinnedMesh && i.skinning
                          , p = 0;
                        u && (p |= v),
                        d && (p |= g),
                        l = c[p]
                    }
                    if (e.localClippingEnabled && i.clipShadows === !0 && 0 !== i.clippingPlanes.length) {
                        var f = l.uuid
                          , m = i.uuid
                          , y = b[f];
                        void 0 === y && (y = {},
                        b[f] = y);
                        var w = y[m];
                        void 0 === w && (w = l.clone(),
                        y[m] = w),
                        l = w
                    }
                    l.visible = i.visible,
                    l.wireframe = i.wireframe;
                    var T = i.side;
                    return L.renderSingleSided && T == So && (T = Mo),
                    L.renderReverseSided && (T === Mo ? T = Eo : T === Eo && (T = Mo)),
                    l.side = T,
                    l.clipShadows = i.clipShadows,
                    l.clippingPlanes = i.clippingPlanes,
                    l.clipIntersection = i.clipIntersection,
                    l.wireframeLinewidth = i.wireframeLinewidth,
                    l.linewidth = i.linewidth,
                    n && l.isMeshDistanceMaterial && (l.referencePosition.copy(r),
                    l.nearDistance = a,
                    l.farDistance = o),
                    l
                }
                function s(i, n, r, a) {
                    if (console.log("visible", i.visible),
                    i.visible !== !1) {
                        var l = i.layers.test(n.layers);
                        if (console.log("-------"),
                        console.log(i.castShadow),
                        console.log(i.frustumCulled),
                        console.log(h.intersectsObject(i)),
                        l && (i.isMesh || i.isLine || i.isPoints) && i.castShadow && (!i.frustumCulled || h.intersectsObject(i))) {
                            i.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse, i.matrixWorld);
                            var c = t.update(i)
                              , u = i.material;
                            if (Array.isArray(u))
                                for (var d = c.groups, p = 0, f = d.length; f > p; p++) {
                                    var v = d[p]
                                      , g = u[v.materialIndex];
                                    if (g && g.visible) {
                                        var y = o(i, g, a, m, r.near, r.far);
                                        e.renderBufferDirect(r, null, c, y, i, v)
                                    }
                                }
                            else if (u.visible) {
                                var y = o(i, u, a, m, r.near, r.far);
                                e.renderBufferDirect(r, null, c, y, i, null)
                            }
                        }
                        for (var _ = i.children, x = 0, b = _.length; b > x; x++)
                            s(_[x], n, r, a)
                    }
                }
                for (var h = new rt, u = new n, d = new i, p = new i(r,r), f = new a, m = new a, v = 1, g = 2, y = (v | g) + 1, _ = new Array(y), x = new Array(y), b = {}, w = [new a(1,0,0), new a(-1,0,0), new a(0,0,1), new a(0,0,-1), new a(0,1,0), new a(0,-1,0)], T = [new a(0,1,0), new a(0,1,0), new a(0,1,0), new a(0,1,0), new a(0,0,1), new a(0,0,-1)], M = [new l, new l, new l, new l, new l, new l], E = 0; E !== y; ++E) {
                    var S = 0 !== (E & v)
                      , A = 0 !== (E & g)
                      , P = new $({
                        depthPacking: Cl,
                        morphTargets: S,
                        skinning: A
                    });
                    _[E] = P;
                    var C = new et({
                        morphTargets: S,
                        skinning: A
                    });
                    x[E] = C
                }
                var L = this;
                this.enabled = !1,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this.type = wo,
                this.renderReverseSided = !0,
                this.renderSingleSided = !0,
                this.render = function(t, i, n) {
                    if (L.enabled !== !1 && (L.autoUpdate !== !1 || L.needsUpdate !== !1) && 0 !== t.length) {
                        var r = e.context
                          , a = e.state;
                        a.disable(r.BLEND),
                        a.buffers.color.setClear(1, 1, 1, 1),
                        a.buffers.depth.setTest(!0),
                        a.setScissorTest(!1);
                        for (var o, l = 0, v = t.length; v > l; l++) {
                            var g = t[l]
                              , y = g.shadow
                              , _ = g && g.isPointLight;
                            if (void 0 !== y) {
                                var x = y.camera;
                                if (d.copy(y.mapSize),
                                d.min(p),
                                _) {
                                    var b = d.x
                                      , E = d.y;
                                    M[0].set(2 * b, E, b, E),
                                    M[1].set(0, E, b, E),
                                    M[2].set(3 * b, E, b, E),
                                    M[3].set(b, E, b, E),
                                    M[4].set(3 * b, 0, b, E),
                                    M[5].set(b, 0, b, E),
                                    d.x *= 4,
                                    d.y *= 2
                                }
                                if (null === y.map) {
                                    var S = {
                                        minFilter: As,
                                        magFilter: As,
                                        format: Ys
                                    };
                                    y.map = new c(d.x,d.y,S),
                                    y.map.texture.name = g.name + ".shadowMap",
                                    x.updateProjectionMatrix()
                                }
                                y.isSpotLightShadow && y.update(g);
                                var A = y.map
                                  , P = y.matrix;
                                m.setFromMatrixPosition(g.matrixWorld),
                                x.position.copy(m),
                                _ ? (o = 6,
                                P.makeTranslation(-m.x, -m.y, -m.z)) : (o = 1,
                                f.setFromMatrixPosition(g.target.matrixWorld),
                                x.lookAt(f),
                                x.updateMatrixWorld(),
                                P.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                                P.multiply(x.projectionMatrix),
                                P.multiply(x.matrixWorldInverse)),
                                e.setRenderTarget(A),
                                e.clear();
                                for (var C = 0; o > C; C++) {
                                    if (_) {
                                        f.copy(x.position),
                                        f.add(w[C]),
                                        x.up.copy(T[C]),
                                        x.lookAt(f),
                                        x.updateMatrixWorld();
                                        var R = M[C];
                                        a.viewport(R)
                                    }
                                    u.multiplyMatrices(x.projectionMatrix, x.matrixWorldInverse),
                                    h.setFromMatrix(u),
                                    s(i, n, x, _)
                                }
                            } else
                                console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                        }
                        L.needsUpdate = !1
                    }
                }
            }
            function ot(e) {
                function t(t, i) {
                    var n = t.array
                      , r = t.dynamic ? e.DYNAMIC_DRAW : e.STATIC_DRAW
                      , a = e.createBuffer();
                    e.bindBuffer(i, a),
                    e.bufferData(i, n, r),
                    t.onUploadCallback();
                    var o = e.FLOAT;
                    return n instanceof Float32Array ? o = e.FLOAT : n instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : n instanceof Uint16Array ? o = e.UNSIGNED_SHORT : n instanceof Int16Array ? o = e.SHORT : n instanceof Uint32Array ? o = e.UNSIGNED_INT : n instanceof Int32Array ? o = e.INT : n instanceof Int8Array ? o = e.BYTE : n instanceof Uint8Array && (o = e.UNSIGNED_BYTE),
                    {
                        buffer: a,
                        type: o,
                        bytesPerElement: n.BYTES_PER_ELEMENT,
                        version: t.version
                    }
                }
                function i(t, i, n) {
                    var r = i.array
                      , a = i.updateRange;
                    e.bindBuffer(n, t),
                    i.dynamic === !1 ? e.bufferData(n, r, e.STATIC_DRAW) : -1 === a.count ? e.bufferSubData(n, 0, r) : 0 === a.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (e.bufferSubData(n, a.offset * r.BYTES_PER_ELEMENT, r.subarray(a.offset, a.offset + a.count)),
                    a.count = -1)
                }
                function n(e) {
                    return e.isInterleavedBufferAttribute && (e = e.data),
                    o[e.uuid]
                }
                function r(t) {
                    t.isInterleavedBufferAttribute && (t = t.data);
                    var i = o[t.uuid];
                    i && (e.deleteBuffer(i.buffer),
                    delete o[t.uuid])
                }
                function a(e, n) {
                    e.isInterleavedBufferAttribute && (e = e.data);
                    var r = o[e.uuid];
                    void 0 === r ? o[e.uuid] = t(e, n) : r.version < e.version && (i(r.buffer, e, n),
                    r.version = e.version)
                }
                var o = {};
                return {
                    get: n,
                    remove: r,
                    update: a
                }
            }
            function st(e, t, i, n) {
                this._x = e || 0,
                this._y = t || 0,
                this._z = i || 0,
                this._order = n || st.DefaultOrder
            }
            function lt() {
                this.mask = 1
            }
            function ct() {
                function e() {
                    l.setFromEuler(s, !1)
                }
                function t() {
                    s.setFromQuaternion(l, void 0, !1)
                }
                Object.defineProperty(this, "id", {
                    value: Xh++
                }),
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.type = "Object3D",
                this.parent = null,
                this.children = [],
                this.up = ct.DefaultUp.clone();
                var i = new a
                  , s = new st
                  , l = new r
                  , c = new a(1,1,1);
                s.onChange(e),
                l.onChange(t),
                Object.defineProperties(this, {
                    position: {
                        enumerable: !0,
                        value: i
                    },
                    rotation: {
                        enumerable: !0,
                        value: s
                    },
                    quaternion: {
                        enumerable: !0,
                        value: l
                    },
                    scale: {
                        enumerable: !0,
                        value: c
                    },
                    modelViewMatrix: {
                        value: new n
                    },
                    normalMatrix: {
                        value: new o
                    }
                }),
                this.matrix = new n,
                this.matrixWorld = new n,
                this.matrixAutoUpdate = ct.DefaultMatrixAutoUpdate,
                this.matrixWorldNeedsUpdate = !1,
                this.layers = new lt,
                this.visible = !0,
                this.castShadow = !1,
                this.receiveShadow = !1,
                this.frustumCulled = !0,
                this.renderOrder = 0,
                this.userData = {}
            }
            function ht() {
                ct.call(this),
                this.type = "Camera",
                this.matrixWorldInverse = new n,
                this.projectionMatrix = new n
            }
            function ut(e, t, i, n, r, a) {
                ht.call(this),
                this.type = "OrthographicCamera",
                this.zoom = 1,
                this.view = null,
                this.left = e,
                this.right = t,
                this.top = i,
                this.bottom = n,
                this.near = void 0 !== r ? r : .1,
                this.far = void 0 !== a ? a : 2e3,
                this.updateProjectionMatrix()
            }
            function dt(e, t, i, n, r, o) {
                this.a = e,
                this.b = t,
                this.c = i,
                this.normal = n && n.isVector3 ? n : new a,
                this.vertexNormals = Array.isArray(n) ? n : [],
                this.color = r && r.isColor ? r : new Y,
                this.vertexColors = Array.isArray(r) ? r : [],
                this.materialIndex = void 0 !== o ? o : 0
            }
            function pt() {
                Object.defineProperty(this, "id", {
                    value: Yh += 2
                }),
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.type = "Geometry",
                this.vertices = [],
                this.colors = [],
                this.faces = [],
                this.faceVertexUvs = [[]],
                this.morphTargets = [],
                this.morphNormals = [],
                this.skinWeights = [],
                this.skinIndices = [],
                this.lineDistances = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.elementsNeedUpdate = !1,
                this.verticesNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.lineDistancesNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function ft(e, t, i) {
                if (Array.isArray(e))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.array = e,
                this.itemSize = t,
                this.count = void 0 !== e ? e.length / t : 0,
                this.normalized = i === !0,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function mt(e, t, i) {
                ft.call(this, new Int8Array(e), t, i)
            }
            function vt(e, t, i) {
                ft.call(this, new Uint8Array(e), t, i)
            }
            function gt(e, t, i) {
                ft.call(this, new Uint8ClampedArray(e), t, i)
            }
            function yt(e, t, i) {
                ft.call(this, new Int16Array(e), t, i)
            }
            function _t(e, t, i) {
                ft.call(this, new Uint16Array(e), t, i)
            }
            function xt(e, t, i) {
                ft.call(this, new Int32Array(e), t, i)
            }
            function bt(e, t, i) {
                ft.call(this, new Uint32Array(e), t, i)
            }
            function wt(e, t, i) {
                ft.call(this, new Float32Array(e), t, i)
            }
            function Tt(e, t, i) {
                ft.call(this, new Float64Array(e), t, i)
            }
            function Mt() {
                this.indices = [],
                this.vertices = [],
                this.normals = [],
                this.colors = [],
                this.uvs = [],
                this.uvs2 = [],
                this.groups = [],
                this.morphTargets = {},
                this.skinWeights = [],
                this.skinIndices = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.verticesNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function Et(e) {
                if (0 === e.length)
                    return -1 / 0;
                for (var t = e[0], i = 1, n = e.length; n > i; ++i)
                    e[i] > t && (t = e[i]);
                return t
            }
            function St() {
                Object.defineProperty(this, "id", {
                    value: qh += 2
                }),
                this.uuid = Ll.generateUUID(),
                this.name = "",
                this.type = "BufferGeometry",
                this.index = null,
                this.attributes = {},
                this.morphAttributes = {},
                this.groups = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.drawRange = {
                    start: 0,
                    count: 1 / 0
                }
            }
            function At(e, t, i, n, r, a) {
                pt.call(this),
                this.type = "BoxGeometry",
                this.parameters = {
                    width: e,
                    height: t,
                    depth: i,
                    widthSegments: n,
                    heightSegments: r,
                    depthSegments: a
                },
                this.fromBufferGeometry(new Pt(e,t,i,n,r,a)),
                this.mergeVertices()
            }
            function Pt(e, t, i, n, r, o) {
                function s(e, t, i, n, r, o, s, m, v, g, y) {
                    var _, x, b = o / v, w = s / g, T = o / 2, M = s / 2, E = m / 2, S = v + 1, A = g + 1, P = 0, C = 0, L = new a;
                    for (x = 0; A > x; x++) {
                        var R = x * w - M;
                        for (_ = 0; S > _; _++) {
                            var O = _ * b - T;
                            L[e] = O * n,
                            L[t] = R * r,
                            L[i] = E,
                            h.push(L.x, L.y, L.z),
                            L[e] = 0,
                            L[t] = 0,
                            L[i] = m > 0 ? 1 : -1,
                            u.push(L.x, L.y, L.z),
                            d.push(_ / v),
                            d.push(1 - x / g),
                            P += 1
                        }
                    }
                    for (x = 0; g > x; x++)
                        for (_ = 0; v > _; _++) {
                            var I = p + _ + S * x
                              , D = p + _ + S * (x + 1)
                              , U = p + (_ + 1) + S * (x + 1)
                              , F = p + (_ + 1) + S * x;
                            c.push(I, D, F),
                            c.push(D, U, F),
                            C += 6
                        }
                    l.addGroup(f, C, y),
                    f += C,
                    p += P
                }
                St.call(this),
                this.type = "BoxBufferGeometry",
                this.parameters = {
                    width: e,
                    height: t,
                    depth: i,
                    widthSegments: n,
                    heightSegments: r,
                    depthSegments: o
                };
                var l = this;
                e = e || 1,
                t = t || 1,
                i = i || 1,
                n = Math.floor(n) || 1,
                r = Math.floor(r) || 1,
                o = Math.floor(o) || 1;
                var c = []
                  , h = []
                  , u = []
                  , d = []
                  , p = 0
                  , f = 0;
                s("z", "y", "x", -1, -1, i, t, e, o, r, 0),
                s("z", "y", "x", 1, -1, i, t, -e, o, r, 1),
                s("x", "z", "y", 1, 1, e, i, t, n, o, 2),
                s("x", "z", "y", 1, -1, e, i, -t, n, o, 3),
                s("x", "y", "z", 1, -1, e, t, i, n, r, 4),
                s("x", "y", "z", -1, -1, e, t, -i, n, r, 5),
                this.setIndex(c),
                this.addAttribute("position", new wt(h,3)),
                this.addAttribute("normal", new wt(u,3)),
                this.addAttribute("uv", new wt(d,2))
            }
            function Ct(e, t, i, n) {
                pt.call(this),
                this.type = "PlaneGeometry",
                this.parameters = {
                    width: e,
                    height: t,
                    widthSegments: i,
                    heightSegments: n
                },
                this.fromBufferGeometry(new Lt(e,t,i,n)),
                this.mergeVertices()
            }
            function Lt(e, t, i, n) {
                St.call(this),
                this.type = "PlaneBufferGeometry",
                this.parameters = {
                    width: e,
                    height: t,
                    widthSegments: i,
                    heightSegments: n
                },
                e = e || 1,
                t = t || 1;
                var r, a, o = e / 2, s = t / 2, l = Math.floor(i) || 1, c = Math.floor(n) || 1, h = l + 1, u = c + 1, d = e / l, p = t / c, f = [], m = [], v = [], g = [];
                for (a = 0; u > a; a++) {
                    var y = a * p - s;
                    for (r = 0; h > r; r++) {
                        var _ = r * d - o;
                        m.push(_, -y, 0),
                        v.push(0, 0, 1),
                        g.push(r / l),
                        g.push(1 - a / c)
                    }
                }
                for (a = 0; c > a; a++)
                    for (r = 0; l > r; r++) {
                        var x = r + h * a
                          , b = r + h * (a + 1)
                          , w = r + 1 + h * (a + 1)
                          , T = r + 1 + h * a;
                        f.push(x, b, T),
                        f.push(b, w, T)
                    }
                this.setIndex(f),
                this.addAttribute("position", new wt(m,3)),
                this.addAttribute("normal", new wt(v,3)),
                this.addAttribute("uv", new wt(g,2))
            }
            function Rt(e) {
                K.call(this),
                this.type = "MeshBasicMaterial",
                this.color = new Y(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = ls,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.lights = !1,
                this.setValues(e)
            }
            function Ot(e) {
                K.call(this),
                this.type = "ShaderMaterial",
                this.defines = {},
                this.uniforms = {},
                this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                this.linewidth = 1,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.clipping = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                },
                this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                },
                this.index0AttributeName = void 0,
                void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
                this.setValues(e))
            }
            function It(e, t) {
                this.origin = void 0 !== e ? e : new a,
                this.direction = void 0 !== t ? t : new a
            }
            function Dt(e, t) {
                this.start = void 0 !== e ? e : new a,
                this.end = void 0 !== t ? t : new a
            }
            function Ut(e, t, i) {
                this.a = void 0 !== e ? e : new a,
                this.b = void 0 !== t ? t : new a,
                this.c = void 0 !== i ? i : new a
            }
            function Ft(e, t) {
                ct.call(this),
                this.type = "Mesh",
                this.geometry = void 0 !== e ? e : new St,
                this.material = void 0 !== t ? t : new Rt({
                    color: 16777215 * Math.random()
                }),
                this.drawMode = gl,
                this.updateMorphTargets()
            }
            function kt(e, t, i, n) {
                function r(t, n, r, u) {
                    var d = n.background;
                    null === d ? a(c, h) : d && d.isColor && (a(d, 1),
                    u = !0),
                    (e.autoClear || u) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                    d && d.isCubeTexture ? (void 0 === l && (l = new Ft(new Pt(1,1,1),new Ot({
                        uniforms: Vh.cube.uniforms,
                        vertexShader: Vh.cube.vertexShader,
                        fragmentShader: Vh.cube.fragmentShader,
                        side: Eo,
                        depthTest: !0,
                        depthWrite: !1,
                        fog: !1
                    })),
                    l.geometry.removeAttribute("normal"),
                    l.geometry.removeAttribute("uv"),
                    l.onBeforeRender = function(e, t, i) {
                        this.matrixWorld.copyPosition(i.matrixWorld)
                    }
                    ,
                    i.update(l.geometry)),
                    l.material.uniforms.tCube.value = d,
                    t.push(l, l.geometry, l.material, 0, null)) : d && d.isTexture && (void 0 === o && (o = new ut(-1,1,1,-1,0,1),
                    s = new Ft(new Lt(2,2),new Rt({
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    })),
                    i.update(s.geometry)),
                    s.material.map = d,
                    e.renderBufferDirect(o, null, s.geometry, s.material, s, null))
                }
                function a(e, i) {
                    t.buffers.color.setClear(e.r, e.g, e.b, i, n)
                }
                var o, s, l, c = new Y(0), h = 0;
                return {
                    getClearColor: function() {
                        return c
                    },
                    setClearColor: function(e, t) {
                        c.set(e),
                        h = void 0 !== t ? t : 1,
                        a(c, h)
                    },
                    getClearAlpha: function() {
                        return h
                    },
                    setClearAlpha: function(e) {
                        h = e,
                        a(c, h)
                    },
                    render: r
                }
            }
            function Nt(e, t) {
                return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program && t.program && e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
            }
            function zt(e, t) {
                return e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
            }
            function Bt() {
                function e() {
                    r = 0,
                    a.length = 0,
                    o.length = 0
                }
                function t(e, t, i, s, l) {
                    var c = n[r];
                    void 0 === c ? (c = {
                        id: e.id,
                        object: e,
                        geometry: t,
                        material: i,
                        program: i.program,
                        renderOrder: e.renderOrder,
                        z: s,
                        group: l
                    },
                    n[r] = c) : (c.id = e.id,
                    c.object = e,
                    c.geometry = t,
                    c.material = i,
                    c.program = i.program,
                    c.renderOrder = e.renderOrder,
                    c.z = s,
                    c.group = l),
                    (i.transparent === !0 ? o : a).push(c),
                    r++
                }
                function i() {
                    a.length > 1 && a.sort(Nt),
                    o.length > 1 && o.sort(zt)
                }
                var n = []
                  , r = 0
                  , a = []
                  , o = [];
                return {
                    opaque: a,
                    transparent: o,
                    init: e,
                    push: t,
                    sort: i
                }
            }
            function Gt() {
                function e(e, t) {
                    var n = e.id + "," + t.id
                      , r = i[n];
                    return void 0 === r && (r = new Bt,
                    i[n] = r),
                    r
                }
                function t() {
                    i = {}
                }
                var i = {};
                return {
                    get: e,
                    dispose: t
                }
            }
            function Ht(e, t) {
                return Math.abs(t[1]) - Math.abs(e[1])
            }
            function jt(e) {
                function t(t, r, a, o) {
                    var s = t.morphTargetInfluences
                      , l = s.length
                      , c = i[r.id];
                    if (void 0 === c) {
                        c = [];
                        for (var h = 0; l > h; h++)
                            c[h] = [h, 0];
                        i[r.id] = c
                    }
                    for (var u = a.morphTargets && r.morphAttributes.position, d = a.morphNormals && r.morphAttributes.normal, h = 0; l > h; h++) {
                        var p = c[h];
                        0 !== p[1] && (u && r.removeAttribute("morphTarget" + h),
                        d && r.removeAttribute("morphNormal" + h))
                    }
                    for (var h = 0; l > h; h++) {
                        var p = c[h];
                        p[0] = h,
                        p[1] = s[h]
                    }
                    c.sort(Ht);
                    for (var h = 0; 8 > h; h++) {
                        var p = c[h];
                        if (p) {
                            var f = p[0]
                              , m = p[1];
                            if (m) {
                                u && r.addAttribute("morphTarget" + h, u[f]),
                                d && r.addAttribute("morphNormal" + h, d[f]),
                                n[h] = m;
                                continue
                            }
                        }
                        n[h] = 0
                    }
                    o.getUniforms().setValue(e, "morphTargetInfluences", n)
                }
                var i = {}
                  , n = new Float32Array(8);
                return {
                    update: t
                }
            }
            function Vt(e, t, i) {
                function n(e) {
                    s = e
                }
                function r(e) {
                    l = e.type,
                    c = e.bytesPerElement
                }
                function a(t, n) {
                    e.drawElements(s, n, l, t * c),
                    i.calls++,
                    i.vertices += n,
                    s === e.TRIANGLES ? i.faces += n / 3 : s === e.POINTS && (i.points += n)
                }
                function o(n, r, a) {
                    var o = t.get("ANGLE_instanced_arrays");
                    return null === o ? void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.") : (o.drawElementsInstancedANGLE(s, a, l, r * c, n.maxInstancedCount),
                    i.calls++,
                    i.vertices += a * n.maxInstancedCount,
                    void (s === e.TRIANGLES ? i.faces += n.maxInstancedCount * a / 3 : s === e.POINTS && (i.points += n.maxInstancedCount * a)))
                }
                var s, l, c;
                this.setMode = n,
                this.setIndex = r,
                this.render = a,
                this.renderInstances = o
            }
            function Wt(e, t, i) {
                function n(e) {
                    o = e
                }
                function r(t, n) {
                    e.drawArrays(o, t, n),
                    i.calls++,
                    i.vertices += n,
                    o === e.TRIANGLES ? i.faces += n / 3 : o === e.POINTS && (i.points += n)
                }
                function a(n, r, a) {
                    var s = t.get("ANGLE_instanced_arrays");
                    if (null === s)
                        return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    var l = n.attributes.position;
                    l.isInterleavedBufferAttribute ? (a = l.data.count,
                    s.drawArraysInstancedANGLE(o, 0, a, n.maxInstancedCount)) : s.drawArraysInstancedANGLE(o, r, a, n.maxInstancedCount),
                    i.calls++,
                    i.vertices += a * n.maxInstancedCount,
                    o === e.TRIANGLES ? i.faces += n.maxInstancedCount * a / 3 : o === e.POINTS && (i.points += n.maxInstancedCount * a)
                }
                var o;
                this.setMode = n,
                this.render = r,
                this.renderInstances = a
            }
            function Xt(e, t, i) {
                function n(e) {
                    var r = e.target
                      , a = s[r.id];
                    null !== a.index && t.remove(a.index);
                    for (var o in a.attributes)
                        t.remove(a.attributes[o]);
                    r.removeEventListener("dispose", n),
                    delete s[r.id];
                    var c = l[r.id];
                    c && (t.remove(c),
                    delete l[r.id]),
                    c = l[a.id],
                    c && (t.remove(c),
                    delete l[a.id]),
                    i.geometries--
                }
                function r(e, t) {
                    var r = s[t.id];
                    return r ? r : (t.addEventListener("dispose", n),
                    t.isBufferGeometry ? r = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new St).setFromObject(e)),
                    r = t._bufferGeometry),
                    s[t.id] = r,
                    i.geometries++,
                    r)
                }
                function a(i) {
                    var n = i.index
                      , r = i.attributes;
                    null !== n && t.update(n, e.ELEMENT_ARRAY_BUFFER);
                    for (var a in r)
                        t.update(r[a], e.ARRAY_BUFFER);
                    var o = i.morphAttributes;
                    for (var a in o)
                        for (var s = o[a], l = 0, c = s.length; c > l; l++)
                            t.update(s[l], e.ARRAY_BUFFER)
                }
                function o(i) {
                    var n = l[i.id];
                    if (n)
                        return n;
                    var r = []
                      , a = i.index
                      , o = i.attributes;
                    if (null !== a)
                        for (var s = a.array, c = 0, h = s.length; h > c; c += 3) {
                            var u = s[c + 0]
                              , d = s[c + 1]
                              , p = s[c + 2];
                            r.push(u, d, d, p, p, u)
                        }
                    else
                        for (var s = o.position.array, c = 0, h = s.length / 3 - 1; h > c; c += 3) {
                            var u = c + 0
                              , d = c + 1
                              , p = c + 2;
                            r.push(u, d, d, p, p, u)
                        }
                    return n = new (Et(r) > 65535 ? bt : _t)(r,1),
                    t.update(n, e.ELEMENT_ARRAY_BUFFER),
                    l[i.id] = n,
                    n
                }
                var s = {}
                  , l = {};
                return {
                    get: r,
                    update: a,
                    getWireframeAttribute: o
                }
            }
            function Yt() {
                var e = {};
                return {
                    get: function(t) {
                        if (void 0 !== e[t.id])
                            return e[t.id];
                        var n;
                        switch (t.type) {
                        case "DirectionalLight":
                            n = {
                                direction: new a,
                                color: new Y,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new i
                            };
                            break;
                        case "SpotLight":
                            n = {
                                position: new a,
                                direction: new a,
                                color: new Y,
                                distance: 0,
                                coneCos: 0,
                                penumbraCos: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new i
                            };
                            break;
                        case "PointLight":
                            n = {
                                position: new a,
                                color: new Y,
                                distance: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new i,
                                shadowCameraNear: 1,
                                shadowCameraFar: 1e3
                            };
                            break;
                        case "HemisphereLight":
                            n = {
                                direction: new a,
                                skyColor: new Y,
                                groundColor: new Y
                            };
                            break;
                        case "RectAreaLight":
                            n = {
                                color: new Y,
                                position: new a,
                                halfWidth: new a,
                                halfHeight: new a
                            }
                        }
                        return e[t.id] = n,
                        n
                    }
                }
            }
            function qt() {
                function e(e, n, a) {
                    for (var l = 0, c = 0, h = 0, u = 0, d = 0, p = 0, f = 0, m = 0, v = a.matrixWorldInverse, g = 0, y = e.length; y > g; g++) {
                        var _ = e[g]
                          , x = _.color
                          , b = _.intensity
                          , w = _.distance
                          , T = _.shadow && _.shadow.map ? _.shadow.map.texture : null;
                        if (_.isAmbientLight)
                            l += x.r * b,
                            c += x.g * b,
                            h += x.b * b;
                        else if (_.isDirectionalLight) {
                            var M = t.get(_);
                            if (M.color.copy(_.color).multiplyScalar(_.intensity),
                            M.direction.setFromMatrixPosition(_.matrixWorld),
                            r.setFromMatrixPosition(_.target.matrixWorld),
                            M.direction.sub(r),
                            M.direction.transformDirection(v),
                            M.shadow = _.castShadow,
                            _.castShadow) {
                                var E = _.shadow;
                                M.shadowBias = E.bias,
                                M.shadowRadius = E.radius,
                                M.shadowMapSize = E.mapSize
                            }
                            i.directionalShadowMap[u] = T,
                            i.directionalShadowMatrix[u] = _.shadow.matrix,
                            i.directional[u] = M,
                            u++
                        } else if (_.isSpotLight) {
                            var M = t.get(_);
                            if (M.position.setFromMatrixPosition(_.matrixWorld),
                            M.position.applyMatrix4(v),
                            M.color.copy(x).multiplyScalar(b),
                            M.distance = w,
                            M.direction.setFromMatrixPosition(_.matrixWorld),
                            r.setFromMatrixPosition(_.target.matrixWorld),
                            M.direction.sub(r),
                            M.direction.transformDirection(v),
                            M.coneCos = Math.cos(_.angle),
                            M.penumbraCos = Math.cos(_.angle * (1 - _.penumbra)),
                            M.decay = 0 === _.distance ? 0 : _.decay,
                            M.shadow = _.castShadow,
                            _.castShadow) {
                                var E = _.shadow;
                                M.shadowBias = E.bias,
                                M.shadowRadius = E.radius,
                                M.shadowMapSize = E.mapSize
                            }
                            i.spotShadowMap[p] = T,
                            i.spotShadowMatrix[p] = _.shadow.matrix,
                            i.spot[p] = M,
                            p++
                        } else if (_.isRectAreaLight) {
                            var M = t.get(_);
                            M.color.copy(x).multiplyScalar(b / (_.width * _.height)),
                            M.position.setFromMatrixPosition(_.matrixWorld),
                            M.position.applyMatrix4(v),
                            s.identity(),
                            o.copy(_.matrixWorld),
                            o.premultiply(v),
                            s.extractRotation(o),
                            M.halfWidth.set(.5 * _.width, 0, 0),
                            M.halfHeight.set(0, .5 * _.height, 0),
                            M.halfWidth.applyMatrix4(s),
                            M.halfHeight.applyMatrix4(s),
                            i.rectArea[f] = M,
                            f++
                        } else if (_.isPointLight) {
                            var M = t.get(_);
                            if (M.position.setFromMatrixPosition(_.matrixWorld),
                            M.position.applyMatrix4(v),
                            M.color.copy(_.color).multiplyScalar(_.intensity),
                            M.distance = _.distance,
                            M.decay = 0 === _.distance ? 0 : _.decay,
                            M.shadow = _.castShadow,
                            _.castShadow) {
                                var E = _.shadow;
                                M.shadowBias = E.bias,
                                M.shadowRadius = E.radius,
                                M.shadowMapSize = E.mapSize,
                                M.shadowCameraNear = E.camera.near,
                                M.shadowCameraFar = E.camera.far
                            }
                            i.pointShadowMap[d] = T,
                            i.pointShadowMatrix[d] = _.shadow.matrix,
                            i.point[d] = M,
                            d++
                        } else if (_.isHemisphereLight) {
                            var M = t.get(_);
                            M.direction.setFromMatrixPosition(_.matrixWorld),
                            M.direction.transformDirection(v),
                            M.direction.normalize(),
                            M.skyColor.copy(_.color).multiplyScalar(b),
                            M.groundColor.copy(_.groundColor).multiplyScalar(b),
                            i.hemi[m] = M,
                            m++
                        }
                    }
                    i.ambient[0] = l,
                    i.ambient[1] = c,
                    i.ambient[2] = h,
                    i.directional.length = u,
                    i.spot.length = p,
                    i.rectArea.length = f,
                    i.point.length = d,
                    i.hemi.length = m,
                    i.hash = u + "," + d + "," + p + "," + f + "," + m + "," + n.length
                }
                var t = new Yt
                  , i = {
                    hash: "",
                    ambient: [0, 0, 0],
                    directional: [],
                    directionalShadowMap: [],
                    directionalShadowMatrix: [],
                    spot: [],
                    spotShadowMap: [],
                    spotShadowMatrix: [],
                    rectArea: [],
                    point: [],
                    pointShadowMap: [],
                    pointShadowMatrix: [],
                    hemi: []
                }
                  , r = new a
                  , o = new n
                  , s = new n;
                return {
                    setup: e,
                    state: i
                }
            }
            function Zt(e, t) {
                function i(i) {
                    var n = t.frame
                      , a = i.geometry
                      , o = e.get(i, a);
                    return r[o.id] !== n && (a.isGeometry && o.updateFromObject(i),
                    e.update(o),
                    r[o.id] = n),
                    o
                }
                function n() {
                    r = {}
                }
                var r = {};
                return {
                    update: i,
                    clear: n
                }
            }
            function Qt(e) {
                for (var t = e.split("\n"), i = 0; i < t.length; i++)
                    t[i] = i + 1 + ": " + t[i];
                return t.join("\n")
            }
            function Jt(e, t, i) {
                var n = e.createShader(t);
                return e.shaderSource(n, i),
                e.compileShader(n),
                e.getShaderParameter(n, e.COMPILE_STATUS) === !1 && console.error("THREE.WebGLShader: Shader couldn't compile."),
                "" !== e.getShaderInfoLog(n) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", t === e.VERTEX_SHADER ? "vertex" : "fragment", e.getShaderInfoLog(n), Qt(i)),
                n
            }
            function Kt(e) {
                switch (e) {
                case xl:
                    return ["Linear", "( value )"];
                case bl:
                    return ["sRGB", "( value )"];
                case Tl:
                    return ["RGBE", "( value )"];
                case El:
                    return ["RGBM", "( value, 7.0 )"];
                case Sl:
                    return ["RGBM", "( value, 16.0 )"];
                case Al:
                    return ["RGBD", "( value, 256.0 )"];
                case wl:
                    return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                default:
                    throw new Error("unsupported encoding: " + e)
                }
            }
            function $t(e, t) {
                var i = Kt(t);
                return "vec4 " + e + "( vec4 value ) { return " + i[0] + "ToLinear" + i[1] + "; }"
            }
            function ei(e, t) {
                var i = Kt(t);
                return "vec4 " + e + "( vec4 value ) { return LinearTo" + i[0] + i[1] + "; }"
            }
            function ti(e, t) {
                var i;
                switch (t) {
                case ds:
                    i = "Linear";
                    break;
                case ps:
                    i = "Reinhard";
                    break;
                case fs:
                    i = "Uncharted2";
                    break;
                case ms:
                    i = "OptimizedCineon";
                    break;
                default:
                    throw new Error("unsupported toneMapping: " + t)
                }
                return "vec3 " + e + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
            }
            function ii(e, t, i) {
                e = e || {};
                var n = [e.derivatives || t.envMapCubeUV || t.bumpMap || t.normalMap || t.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (e.fragDepth || t.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", e.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (e.shaderTextureLOD || t.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""];
                return n.filter(ai).join("\n")
            }
            function ni(e) {
                var t = [];
                for (var i in e) {
                    var n = e[i];
                    n !== !1 && t.push("#define " + i + " " + n)
                }
                return t.join("\n")
            }
            function ri(e, t) {
                for (var i = {}, n = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), r = 0; n > r; r++) {
                    var a = e.getActiveAttrib(t, r)
                      , o = a.name;
                    i[o] = e.getAttribLocation(t, o)
                }
                return i
            }
            function ai(e) {
                return "" !== e
            }
            function oi(e, t) {
                return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights)
            }
            function si(e) {
                function t(e, t) {
                    var i = jh[t];
                    if (void 0 === i)
                        throw new Error("Can not resolve #include <" + t + ">");
                    return si(i)
                }
                var i = /^[ \t]*#include +<([\w\d.]+)>/gm;
                return e.replace(i, t)
            }
            function li(e) {
                function t(e, t, i, n) {
                    for (var r = "", a = parseInt(t); a < parseInt(i); a++)
                        r += n.replace(/\[ i \]/g, "[ " + a + " ]");
                    return r
                }
                var i = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return e.replace(i, t)
            }
            function ci(e, t, i, n, r, a) {
                var o = e.context
                  , s = n.defines
                  , l = r.vertexShader
                  , c = r.fragmentShader
                  , h = "SHADOWMAP_TYPE_BASIC";
                a.shadowMapType === wo ? h = "SHADOWMAP_TYPE_PCF" : a.shadowMapType === To && (h = "SHADOWMAP_TYPE_PCF_SOFT");
                var u = "ENVMAP_TYPE_CUBE"
                  , d = "ENVMAP_MODE_REFLECTION"
                  , p = "ENVMAP_BLENDING_MULTIPLY";
                if (a.envMap) {
                    switch (n.envMap.mapping) {
                    case gs:
                    case ys:
                        u = "ENVMAP_TYPE_CUBE";
                        break;
                    case ws:
                    case Ts:
                        u = "ENVMAP_TYPE_CUBE_UV";
                        break;
                    case _s:
                    case xs:
                        u = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case bs:
                        u = "ENVMAP_TYPE_SPHERE"
                    }
                    switch (n.envMap.mapping) {
                    case ys:
                    case xs:
                        d = "ENVMAP_MODE_REFRACTION"
                    }
                    switch (n.combine) {
                    case ls:
                        p = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case cs:
                        p = "ENVMAP_BLENDING_MIX";
                        break;
                    case hs:
                        p = "ENVMAP_BLENDING_ADD"
                    }
                }
                var f, m, v = e.gammaFactor > 0 ? e.gammaFactor : 1, g = ii(n.extensions, a, t), y = ni(s), _ = o.createProgram();
                n.isRawShaderMaterial ? (f = [y].filter(ai).join("\n"),
                f.length > 0 && (f += "\n"),
                m = [g, y].filter(ai).join("\n"),
                m.length > 0 && (m += "\n")) : (f = ["precision " + a.precision + " float;", "precision " + a.precision + " int;", "#define SHADER_NAME " + r.name, y, a.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + v, "#define MAX_BONES " + a.maxBones, a.useFog && a.fog ? "#define USE_FOG" : "", a.useFog && a.fogExp ? "#define FOG_EXP2" : "", a.map ? "#define USE_MAP" : "", a.envMap ? "#define USE_ENVMAP" : "", a.envMap ? "#define " + d : "", a.lightMap ? "#define USE_LIGHTMAP" : "", a.aoMap ? "#define USE_AOMAP" : "", a.emissiveMap ? "#define USE_EMISSIVEMAP" : "", a.bumpMap ? "#define USE_BUMPMAP" : "", a.normalMap ? "#define USE_NORMALMAP" : "", a.displacementMap && a.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", a.specularMap ? "#define USE_SPECULARMAP" : "", a.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", a.metalnessMap ? "#define USE_METALNESSMAP" : "", a.alphaMap ? "#define USE_ALPHAMAP" : "", a.vertexColors ? "#define USE_COLOR" : "", a.flatShading ? "#define FLAT_SHADED" : "", a.skinning ? "#define USE_SKINNING" : "", a.useVertexTexture ? "#define BONE_TEXTURE" : "", a.morphTargets ? "#define USE_MORPHTARGETS" : "", a.morphNormals && a.flatShading === !1 ? "#define USE_MORPHNORMALS" : "", a.doubleSided ? "#define DOUBLE_SIDED" : "", a.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + a.numClippingPlanes, a.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", a.shadowMapEnabled ? "#define " + h : "", a.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", a.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", a.logarithmicDepthBuffer && t.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter(ai).join("\n"),
                m = [g, "precision " + a.precision + " float;", "precision " + a.precision + " int;", "#define SHADER_NAME " + r.name, y, a.alphaTest ? "#define ALPHATEST " + a.alphaTest : "", "#define GAMMA_FACTOR " + v, a.useFog && a.fog ? "#define USE_FOG" : "", a.useFog && a.fogExp ? "#define FOG_EXP2" : "", a.map ? "#define USE_MAP" : "", a.envMap ? "#define USE_ENVMAP" : "", a.envMap ? "#define " + u : "", a.envMap ? "#define " + d : "", a.envMap ? "#define " + p : "", a.lightMap ? "#define USE_LIGHTMAP" : "", a.aoMap ? "#define USE_AOMAP" : "", a.emissiveMap ? "#define USE_EMISSIVEMAP" : "", a.bumpMap ? "#define USE_BUMPMAP" : "", a.normalMap ? "#define USE_NORMALMAP" : "", a.specularMap ? "#define USE_SPECULARMAP" : "", a.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", a.metalnessMap ? "#define USE_METALNESSMAP" : "", a.alphaMap ? "#define USE_ALPHAMAP" : "", a.vertexColors ? "#define USE_COLOR" : "", a.gradientMap ? "#define USE_GRADIENTMAP" : "", a.flatShading ? "#define FLAT_SHADED" : "", a.doubleSided ? "#define DOUBLE_SIDED" : "", a.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + a.numClippingPlanes, "#define UNION_CLIPPING_PLANES " + (a.numClippingPlanes - a.numClipIntersection), a.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", a.shadowMapEnabled ? "#define " + h : "", a.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", a.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", a.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", a.logarithmicDepthBuffer && t.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", a.envMap && t.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", a.toneMapping !== us ? "#define TONE_MAPPING" : "", a.toneMapping !== us ? jh.tonemapping_pars_fragment : "", a.toneMapping !== us ? ti("toneMapping", a.toneMapping) : "", a.dithering ? "#define DITHERING" : "", a.outputEncoding || a.mapEncoding || a.envMapEncoding || a.emissiveMapEncoding ? jh.encodings_pars_fragment : "", a.mapEncoding ? $t("mapTexelToLinear", a.mapEncoding) : "", a.envMapEncoding ? $t("envMapTexelToLinear", a.envMapEncoding) : "", a.emissiveMapEncoding ? $t("emissiveMapTexelToLinear", a.emissiveMapEncoding) : "", a.outputEncoding ? ei("linearToOutputTexel", a.outputEncoding) : "", a.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(ai).join("\n")),
                l = si(l),
                l = oi(l, a),
                c = si(c),
                c = oi(c, a),
                n.isShaderMaterial || (l = li(l),
                c = li(c));
                var x = f + l
                  , b = m + c
                  , w = Jt(o, o.VERTEX_SHADER, x)
                  , T = Jt(o, o.FRAGMENT_SHADER, b);
                o.attachShader(_, w),
                o.attachShader(_, T),
                void 0 !== n.index0AttributeName ? o.bindAttribLocation(_, 0, n.index0AttributeName) : a.morphTargets === !0 && o.bindAttribLocation(_, 0, "position"),
                o.linkProgram(_);
                var M = o.getProgramInfoLog(_)
                  , E = o.getShaderInfoLog(w)
                  , S = o.getShaderInfoLog(T)
                  , A = !0
                  , P = !0;
                o.getProgramParameter(_, o.LINK_STATUS) === !1 ? (A = !1,
                console.error("THREE.WebGLProgram: shader error: ", o.getError(), "gl.VALIDATE_STATUS", o.getProgramParameter(_, o.VALIDATE_STATUS), "gl.getProgramInfoLog", M, E, S)) : "" !== M ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", M) : ("" === E || "" === S) && (P = !1),
                P && (this.diagnostics = {
                    runnable: A,
                    material: n,
                    programLog: M,
                    vertexShader: {
                        log: E,
                        prefix: f
                    },
                    fragmentShader: {
                        log: S,
                        prefix: m
                    }
                }),
                o.deleteShader(w),
                o.deleteShader(T);
                var C;
                this.getUniforms = function() {
                    return void 0 === C && (C = new X(o,_,e)),
                    C
                }
                ;
                var L;
                return this.getAttributes = function() {
                    return void 0 === L && (L = ri(o, _)),
                    L
                }
                ,
                this.destroy = function() {
                    o.deleteProgram(_),
                    this.program = void 0
                }
                ,
                Object.defineProperties(this, {
                    uniforms: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),
                            this.getUniforms()
                        }
                    },
                    attributes: {
                        get: function() {
                            return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),
                            this.getAttributes()
                        }
                    }
                }),
                this.id = Zh++,
                this.code = i,
                this.usedTimes = 1,
                this.program = _,
                this.vertexShader = w,
                this.fragmentShader = T,
                this
            }
            function hi(e, t, i) {
                function n(e) {
                    var t = e.skeleton
                      , n = t.bones;
                    if (i.floatVertexTextures)
                        return 1024;
                    var r = i.maxVertexUniforms
                      , a = Math.floor((r - 20) / 4)
                      , o = Math.min(a, n.length);
                    return o < n.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + n.length + " bones. This GPU supports " + o + "."),
                    0) : o
                }
                function r(e, t) {
                    var i;
                    return e ? e.isTexture ? i = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
                    i = e.texture.encoding) : i = xl,
                    i === xl && t && (i = wl),
                    i
                }
                var a = []
                  , o = {
                    MeshDepthMaterial: "depth",
                    MeshDistanceMaterial: "distanceRGBA",
                    MeshNormalMaterial: "normal",
                    MeshBasicMaterial: "basic",
                    MeshLambertMaterial: "lambert",
                    MeshPhongMaterial: "phong",
                    MeshToonMaterial: "phong",
                    MeshStandardMaterial: "physical",
                    MeshPhysicalMaterial: "physical",
                    LineBasicMaterial: "basic",
                    LineDashedMaterial: "dashed",
                    PointsMaterial: "points",
                    ShadowMaterial: "shadow"
                }
                  , s = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering"];
                this.getParameters = function(t, a, s, l, c, h, u) {
                    var d = o[t.type]
                      , p = u.isSkinnedMesh ? n(u) : 0
                      , f = i.precision;
                    null !== t.precision && (f = i.getMaxPrecision(t.precision),
                    f !== t.precision && console.warn("THREE.WebGLProgram.getParameters:", t.precision, "not supported, using", f, "instead."));
                    var m = e.getRenderTarget()
                      , v = {
                        shaderID: d,
                        precision: f,
                        supportsVertexTextures: i.vertexTextures,
                        outputEncoding: r(m ? m.texture : null, e.gammaOutput),
                        map: !!t.map,
                        mapEncoding: r(t.map, e.gammaInput),
                        envMap: !!t.envMap,
                        envMapMode: t.envMap && t.envMap.mapping,
                        envMapEncoding: r(t.envMap, e.gammaInput),
                        envMapCubeUV: !!t.envMap && (t.envMap.mapping === ws || t.envMap.mapping === Ts),
                        lightMap: !!t.lightMap,
                        aoMap: !!t.aoMap,
                        emissiveMap: !!t.emissiveMap,
                        emissiveMapEncoding: r(t.emissiveMap, e.gammaInput),
                        bumpMap: !!t.bumpMap,
                        normalMap: !!t.normalMap,
                        displacementMap: !!t.displacementMap,
                        roughnessMap: !!t.roughnessMap,
                        metalnessMap: !!t.metalnessMap,
                        specularMap: !!t.specularMap,
                        alphaMap: !!t.alphaMap,
                        gradientMap: !!t.gradientMap,
                        combine: t.combine,
                        vertexColors: t.vertexColors,
                        fog: !!l,
                        useFog: t.fog,
                        fogExp: l && l.isFogExp2,
                        flatShading: t.flatShading,
                        sizeAttenuation: t.sizeAttenuation,
                        logarithmicDepthBuffer: i.logarithmicDepthBuffer,
                        skinning: t.skinning && p > 0,
                        maxBones: p,
                        useVertexTexture: i.floatVertexTextures,
                        morphTargets: t.morphTargets,
                        morphNormals: t.morphNormals,
                        maxMorphTargets: e.maxMorphTargets,
                        maxMorphNormals: e.maxMorphNormals,
                        numDirLights: a.directional.length,
                        numPointLights: a.point.length,
                        numSpotLights: a.spot.length,
                        numRectAreaLights: a.rectArea.length,
                        numHemiLights: a.hemi.length,
                        numClippingPlanes: c,
                        numClipIntersection: h,
                        dithering: t.dithering,
                        shadowMapEnabled: e.shadowMap.enabled && u.receiveShadow && s.length > 0,
                        shadowMapType: e.shadowMap.type,
                        toneMapping: e.toneMapping,
                        physicallyCorrectLights: e.physicallyCorrectLights,
                        premultipliedAlpha: t.premultipliedAlpha,
                        alphaTest: t.alphaTest,
                        doubleSided: t.side === So,
                        flipSided: t.side === Eo,
                        depthPacking: void 0 !== t.depthPacking ? t.depthPacking : !1
                    };
                    return v
                }
                ,
                this.getProgramCode = function(t, i) {
                    var n = [];
                    if (i.shaderID ? n.push(i.shaderID) : (n.push(t.fragmentShader),
                    n.push(t.vertexShader)),
                    void 0 !== t.defines)
                        for (var r in t.defines)
                            n.push(r),
                            n.push(t.defines[r]);
                    for (var a = 0; a < s.length; a++)
                        n.push(i[s[a]]);
                    return n.push(t.onBeforeCompile.toString()),
                    n.push(e.gammaOutput),
                    n.join()
                }
                ,
                this.acquireProgram = function(i, n, r, o) {
                    for (var s, l = 0, c = a.length; c > l; l++) {
                        var h = a[l];
                        if (h.code === o) {
                            s = h,
                            ++s.usedTimes;
                            break
                        }
                    }
                    return void 0 === s && (s = new ci(e,t,o,i,n,r),
                    a.push(s)),
                    s
                }
                ,
                this.releaseProgram = function(e) {
                    if (0 === --e.usedTimes) {
                        var t = a.indexOf(e);
                        a[t] = a[a.length - 1],
                        a.pop(),
                        e.destroy()
                    }
                }
                ,
                this.programs = a
            }
            function ui(e, t, i, n, r, a, o) {
                function s(e, t) {
                    if (e.width > t || e.height > t) {
                        var i = t / Math.max(e.width, e.height)
                          , n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        n.width = Math.floor(e.width * i),
                        n.height = Math.floor(e.height * i);
                        var r = n.getContext("2d");
                        return r.drawImage(e, 0, 0, e.width, e.height, 0, 0, n.width, n.height),
                        console.warn("THREE.WebGLRenderer: image is too big (" + e.width + "x" + e.height + "). Resized to " + n.width + "x" + n.height, e),
                        n
                    }
                    return e
                }
                function l(e) {
                    return Ll.isPowerOfTwo(e.width) && Ll.isPowerOfTwo(e.height)
                }
                function c(e) {
                    if (e instanceof HTMLImageElement || e instanceof HTMLCanvasElement || e instanceof ImageBitmap) {
                        var t = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        t.width = Ll.floorPowerOfTwo(e.width),
                        t.height = Ll.floorPowerOfTwo(e.height);
                        var i = t.getContext("2d");
                        return i.drawImage(e, 0, 0, t.width, t.height),
                        console.warn("THREE.WebGLRenderer: image is not power of two (" + e.width + "x" + e.height + "). Resized to " + t.width + "x" + t.height, e),
                        t
                    }
                    return e
                }
                function h(e) {
                    return e.wrapS !== Es || e.wrapT !== Es || e.minFilter !== As && e.minFilter !== Ls
                }
                function u(e, t) {
                    return e.generateMipmaps && t && e.minFilter !== As && e.minFilter !== Ls
                }
                function d(t) {
                    return t === As || t === Ps || t === Cs ? e.NEAREST : e.LINEAR
                }
                function p(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", p),
                    m(t),
                    o.textures--
                }
                function f(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", f),
                    v(t),
                    o.textures--
                }
                function m(t) {
                    var i = n.get(t);
                    if (t.image && i.__image__webglTextureCube)
                        e.deleteTexture(i.__image__webglTextureCube);
                    else {
                        if (void 0 === i.__webglInit)
                            return;
                        e.deleteTexture(i.__webglTexture)
                    }
                    n.remove(t)
                }
                function v(t) {
                    var i = n.get(t)
                      , r = n.get(t.texture);
                    if (t) {
                        if (void 0 !== r.__webglTexture && e.deleteTexture(r.__webglTexture),
                        t.depthTexture && t.depthTexture.dispose(),
                        t.isWebGLRenderTargetCube)
                            for (var a = 0; 6 > a; a++)
                                e.deleteFramebuffer(i.__webglFramebuffer[a]),
                                i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer[a]);
                        else
                            e.deleteFramebuffer(i.__webglFramebuffer),
                            i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer);
                        n.remove(t.texture),
                        n.remove(t)
                    }
                }
                function g(t, r) {
                    var a = n.get(t);
                    if (t.version > 0 && a.__version !== t.version) {
                        var o = t.image;
                        if (void 0 === o)
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", t);
                        else {
                            if (o.complete !== !1)
                                return void b(a, t, r);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", t)
                        }
                    }
                    i.activeTexture(e.TEXTURE0 + r),
                    i.bindTexture(e.TEXTURE_2D, a.__webglTexture)
                }
                function y(t, c) {
                    var h = n.get(t);
                    if (6 === t.image.length)
                        if (t.version > 0 && h.__version !== t.version) {
                            h.__image__webglTextureCube || (t.addEventListener("dispose", p),
                            h.__image__webglTextureCube = e.createTexture(),
                            o.textures++),
                            i.activeTexture(e.TEXTURE0 + c),
                            i.bindTexture(e.TEXTURE_CUBE_MAP, h.__image__webglTextureCube),
                            e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY);
                            for (var d = t && t.isCompressedTexture, f = t.image[0] && t.image[0].isDataTexture, m = [], v = 0; 6 > v; v++)
                                m[v] = d || f ? f ? t.image[v].image : t.image[v] : s(t.image[v], r.maxCubemapSize);
                            var g = m[0]
                              , y = l(g)
                              , _ = a.convert(t.format)
                              , b = a.convert(t.type);
                            x(e.TEXTURE_CUBE_MAP, t, y);
                            for (var v = 0; 6 > v; v++)
                                if (d)
                                    for (var w, T = m[v].mipmaps, M = 0, E = T.length; E > M; M++)
                                        w = T[M],
                                        t.format !== Ys && t.format !== Xs ? i.getCompressedTextureFormats().indexOf(_) > -1 ? i.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + v, M, _, w.width, w.height, 0, w.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + v, M, _, w.width, w.height, 0, _, b, w.data);
                                else
                                    f ? i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + v, 0, _, m[v].width, m[v].height, 0, _, b, m[v].data) : i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + v, 0, _, _, b, m[v]);
                            u(t, y) && e.generateMipmap(e.TEXTURE_CUBE_MAP),
                            h.__version = t.version,
                            t.onUpdate && t.onUpdate(t)
                        } else
                            i.activeTexture(e.TEXTURE0 + c),
                            i.bindTexture(e.TEXTURE_CUBE_MAP, h.__image__webglTextureCube)
                }
                function _(t, r) {
                    i.activeTexture(e.TEXTURE0 + r),
                    i.bindTexture(e.TEXTURE_CUBE_MAP, n.get(t).__webglTexture)
                }
                function x(i, o, s) {
                    var l;
                    if (s ? (e.texParameteri(i, e.TEXTURE_WRAP_S, a.convert(o.wrapS)),
                    e.texParameteri(i, e.TEXTURE_WRAP_T, a.convert(o.wrapT)),
                    e.texParameteri(i, e.TEXTURE_MAG_FILTER, a.convert(o.magFilter)),
                    e.texParameteri(i, e.TEXTURE_MIN_FILTER, a.convert(o.minFilter))) : (e.texParameteri(i, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                    e.texParameteri(i, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                    (o.wrapS !== Es || o.wrapT !== Es) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", o),
                    e.texParameteri(i, e.TEXTURE_MAG_FILTER, d(o.magFilter)),
                    e.texParameteri(i, e.TEXTURE_MIN_FILTER, d(o.minFilter)),
                    o.minFilter !== As && o.minFilter !== Ls && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", o)),
                    l = t.get("EXT_texture_filter_anisotropic")) {
                        if (o.type === zs && null === t.get("OES_texture_float_linear"))
                            return;
                        if (o.type === Bs && null === t.get("OES_texture_half_float_linear"))
                            return;
                        (o.anisotropy > 1 || n.get(o).__currentAnisotropy) && (e.texParameterf(i, l.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, r.getMaxAnisotropy())),
                        n.get(o).__currentAnisotropy = o.anisotropy)
                    }
                }
                function b(t, n, d) {
                    void 0 === t.__webglInit && (t.__webglInit = !0,
                    n.addEventListener("dispose", p),
                    t.__webglTexture = e.createTexture(),
                    o.textures++),
                    i.activeTexture(e.TEXTURE0 + d),
                    i.bindTexture(e.TEXTURE_2D, t.__webglTexture),
                    e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, n.flipY),
                    e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.premultiplyAlpha),
                    e.pixelStorei(e.UNPACK_ALIGNMENT, n.unpackAlignment);
                    var f = s(n.image, r.maxTextureSize);
                    h(n) && l(f) === !1 && (f = c(f));
                    var m = l(f)
                      , v = a.convert(n.format)
                      , g = a.convert(n.type);
                    x(e.TEXTURE_2D, n, m);
                    var y, _ = n.mipmaps;
                    if (n.isDepthTexture) {
                        var b = e.DEPTH_COMPONENT;
                        if (n.type === zs) {
                            if (!P)
                                throw new Error("Float Depth Texture only supported in WebGL2.0");
                            b = e.DEPTH_COMPONENT32F
                        } else
                            P && (b = e.DEPTH_COMPONENT16);
                        n.format === Js && b === e.DEPTH_COMPONENT && n.type !== Fs && n.type !== Ns && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                        n.type = Fs,
                        g = a.convert(n.type)),
                        n.format === Ks && (b = e.DEPTH_STENCIL,
                        n.type !== Vs && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                        n.type = Vs,
                        g = a.convert(n.type))),
                        i.texImage2D(e.TEXTURE_2D, 0, b, f.width, f.height, 0, v, g, null)
                    } else if (n.isDataTexture)
                        if (_.length > 0 && m) {
                            for (var w = 0, T = _.length; T > w; w++)
                                y = _[w],
                                i.texImage2D(e.TEXTURE_2D, w, v, y.width, y.height, 0, v, g, y.data);
                            n.generateMipmaps = !1
                        } else
                            i.texImage2D(e.TEXTURE_2D, 0, v, f.width, f.height, 0, v, g, f.data);
                    else if (n.isCompressedTexture)
                        for (var w = 0, T = _.length; T > w; w++)
                            y = _[w],
                            n.format !== Ys && n.format !== Xs ? i.getCompressedTextureFormats().indexOf(v) > -1 ? i.compressedTexImage2D(e.TEXTURE_2D, w, v, y.width, y.height, 0, y.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : i.texImage2D(e.TEXTURE_2D, w, v, y.width, y.height, 0, v, g, y.data);
                    else if (_.length > 0 && m) {
                        for (var w = 0, T = _.length; T > w; w++)
                            y = _[w],
                            i.texImage2D(e.TEXTURE_2D, w, v, v, g, y);
                        n.generateMipmaps = !1
                    } else
                        i.texImage2D(e.TEXTURE_2D, 0, v, v, g, f);
                    u(n, m) && e.generateMipmap(e.TEXTURE_2D),
                    t.__version = n.version,
                    n.onUpdate && n.onUpdate(n)
                }
                function w(t, r, o, s) {
                    var l = a.convert(r.texture.format)
                      , c = a.convert(r.texture.type);
                    i.texImage2D(s, 0, l, r.width, r.height, 0, l, c, null),
                    e.bindFramebuffer(e.FRAMEBUFFER, t),
                    e.framebufferTexture2D(e.FRAMEBUFFER, o, s, n.get(r.texture).__webglTexture, 0),
                    e.bindFramebuffer(e.FRAMEBUFFER, null)
                }
                function T(t, i) {
                    e.bindRenderbuffer(e.RENDERBUFFER, t),
                    i.depthBuffer && !i.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, i.width, i.height),
                    e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t)) : i.depthBuffer && i.stencilBuffer ? (e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_STENCIL, i.width, i.height),
                    e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.RENDERBUFFER, t)) : e.renderbufferStorage(e.RENDERBUFFER, e.RGBA4, i.width, i.height),
                    e.bindRenderbuffer(e.RENDERBUFFER, null)
                }
                function M(t, i) {
                    var r = i && i.isWebGLRenderTargetCube;
                    if (r)
                        throw new Error("Depth Texture with cube render targets is not supported");
                    if (e.bindFramebuffer(e.FRAMEBUFFER, t),
                    !i.depthTexture || !i.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    n.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width,
                    i.depthTexture.image.height = i.height,
                    i.depthTexture.needsUpdate = !0),
                    g(i.depthTexture, 0);
                    var a = n.get(i.depthTexture).__webglTexture;
                    if (i.depthTexture.format === Js)
                        e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, a, 0);
                    else {
                        if (i.depthTexture.format !== Ks)
                            throw new Error("Unknown depthTexture format");
                        e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, a, 0)
                    }
                }
                function E(t) {
                    var i = n.get(t)
                      , r = t.isWebGLRenderTargetCube === !0;
                    if (t.depthTexture) {
                        if (r)
                            throw new Error("target.depthTexture not supported in Cube render targets");
                        M(i.__webglFramebuffer, t)
                    } else if (r) {
                        i.__webglDepthbuffer = [];
                        for (var a = 0; 6 > a; a++)
                            e.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer[a]),
                            i.__webglDepthbuffer[a] = e.createRenderbuffer(),
                            T(i.__webglDepthbuffer[a], t)
                    } else
                        e.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer),
                        i.__webglDepthbuffer = e.createRenderbuffer(),
                        T(i.__webglDepthbuffer, t);
                    e.bindFramebuffer(e.FRAMEBUFFER, null)
                }
                function S(t) {
                    var r = n.get(t)
                      , a = n.get(t.texture);
                    t.addEventListener("dispose", f),
                    a.__webglTexture = e.createTexture(),
                    o.textures++;
                    var s = t.isWebGLRenderTargetCube === !0
                      , c = l(t);
                    if (s) {
                        r.__webglFramebuffer = [];
                        for (var h = 0; 6 > h; h++)
                            r.__webglFramebuffer[h] = e.createFramebuffer()
                    } else
                        r.__webglFramebuffer = e.createFramebuffer();
                    if (s) {
                        i.bindTexture(e.TEXTURE_CUBE_MAP, a.__webglTexture),
                        x(e.TEXTURE_CUBE_MAP, t.texture, c);
                        for (var h = 0; 6 > h; h++)
                            w(r.__webglFramebuffer[h], t, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + h);
                        u(t.texture, c) && e.generateMipmap(e.TEXTURE_CUBE_MAP),
                        i.bindTexture(e.TEXTURE_CUBE_MAP, null)
                    } else
                        i.bindTexture(e.TEXTURE_2D, a.__webglTexture),
                        x(e.TEXTURE_2D, t.texture, c),
                        w(r.__webglFramebuffer, t, e.COLOR_ATTACHMENT0, e.TEXTURE_2D),
                        u(t.texture, c) && e.generateMipmap(e.TEXTURE_2D),
                        i.bindTexture(e.TEXTURE_2D, null);
                    t.depthBuffer && E(t)
                }
                function A(t) {
                    var r = t.texture
                      , a = l(t);
                    if (u(r, a)) {
                        var o = t.isWebGLRenderTargetCube ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D
                          , s = n.get(r).__webglTexture;
                        i.bindTexture(o, s),
                        e.generateMipmap(o),
                        i.bindTexture(o, null)
                    }
                }
                var P = "undefined" != typeof WebGL2RenderingContext && e instanceof window.WebGL2RenderingContext;
                this.setTexture2D = g,
                this.setTextureCube = y,
                this.setTextureCubeDynamic = _,
                this.setupRenderTarget = S,
                this.updateRenderTargetMipmap = A
            }
            function di() {
                function e(e) {
                    var t = e.uuid
                      , i = n[t];
                    return void 0 === i && (i = {},
                    n[t] = i),
                    i
                }
                function t(e) {
                    delete n[e.uuid]
                }
                function i() {
                    n = {}
                }
                var n = {};
                return {
                    get: e,
                    remove: t,
                    clear: i
                }
            }
            function pi(e, t, i) {
                function n() {
                    var t = !1
                      , i = new l
                      , n = null
                      , r = new l(0,0,0,0);
                    return {
                        setMask: function(i) {
                            n === i || t || (e.colorMask(i, i, i, i),
                            n = i)
                        },
                        setLocked: function(e) {
                            t = e
                        },
                        setClear: function(t, n, a, o, s) {
                            s === !0 && (t *= o,
                            n *= o,
                            a *= o),
                            i.set(t, n, a, o),
                            r.equals(i) === !1 && (e.clearColor(t, n, a, o),
                            r.copy(i))
                        },
                        reset: function() {
                            t = !1,
                            n = null,
                            r.set(-1, 0, 0, 0)
                        }
                    }
                }
                function r() {
                    var t = !1
                      , i = null
                      , n = null
                      , r = null;
                    return {
                        setTest: function(t) {
                            t ? d(e.DEPTH_TEST) : p(e.DEPTH_TEST)
                        },
                        setMask: function(n) {
                            i === n || t || (e.depthMask(n),
                            i = n)
                        },
                        setFunc: function(t) {
                            if (n !== t) {
                                if (t)
                                    switch (t) {
                                    case es:
                                        e.depthFunc(e.NEVER);
                                        break;
                                    case ts:
                                        e.depthFunc(e.ALWAYS);
                                        break;
                                    case is:
                                        e.depthFunc(e.LESS);
                                        break;
                                    case ns:
                                        e.depthFunc(e.LEQUAL);
                                        break;
                                    case rs:
                                        e.depthFunc(e.EQUAL);
                                        break;
                                    case as:
                                        e.depthFunc(e.GEQUAL);
                                        break;
                                    case os:
                                        e.depthFunc(e.GREATER);
                                        break;
                                    case ss:
                                        e.depthFunc(e.NOTEQUAL);
                                        break;
                                    default:
                                        e.depthFunc(e.LEQUAL)
                                    }
                                else
                                    e.depthFunc(e.LEQUAL);
                                n = t
                            }
                        },
                        setLocked: function(e) {
                            t = e
                        },
                        setClear: function(t) {
                            r !== t && (e.clearDepth(t),
                            r = t)
                        },
                        reset: function() {
                            t = !1,
                            i = null,
                            n = null,
                            r = null
                        }
                    }
                }
                function a() {
                    var t = !1
                      , i = null
                      , n = null
                      , r = null
                      , a = null
                      , o = null
                      , s = null
                      , l = null
                      , c = null;
                    return {
                        setTest: function(t) {
                            t ? d(e.STENCIL_TEST) : p(e.STENCIL_TEST)
                        },
                        setMask: function(n) {
                            i === n || t || (e.stencilMask(n),
                            i = n)
                        },
                        setFunc: function(t, i, o) {
                            (n !== t || r !== i || a !== o) && (e.stencilFunc(t, i, o),
                            n = t,
                            r = i,
                            a = o)
                        },
                        setOp: function(t, i, n) {
                            (o !== t || s !== i || l !== n) && (e.stencilOp(t, i, n),
                            o = t,
                            s = i,
                            l = n)
                        },
                        setLocked: function(e) {
                            t = e
                        },
                        setClear: function(t) {
                            c !== t && (e.clearStencil(t),
                            c = t)
                        },
                        reset: function() {
                            t = !1,
                            i = null,
                            n = null,
                            r = null,
                            a = null,
                            o = null,
                            s = null,
                            l = null,
                            c = null
                        }
                    }
                }
                function o(t, i, n) {
                    var r = new Uint8Array(4)
                      , a = e.createTexture();
                    e.bindTexture(t, a),
                    e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
                    e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
                    for (var o = 0; n > o; o++)
                        e.texImage2D(i + o, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, r);
                    return a
                }
                function s() {
                    for (var e = 0, t = D.length; t > e; e++)
                        D[e] = 0
                }
                function c(i) {
                    if (D[i] = 1,
                    0 === U[i] && (e.enableVertexAttribArray(i),
                    U[i] = 1),
                    0 !== F[i]) {
                        var n = t.get("ANGLE_instanced_arrays");
                        n.vertexAttribDivisorANGLE(i, 0),
                        F[i] = 0
                    }
                }
                function h(i, n) {
                    if (D[i] = 1,
                    0 === U[i] && (e.enableVertexAttribArray(i),
                    U[i] = 1),
                    F[i] !== n) {
                        var r = t.get("ANGLE_instanced_arrays");
                        r.vertexAttribDivisorANGLE(i, n),
                        F[i] = n
                    }
                }
                function u() {
                    for (var t = 0, i = U.length; t !== i; ++t)
                        U[t] !== D[t] && (e.disableVertexAttribArray(t),
                        U[t] = 0)
                }
                function d(t) {
                    k[t] !== !0 && (e.enable(t),
                    k[t] = !0)
                }
                function p(t) {
                    k[t] !== !1 && (e.disable(t),
                    k[t] = !1)
                }
                function f() {
                    if (null === N && (N = [],
                    t.get("WEBGL_compressed_texture_pvrtc") || t.get("WEBGL_compressed_texture_s3tc") || t.get("WEBGL_compressed_texture_etc1")))
                        for (var i = e.getParameter(e.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++)
                            N.push(i[n]);
                    return N
                }
                function m(t) {
                    return z !== t ? (e.useProgram(t),
                    z = t,
                    !0) : !1
                }
                function v(t, n, r, a, o, s, l, c) {
                    if (t !== Oo ? d(e.BLEND) : p(e.BLEND),
                    t !== ko) {
                        if (t !== B || c !== Y)
                            switch (t) {
                            case Do:
                                c ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                                e.blendFuncSeparate(e.ONE, e.ONE, e.ONE, e.ONE)) : (e.blendEquation(e.FUNC_ADD),
                                e.blendFunc(e.SRC_ALPHA, e.ONE));
                                break;
                            case Uo:
                                c ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                                e.blendFuncSeparate(e.ZERO, e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD),
                                e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR));
                                break;
                            case Fo:
                                c ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                                e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA)) : (e.blendEquation(e.FUNC_ADD),
                                e.blendFunc(e.ZERO, e.SRC_COLOR));
                                break;
                            default:
                                c ? (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                                e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA)) : (e.blendEquationSeparate(e.FUNC_ADD, e.FUNC_ADD),
                                e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA))
                            }
                        G = null,
                        H = null,
                        j = null,
                        V = null,
                        W = null,
                        X = null
                    } else
                        o = o || n,
                        s = s || r,
                        l = l || a,
                        (n !== G || o !== V) && (e.blendEquationSeparate(i.convert(n), i.convert(o)),
                        G = n,
                        V = o),
                        (r !== H || a !== j || s !== W || l !== X) && (e.blendFuncSeparate(i.convert(r), i.convert(a), i.convert(s), i.convert(l)),
                        H = r,
                        j = a,
                        W = s,
                        X = l);
                    B = t,
                    Y = c
                }
                function g(t) {
                    t.side === So ? p(e.CULL_FACE) : d(e.CULL_FACE),
                    y(t.side === Eo),
                    t.transparent === !0 ? v(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : v(Oo),
                    R.setFunc(t.depthFunc),
                    R.setTest(t.depthTest),
                    R.setMask(t.depthWrite),
                    L.setMask(t.colorWrite),
                    b(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
                }
                function y(t) {
                    q !== t && (e.frontFace(t ? e.CW : e.CCW),
                    q = t)
                }
                function _(t) {
                    t !== mo ? (d(e.CULL_FACE),
                    t !== Z && e.cullFace(t === vo ? e.BACK : t === go ? e.FRONT : e.FRONT_AND_BACK)) : p(e.CULL_FACE),
                    Z = t
                }
                function x(t) {
                    t !== Q && (tt && e.lineWidth(t),
                    Q = t)
                }
                function b(t, i, n) {
                    t ? (d(e.POLYGON_OFFSET_FILL),
                    (J !== i || K !== n) && (e.polygonOffset(i, n),
                    J = i,
                    K = n)) : p(e.POLYGON_OFFSET_FILL)
                }
                function w(t) {
                    t ? d(e.SCISSOR_TEST) : p(e.SCISSOR_TEST)
                }
                function T(t) {
                    void 0 === t && (t = e.TEXTURE0 + $ - 1),
                    it !== t && (e.activeTexture(t),
                    it = t)
                }
                function M(t, i) {
                    null === it && T();
                    var n = nt[it];
                    void 0 === n && (n = {
                        type: void 0,
                        texture: void 0
                    },
                    nt[it] = n),
                    (n.type !== t || n.texture !== i) && (e.bindTexture(t, i || ot[t]),
                    n.type = t,
                    n.texture = i)
                }
                function E() {
                    try {
                        e.compressedTexImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                }
                function S() {
                    try {
                        e.texImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                }
                function A(t) {
                    rt.equals(t) === !1 && (e.scissor(t.x, t.y, t.z, t.w),
                    rt.copy(t))
                }
                function P(t) {
                    at.equals(t) === !1 && (e.viewport(t.x, t.y, t.z, t.w),
                    at.copy(t))
                }
                function C() {
                    for (var t = 0; t < U.length; t++)
                        1 === U[t] && (e.disableVertexAttribArray(t),
                        U[t] = 0);
                    k = {},
                    N = null,
                    it = null,
                    nt = {},
                    z = null,
                    B = null,
                    q = null,
                    Z = null,
                    L.reset(),
                    R.reset(),
                    O.reset()
                }
                var L = new n
                  , R = new r
                  , O = new a
                  , I = e.getParameter(e.MAX_VERTEX_ATTRIBS)
                  , D = new Uint8Array(I)
                  , U = new Uint8Array(I)
                  , F = new Uint8Array(I)
                  , k = {}
                  , N = null
                  , z = null
                  , B = null
                  , G = null
                  , H = null
                  , j = null
                  , V = null
                  , W = null
                  , X = null
                  , Y = !1
                  , q = null
                  , Z = null
                  , Q = null
                  , J = null
                  , K = null
                  , $ = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
                  , et = parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1])
                  , tt = parseFloat(et) >= 1
                  , it = null
                  , nt = {}
                  , rt = new l
                  , at = new l
                  , ot = {};
                return ot[e.TEXTURE_2D] = o(e.TEXTURE_2D, e.TEXTURE_2D, 1),
                ot[e.TEXTURE_CUBE_MAP] = o(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
                L.setClear(0, 0, 0, 1),
                R.setClear(1),
                O.setClear(0),
                d(e.DEPTH_TEST),
                R.setFunc(ns),
                y(!1),
                _(vo),
                d(e.CULL_FACE),
                d(e.BLEND),
                v(Io),
                {
                    buffers: {
                        color: L,
                        depth: R,
                        stencil: O
                    },
                    initAttributes: s,
                    enableAttribute: c,
                    enableAttributeAndDivisor: h,
                    disableUnusedAttributes: u,
                    enable: d,
                    disable: p,
                    getCompressedTextureFormats: f,
                    useProgram: m,
                    setBlending: v,
                    setMaterial: g,
                    setFlipSided: y,
                    setCullFace: _,
                    setLineWidth: x,
                    setPolygonOffset: b,
                    setScissorTest: w,
                    activeTexture: T,
                    bindTexture: M,
                    compressedTexImage2D: E,
                    texImage2D: S,
                    scissor: A,
                    viewport: P,
                    reset: C
                }
            }
            function fi(e, t, i) {
                function n() {
                    if (void 0 !== a)
                        return a;
                    var i = t.get("EXT_texture_filter_anisotropic");
                    return a = null !== i ? e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                }
                function r(t) {
                    if ("highp" === t) {
                        if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0)
                            return "highp";
                        t = "mediump"
                    }
                    return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
                }
                var a, o = void 0 !== i.precision ? i.precision : "highp", s = r(o);
                s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."),
                o = s);
                var l = i.logarithmicDepthBuffer === !0
                  , c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)
                  , h = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
                  , u = e.getParameter(e.MAX_TEXTURE_SIZE)
                  , d = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE)
                  , p = e.getParameter(e.MAX_VERTEX_ATTRIBS)
                  , f = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS)
                  , m = e.getParameter(e.MAX_VARYING_VECTORS)
                  , v = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS)
                  , g = h > 0
                  , y = !!t.get("OES_texture_float")
                  , _ = g && y;
                return {
                    getMaxAnisotropy: n,
                    getMaxPrecision: r,
                    precision: o,
                    logarithmicDepthBuffer: l,
                    maxTextures: c,
                    maxVertexTextures: h,
                    maxTextureSize: u,
                    maxCubemapSize: d,
                    maxAttributes: p,
                    maxVertexUniforms: f,
                    maxVaryings: m,
                    maxFragmentUniforms: v,
                    vertexTextures: g,
                    floatFragmentTextures: y,
                    floatVertexTextures: _
                }
            }
            function mi(e, t, i, n) {
                ht.call(this),
                this.type = "PerspectiveCamera",
                this.fov = void 0 !== e ? e : 50,
                this.zoom = 1,
                this.near = void 0 !== i ? i : .1,
                this.far = void 0 !== n ? n : 2e3,
                this.focus = 10,
                this.aspect = void 0 !== t ? t : 1,
                this.view = null,
                this.filmGauge = 35,
                this.filmOffset = 0,
                this.updateProjectionMatrix()
            }
            function vi(e) {
                mi.call(this),
                this.cameras = e || []
            }
            function gi(e) {
                function t() {
                    if (null !== r && r.isPresenting) {
                        var t = r.getEyeParameters("left")
                          , n = t.renderWidth
                          , a = t.renderHeight;
                        f = e.getPixelRatio(),
                        p = e.getSize(),
                        e.setDrawingBufferSize(2 * n, a, 1)
                    } else
                        i.enabled && e.setDrawingBufferSize(p.width, p.height, f)
                }
                var i = this
                  , r = null
                  , a = null;
                "undefined" != typeof window && "VRFrameData"in window && (a = new window.VRFrameData);
                var o = new n
                  , s = new n
                  , c = new n
                  , h = new mi;
                h.bounds = new l(0,0,.5,1),
                h.layers.enable(1);
                var u = new mi;
                u.bounds = new l(.5,0,.5,1),
                u.layers.enable(2);
                var d = new vi([h, u]);
                d.layers.enable(1),
                d.layers.enable(2);
                var p, f;
                "undefined" != typeof window && window.addEventListener("vrdisplaypresentchange", t, !1),
                this.enabled = !1,
                this.standing = !1,
                this.getDevice = function() {
                    return r
                }
                ,
                this.setDevice = function(e) {
                    void 0 !== e && (r = e)
                }
                ,
                this.getCamera = function(e) {
                    if (null === r)
                        return e;
                    r.depthNear = e.near,
                    r.depthFar = e.far,
                    r.getFrameData(a);
                    var t = a.pose;
                    null !== t.position ? e.position.fromArray(t.position) : e.position.set(0, 0, 0),
                    null !== t.orientation && e.quaternion.fromArray(t.orientation),
                    e.updateMatrixWorld();
                    var i = r.stageParameters;
                    if (this.standing && i && (s.fromArray(i.sittingToStandingTransform),
                    c.getInverse(s),
                    e.matrixWorld.multiply(s),
                    e.matrixWorldInverse.multiply(c)),
                    r.isPresenting === !1)
                        return e;
                    h.near = e.near,
                    u.near = e.near,
                    h.far = e.far,
                    u.far = e.far,
                    d.matrixWorld.copy(e.matrixWorld),
                    d.matrixWorldInverse.copy(e.matrixWorldInverse),
                    h.matrixWorldInverse.fromArray(a.leftViewMatrix),
                    u.matrixWorldInverse.fromArray(a.rightViewMatrix),
                    this.standing && i && (h.matrixWorldInverse.multiply(c),
                    u.matrixWorldInverse.multiply(c));
                    var n = e.parent;
                    null !== n && (o.getInverse(n.matrixWorld),
                    h.matrixWorldInverse.multiply(o),
                    u.matrixWorldInverse.multiply(o)),
                    h.matrixWorld.getInverse(h.matrixWorldInverse),
                    u.matrixWorld.getInverse(u.matrixWorldInverse),
                    h.projectionMatrix.fromArray(a.leftProjectionMatrix),
                    u.projectionMatrix.fromArray(a.rightProjectionMatrix),
                    d.projectionMatrix.copy(h.projectionMatrix);
                    var l = r.getLayers();
                    if (l.length) {
                        var p = l[0];
                        null !== p.leftBounds && 4 === p.leftBounds.length && h.bounds.fromArray(p.leftBounds),
                        null !== p.rightBounds && 4 === p.rightBounds.length && u.bounds.fromArray(p.rightBounds)
                    }
                    return d
                }
                ,
                this.getStandingMatrix = function() {
                    return s
                }
                ,
                this.submitFrame = function() {
                    r && r.isPresenting && r.submitFrame()
                }
                ,
                this.dispose = function() {
                    "undefined" != typeof window && window.removeEventListener("vrdisplaypresentchange", t)
                }
            }
            function yi(e) {
                var t = {};
                return {
                    get: function(i) {
                        if (void 0 !== t[i])
                            return t[i];
                        var n;
                        switch (i) {
                        case "WEBGL_depth_texture":
                            n = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            n = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            n = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            n = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        case "WEBGL_compressed_texture_etc1":
                            n = e.getExtension("WEBGL_compressed_texture_etc1");
                            break;
                        default:
                            n = e.getExtension(i)
                        }
                        return null === n && console.warn("THREE.WebGLRenderer: " + i + " extension not supported."),
                        t[i] = n,
                        n
                    }
                }
            }
            function _i() {
                function e() {
                    h.value !== n && (h.value = n,
                    h.needsUpdate = r > 0),
                    i.numPlanes = r,
                    i.numIntersection = 0
                }
                function t(e, t, n, r) {
                    var a = null !== e ? e.length : 0
                      , o = null;
                    if (0 !== a) {
                        if (o = h.value,
                        r !== !0 || null === o) {
                            var s = n + 4 * a
                              , u = t.matrixWorldInverse;
                            c.getNormalMatrix(u),
                            (null === o || o.length < s) && (o = new Float32Array(s));
                            for (var d = 0, p = n; d !== a; ++d,
                            p += 4)
                                l.copy(e[d]).applyMatrix4(u, c),
                                l.normal.toArray(o, p),
                                o[p + 3] = l.constant
                        }
                        h.value = o,
                        h.needsUpdate = !0
                    }
                    return i.numPlanes = a,
                    o
                }
                var i = this
                  , n = null
                  , r = 0
                  , a = !1
                  , s = !1
                  , l = new nt
                  , c = new o
                  , h = {
                    value: null,
                    needsUpdate: !1
                };
                this.uniform = h,
                this.numPlanes = 0,
                this.numIntersection = 0,
                this.init = function(e, i, o) {
                    var s = 0 !== e.length || i || 0 !== r || a;
                    return a = i,
                    n = t(e, o, 0),
                    r = e.length,
                    s
                }
                ,
                this.beginShadows = function() {
                    s = !0,
                    t(null)
                }
                ,
                this.endShadows = function() {
                    s = !1,
                    e()
                }
                ,
                this.setState = function(i, o, l, c, u, d) {
                    if (!a || null === i || 0 === i.length || s && !l)
                        s ? t(null) : e();
                    else {
                        var p = s ? 0 : r
                          , f = 4 * p
                          , m = u.clippingState || null;
                        h.value = m,
                        m = t(i, c, f, d);
                        for (var v = 0; v !== f; ++v)
                            m[v] = n[v];
                        u.clippingState = m,
                        this.numIntersection = o ? this.numPlanes : 0,
                        this.numPlanes += p
                    }
                }
            }
            function xi(e, t) {
                function i(i) {
                    var n;
                    if (i === Ms)
                        return e.REPEAT;
                    if (i === Es)
                        return e.CLAMP_TO_EDGE;
                    if (i === Ss)
                        return e.MIRRORED_REPEAT;
                    if (i === As)
                        return e.NEAREST;
                    if (i === Ps)
                        return e.NEAREST_MIPMAP_NEAREST;
                    if (i === Cs)
                        return e.NEAREST_MIPMAP_LINEAR;
                    if (i === Ls)
                        return e.LINEAR;
                    if (i === Rs)
                        return e.LINEAR_MIPMAP_NEAREST;
                    if (i === Os)
                        return e.LINEAR_MIPMAP_LINEAR;
                    if (i === Is)
                        return e.UNSIGNED_BYTE;
                    if (i === Gs)
                        return e.UNSIGNED_SHORT_4_4_4_4;
                    if (i === Hs)
                        return e.UNSIGNED_SHORT_5_5_5_1;
                    if (i === js)
                        return e.UNSIGNED_SHORT_5_6_5;
                    if (i === Ds)
                        return e.BYTE;
                    if (i === Us)
                        return e.SHORT;
                    if (i === Fs)
                        return e.UNSIGNED_SHORT;
                    if (i === ks)
                        return e.INT;
                    if (i === Ns)
                        return e.UNSIGNED_INT;
                    if (i === zs)
                        return e.FLOAT;
                    if (i === Bs && (n = t.get("OES_texture_half_float"),
                    null !== n))
                        return n.HALF_FLOAT_OES;
                    if (i === Ws)
                        return e.ALPHA;
                    if (i === Xs)
                        return e.RGB;
                    if (i === Ys)
                        return e.RGBA;
                    if (i === qs)
                        return e.LUMINANCE;
                    if (i === Zs)
                        return e.LUMINANCE_ALPHA;
                    if (i === Js)
                        return e.DEPTH_COMPONENT;
                    if (i === Ks)
                        return e.DEPTH_STENCIL;
                    if (i === No)
                        return e.FUNC_ADD;
                    if (i === zo)
                        return e.FUNC_SUBTRACT;
                    if (i === Bo)
                        return e.FUNC_REVERSE_SUBTRACT;
                    if (i === jo)
                        return e.ZERO;
                    if (i === Vo)
                        return e.ONE;
                    if (i === Wo)
                        return e.SRC_COLOR;
                    if (i === Xo)
                        return e.ONE_MINUS_SRC_COLOR;
                    if (i === Yo)
                        return e.SRC_ALPHA;
                    if (i === qo)
                        return e.ONE_MINUS_SRC_ALPHA;
                    if (i === Zo)
                        return e.DST_ALPHA;
                    if (i === Qo)
                        return e.ONE_MINUS_DST_ALPHA;
                    if (i === Jo)
                        return e.DST_COLOR;
                    if (i === Ko)
                        return e.ONE_MINUS_DST_COLOR;
                    if (i === $o)
                        return e.SRC_ALPHA_SATURATE;
                    if ((i === $s || i === el || i === tl || i === il) && (n = t.get("WEBGL_compressed_texture_s3tc"),
                    null !== n)) {
                        if (i === $s)
                            return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                        if (i === el)
                            return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                        if (i === tl)
                            return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                        if (i === il)
                            return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                    }
                    if ((i === nl || i === rl || i === al || i === ol) && (n = t.get("WEBGL_compressed_texture_pvrtc"),
                    null !== n)) {
                        if (i === nl)
                            return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                        if (i === rl)
                            return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                        if (i === al)
                            return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                        if (i === ol)
                            return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                    }
                    if (i === sl && (n = t.get("WEBGL_compressed_texture_etc1"),
                    null !== n))
                        return n.COMPRESSED_RGB_ETC1_WEBGL;
                    if ((i === Go || i === Ho) && (n = t.get("EXT_blend_minmax"),
                    null !== n)) {
                        if (i === Go)
                            return n.MIN_EXT;
                        if (i === Ho)
                            return n.MAX_EXT
                    }
                    return i === Vs && (n = t.get("WEBGL_depth_texture"),
                    null !== n) ? n.UNSIGNED_INT_24_8_WEBGL : 0
                }
                return {
                    convert: i
                }
            }
            function bi(e) {
                function t() {
                    return null === et ? mt : 1
                }
                function i() {
                    Lt = new yi(At),
                    Lt.get("WEBGL_depth_texture"),
                    Lt.get("OES_texture_float"),
                    Lt.get("OES_texture_float_linear"),
                    Lt.get("OES_texture_half_float"),
                    Lt.get("OES_texture_half_float_linear"),
                    Lt.get("OES_standard_derivatives"),
                    Lt.get("OES_element_index_uint"),
                    Lt.get("ANGLE_instanced_arrays"),
                    ti = new xi(At,Lt),
                    Rt = new fi(At,Lt,e),
                    Ot = new pi(At,Lt,ti),
                    Ot.scissor(ht.copy(gt).multiplyScalar(mt)),
                    Ot.viewport(ct.copy(vt).multiplyScalar(mt)),
                    It = new di,
                    Dt = new ui(At,Lt,Ot,It,Rt,ti,Et),
                    Ut = new ot(At),
                    Ft = new Xt(At,Ut,Et),
                    Nt = new Zt(Ft,St),
                    Qt = new jt(At),
                    Bt = new hi(K,Lt,Rt),
                    zt = new qt,
                    Ht = new Gt,
                    Yt = new kt(K,Ot,Ft,H),
                    Jt = new Wt(At,Lt,St),
                    Kt = new Vt(At,Lt,St),
                    $t = new Z(K,At,Ot,Dt,Rt),
                    ei = new J(K,At,Ot,Dt,Rt),
                    K.info.programs = Bt.programs,
                    K.context = At,
                    K.capabilities = Rt,
                    K.extensions = Lt,
                    K.properties = It,
                    K.renderLists = Ht,
                    K.state = Ot
                }
                function r(e) {
                    e.preventDefault(),
                    console.log("THREE.WebGLRenderer: Context Lost."),
                    $ = !0
                }
                function o() {
                    console.log("THREE.WebGLRenderer: Context Restored."),
                    $ = !1,
                    i()
                }
                function s(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", s),
                    c(t)
                }
                function c(e) {
                    h(e),
                    It.remove(e)
                }
                function h(e) {
                    var t = It.get(e).program;
                    e.program = void 0,
                    void 0 !== t && Bt.releaseProgram(t)
                }
                function d(e, t, i) {
                    e.render(function(e) {
                        K.renderBufferImmediate(e, t, i)
                    })
                }
                function p(e, t, i, n) {
                    if (i && i.isInstancedBufferGeometry && null === Lt.get("ANGLE_instanced_arrays"))
                        return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                    void 0 === n && (n = 0),
                    Ot.initAttributes();
                    var r = i.attributes
                      , a = t.getAttributes()
                      , o = e.defaultAttributeValues;
                    for (var s in a) {
                        var l = a[s];
                        if (l >= 0) {
                            var c = r[s];
                            if (void 0 !== c) {
                                var h = c.normalized
                                  , u = c.itemSize
                                  , d = Ut.get(c);
                                if (void 0 === d)
                                    continue;
                                var p = d.buffer
                                  , f = d.type
                                  , m = d.bytesPerElement;
                                if (c.isInterleavedBufferAttribute) {
                                    var v = c.data
                                      , g = v.stride
                                      , y = c.offset;
                                    v && v.isInstancedInterleavedBuffer ? (Ot.enableAttributeAndDivisor(l, v.meshPerAttribute),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = v.meshPerAttribute * v.count)) : Ot.enableAttribute(l),
                                    At.bindBuffer(At.ARRAY_BUFFER, p),
                                    At.vertexAttribPointer(l, u, f, h, g * m, (n * g + y) * m)
                                } else
                                    c.isInstancedBufferAttribute ? (Ot.enableAttributeAndDivisor(l, c.meshPerAttribute),
                                    void 0 === i.maxInstancedCount && (i.maxInstancedCount = c.meshPerAttribute * c.count)) : Ot.enableAttribute(l),
                                    At.bindBuffer(At.ARRAY_BUFFER, p),
                                    At.vertexAttribPointer(l, u, f, h, 0, n * u * m)
                            } else if (void 0 !== o) {
                                var _ = o[s];
                                if (void 0 !== _)
                                    switch (_.length) {
                                    case 2:
                                        At.vertexAttrib2fv(l, _);
                                        break;
                                    case 3:
                                        At.vertexAttrib3fv(l, _);
                                        break;
                                    case 4:
                                        At.vertexAttrib4fv(l, _);
                                        break;
                                    default:
                                        At.vertexAttrib1fv(l, _)
                                    }
                            }
                        }
                    }
                    Ot.disableUnusedAttributes()
                }
                function f() {
                    if (!ri) {
                        var e = ii.getDevice();
                        e && e.isPresenting ? e.requestAnimationFrame(m) : window.requestAnimationFrame(m),
                        ri = !0
                    }
                }
                function m(e) {
                    null !== ai && ai(e);
                    var t = ii.getDevice();
                    t && t.isPresenting ? t.requestAnimationFrame(m) : window.requestAnimationFrame(m)
                }
                function v(e, t, i) {
                    if (e.visible !== !1) {
                        var n = e.layers.test(t.layers);
                        if (n)
                            if (e.isLight)
                                V.push(e),
                                e.castShadow && W.push(e);
                            else if (e.isSprite)
                                (!e.frustumCulled || _t.intersectsSprite(e)) && q.push(e);
                            else if (e.isLensFlare)
                                Q.push(e);
                            else if (e.isImmediateRenderObject)
                                i && Mt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Tt),
                                Y.push(e, null, e.material, Mt.z, null);
                            else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.update(),
                            !e.frustumCulled || _t.intersectsObject(e))) {
                                i && Mt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Tt);
                                var r = Nt.update(e)
                                  , a = e.material;
                                if (Array.isArray(a))
                                    for (var o = r.groups, s = 0, l = o.length; l > s; s++) {
                                        var c = o[s]
                                          , h = a[c.materialIndex];
                                        h && h.visible && Y.push(e, r, h, Mt.z, c)
                                    }
                                else
                                    a.visible && Y.push(e, r, a, Mt.z, null)
                            }
                        for (var u = e.children, s = 0, l = u.length; l > s; s++)
                            v(u[s], t, i)
                    }
                }
                function g(e, t, i, n) {
                    for (var r = 0, a = e.length; a > r; r++) {
                        var o = e[r]
                          , s = o.object
                          , l = o.geometry
                          , c = void 0 === n ? o.material : n
                          , h = o.group;
                        if (i.isArrayCamera) {
                            lt = i;
                            for (var u = i.cameras, d = 0, p = u.length; p > d; d++) {
                                var f = u[d];
                                if (s.layers.test(f.layers)) {
                                    var m = f.bounds
                                      , v = m.x * pt
                                      , g = m.y * ft
                                      , _ = m.z * pt
                                      , x = m.w * ft;
                                    Ot.viewport(ct.set(v, g, _, x).multiplyScalar(mt)),
                                    y(s, t, f, l, c, h)
                                }
                            }
                        } else
                            lt = null,
                            y(s, t, i, l, c, h)
                    }
                }
                function y(e, t, i, n, r, a) {
                    if (e.onBeforeRender(K, t, i, n, r, a),
                    e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, e.matrixWorld),
                    e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
                    e.isImmediateRenderObject) {
                        Ot.setMaterial(r);
                        var o = x(i, t.fog, r, e);
                        nt = "",
                        d(e, o, r)
                    } else
                        K.renderBufferDirect(i, t.fog, n, r, e, a);
                    e.onAfterRender(K, t, i, n, r, a)
                }
                function _(e, t, i) {
                    var n = It.get(e)
                      , r = Bt.getParameters(e, zt.state, W, t, xt.numPlanes, xt.numIntersection, i)
                      , a = Bt.getProgramCode(e, r)
                      , o = n.program
                      , l = !0;
                    if (void 0 === o)
                        e.addEventListener("dispose", s);
                    else if (o.code !== a)
                        h(e);
                    else {
                        if (void 0 !== r.shaderID)
                            return;
                        l = !1
                    }
                    if (l) {
                        if (r.shaderID) {
                            var c = Vh[r.shaderID];
                            n.shader = {
                                name: e.type,
                                uniforms: Gl.clone(c.uniforms),
                                vertexShader: c.vertexShader,
                                fragmentShader: c.fragmentShader
                            }
                        } else
                            n.shader = {
                                name: e.type,
                                uniforms: e.uniforms,
                                vertexShader: e.vertexShader,
                                fragmentShader: e.fragmentShader
                            };
                        e.onBeforeCompile(n.shader),
                        o = Bt.acquireProgram(e, n.shader, r, a),
                        n.program = o,
                        e.program = o
                    }
                    var u = o.getAttributes();
                    if (e.morphTargets) {
                        e.numSupportedMorphTargets = 0;
                        for (var d = 0; d < K.maxMorphTargets; d++)
                            u["morphTarget" + d] >= 0 && e.numSupportedMorphTargets++
                    }
                    if (e.morphNormals) {
                        e.numSupportedMorphNormals = 0;
                        for (var d = 0; d < K.maxMorphNormals; d++)
                            u["morphNormal" + d] >= 0 && e.numSupportedMorphNormals++
                    }
                    var p = n.shader.uniforms;
                    (!e.isShaderMaterial && !e.isRawShaderMaterial || e.clipping === !0) && (n.numClippingPlanes = xt.numPlanes,
                    n.numIntersection = xt.numIntersection,
                    p.clippingPlanes = xt.uniform),
                    n.fog = t,
                    n.lightsHash = zt.state.hash,
                    e.lights && (p.ambientLightColor.value = zt.state.ambient,
                    p.directionalLights.value = zt.state.directional,
                    p.spotLights.value = zt.state.spot,
                    p.rectAreaLights.value = zt.state.rectArea,
                    p.pointLights.value = zt.state.point,
                    p.hemisphereLights.value = zt.state.hemi,
                    p.directionalShadowMap.value = zt.state.directionalShadowMap,
                    p.directionalShadowMatrix.value = zt.state.directionalShadowMatrix,
                    p.spotShadowMap.value = zt.state.spotShadowMap,
                    p.spotShadowMatrix.value = zt.state.spotShadowMatrix,
                    p.pointShadowMap.value = zt.state.pointShadowMap,
                    p.pointShadowMatrix.value = zt.state.pointShadowMatrix);
                    var f = n.program.getUniforms()
                      , m = X.seqWithValue(f.seq, p);
                    n.uniformsList = m
                }
                function x(e, t, i, n) {
                    dt = 0;
                    var r = It.get(i);
                    if (bt && (wt || e !== st)) {
                        var a = e === st && i.id === it;
                        xt.setState(i.clippingPlanes, i.clipIntersection, i.clipShadows, e, r, a)
                    }
                    i.needsUpdate === !1 && (void 0 === r.program ? i.needsUpdate = !0 : i.fog && r.fog !== t ? i.needsUpdate = !0 : i.lights && r.lightsHash !== zt.state.hash ? i.needsUpdate = !0 : void 0 === r.numClippingPlanes || r.numClippingPlanes === xt.numPlanes && r.numIntersection === xt.numIntersection || (i.needsUpdate = !0)),
                    i.needsUpdate && (_(i, t, n),
                    i.needsUpdate = !1);
                    var o = !1
                      , s = !1
                      , l = !1
                      , c = r.program
                      , h = c.getUniforms()
                      , d = r.shader.uniforms;
                    if (Ot.useProgram(c.program) && (o = !0,
                    s = !0,
                    l = !0),
                    i.id !== it && (it = i.id,
                    s = !0),
                    o || e !== st) {
                        if (h.setValue(At, "projectionMatrix", e.projectionMatrix),
                        Rt.logarithmicDepthBuffer && h.setValue(At, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)),
                        st !== (lt || e) && (st = lt || e,
                        s = !0,
                        l = !0),
                        i.isShaderMaterial || i.isMeshPhongMaterial || i.isMeshStandardMaterial || i.envMap) {
                            var p = h.map.cameraPosition;
                            void 0 !== p && p.setValue(At, Mt.setFromMatrixPosition(e.matrixWorld))
                        }
                        (i.isMeshPhongMaterial || i.isMeshLambertMaterial || i.isMeshBasicMaterial || i.isMeshStandardMaterial || i.isShaderMaterial || i.skinning) && h.setValue(At, "viewMatrix", e.matrixWorldInverse)
                    }
                    if (i.skinning) {
                        h.setOptional(At, n, "bindMatrix"),
                        h.setOptional(At, n, "bindMatrixInverse");
                        var f = n.skeleton;
                        if (f) {
                            var m = f.bones;
                            if (Rt.floatVertexTextures) {
                                if (void 0 === f.boneTexture) {
                                    var v = Math.sqrt(4 * m.length);
                                    v = Ll.ceilPowerOfTwo(v),
                                    v = Math.max(v, 4);
                                    var g = new Float32Array(v * v * 4);
                                    g.set(f.boneMatrices);
                                    var y = new u(g,v,v,Ys,zs);
                                    f.boneMatrices = g,
                                    f.boneTexture = y,
                                    f.boneTextureSize = v
                                }
                                h.setValue(At, "boneTexture", f.boneTexture),
                                h.setValue(At, "boneTextureSize", f.boneTextureSize)
                            } else
                                h.setOptional(At, f, "boneMatrices")
                        }
                    }
                    return s && (h.setValue(At, "toneMappingExposure", K.toneMappingExposure),
                    h.setValue(At, "toneMappingWhitePoint", K.toneMappingWhitePoint),
                    i.lights && D(d, l),
                    t && i.fog && E(d, t),
                    i.isMeshBasicMaterial ? b(d, i) : i.isMeshLambertMaterial ? (b(d, i),
                    S(d, i)) : i.isMeshPhongMaterial ? (b(d, i),
                    i.isMeshToonMaterial ? P(d, i) : A(d, i)) : i.isMeshStandardMaterial ? (b(d, i),
                    i.isMeshPhysicalMaterial ? L(d, i) : C(d, i)) : i.isMeshDepthMaterial ? (b(d, i),
                    R(d, i)) : i.isMeshDistanceMaterial ? (b(d, i),
                    O(d, i)) : i.isMeshNormalMaterial ? (b(d, i),
                    I(d, i)) : i.isLineBasicMaterial ? (w(d, i),
                    i.isLineDashedMaterial && T(d, i)) : i.isPointsMaterial ? M(d, i) : i.isShadowMaterial && (d.color.value = i.color,
                    d.opacity.value = i.opacity),
                    void 0 !== d.ltcMat && (d.ltcMat.value = Bl.LTC_MAT_TEXTURE),
                    void 0 !== d.ltcMag && (d.ltcMag.value = Bl.LTC_MAG_TEXTURE),
                    X.upload(At, r.uniformsList, d, K)),
                    h.setValue(At, "modelViewMatrix", n.modelViewMatrix),
                    h.setValue(At, "normalMatrix", n.normalMatrix),
                    h.setValue(At, "modelMatrix", n.matrixWorld),
                    c
                }
                function b(e, t) {
                    e.opacity.value = t.opacity,
                    t.color && (e.diffuse.value = t.color),
                    t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),
                    t.map && (e.map.value = t.map),
                    t.alphaMap && (e.alphaMap.value = t.alphaMap),
                    t.specularMap && (e.specularMap.value = t.specularMap),
                    t.envMap && (e.envMap.value = t.envMap,
                    e.flipEnvMap.value = t.envMap && t.envMap.isCubeTexture ? -1 : 1,
                    e.reflectivity.value = t.reflectivity,
                    e.refractionRatio.value = t.refractionRatio),
                    t.lightMap && (e.lightMap.value = t.lightMap,
                    e.lightMapIntensity.value = t.lightMapIntensity),
                    t.aoMap && (e.aoMap.value = t.aoMap,
                    e.aoMapIntensity.value = t.aoMapIntensity);
                    var i;
                    if (t.map ? i = t.map : t.specularMap ? i = t.specularMap : t.displacementMap ? i = t.displacementMap : t.normalMap ? i = t.normalMap : t.bumpMap ? i = t.bumpMap : t.roughnessMap ? i = t.roughnessMap : t.metalnessMap ? i = t.metalnessMap : t.alphaMap ? i = t.alphaMap : t.emissiveMap && (i = t.emissiveMap),
                    void 0 !== i) {
                        if (i.isWebGLRenderTarget && (i = i.texture),
                        i.matrixAutoUpdate === !0) {
                            var n = i.offset
                              , r = i.repeat
                              , a = i.rotation
                              , o = i.center;
                            i.matrix.setUvTransform(n.x, n.y, r.x, r.y, a, o.x, o.y)
                        }
                        e.uvTransform.value.copy(i.matrix)
                    }
                }
                function w(e, t) {
                    e.diffuse.value = t.color,
                    e.opacity.value = t.opacity
                }
                function T(e, t) {
                    e.dashSize.value = t.dashSize,
                    e.totalSize.value = t.dashSize + t.gapSize,
                    e.scale.value = t.scale
                }
                function M(e, t) {
                    if (e.diffuse.value = t.color,
                    e.opacity.value = t.opacity,
                    e.size.value = t.size * mt,
                    e.scale.value = .5 * ft,
                    e.map.value = t.map,
                    null !== t.map) {
                        if (t.map.matrixAutoUpdate === !0) {
                            var i = t.map.offset
                              , n = t.map.repeat
                              , r = t.map.rotation
                              , a = t.map.center;
                            t.map.matrix.setUvTransform(i.x, i.y, n.x, n.y, r, a.x, a.y)
                        }
                        e.uvTransform.value.copy(t.map.matrix)
                    }
                }
                function E(e, t) {
                    e.fogColor.value = t.color,
                    t.isFog ? (e.fogNear.value = t.near,
                    e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
                }
                function S(e, t) {
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                }
                function A(e, t) {
                    e.specular.value = t.specular,
                    e.shininess.value = Math.max(t.shininess, 1e-4),
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale),
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale)),
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }
                function P(e, t) {
                    A(e, t),
                    t.gradientMap && (e.gradientMap.value = t.gradientMap)
                }
                function C(e, t) {
                    e.roughness.value = t.roughness,
                    e.metalness.value = t.metalness,
                    t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
                    t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale),
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale)),
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias),
                    t.envMap && (e.envMapIntensity.value = t.envMapIntensity)
                }
                function L(e, t) {
                    e.clearCoat.value = t.clearCoat,
                    e.clearCoatRoughness.value = t.clearCoatRoughness,
                    C(e, t)
                }
                function R(e, t) {
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }
                function O(e, t) {
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias),
                    e.referencePosition.value.copy(t.referencePosition),
                    e.nearDistance.value = t.nearDistance,
                    e.farDistance.value = t.farDistance
                }
                function I(e, t) {
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale),
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale)),
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }
                function D(e, t) {
                    e.ambientLightColor.needsUpdate = t,
                    e.directionalLights.needsUpdate = t,
                    e.pointLights.needsUpdate = t,
                    e.spotLights.needsUpdate = t,
                    e.rectAreaLights.needsUpdate = t,
                    e.hemisphereLights.needsUpdate = t
                }
                function U() {
                    var e = dt;
                    return e >= Rt.maxTextures && console.warn("THREE.WebGLRenderer: Trying to use " + e + " texture units while this GPU supports only " + Rt.maxTextures),
                    dt += 1,
                    e
                }
                console.log("THREE.WebGLRenderer", po),
                e = e || {};
                var F = void 0 !== e.canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                  , k = void 0 !== e.context ? e.context : null
                  , N = void 0 !== e.alpha ? e.alpha : !1
                  , z = void 0 !== e.depth ? e.depth : !0
                  , B = void 0 !== e.stencil ? e.stencil : !0
                  , G = void 0 !== e.antialias ? e.antialias : !1
                  , H = void 0 !== e.premultipliedAlpha ? e.premultipliedAlpha : !0
                  , j = void 0 !== e.preserveDrawingBuffer ? e.preserveDrawingBuffer : !1
                  , V = []
                  , W = []
                  , Y = null
                  , q = []
                  , Q = [];
                this.domElement = F,
                this.context = null,
                this.autoClear = !0,
                this.autoClearColor = !0,
                this.autoClearDepth = !0,
                this.autoClearStencil = !0,
                this.sortObjects = !0,
                this.clippingPlanes = [],
                this.localClippingEnabled = !1,
                this.gammaFactor = 2,
                this.gammaInput = !1,
                this.gammaOutput = !1,
                this.physicallyCorrectLights = !1,
                this.toneMapping = ds,
                this.toneMappingExposure = 1,
                this.toneMappingWhitePoint = 1,
                this.maxMorphTargets = 8,
                this.maxMorphNormals = 4;
                var K = this
                  , $ = !1
                  , et = null
                  , tt = null
                  , it = -1
                  , nt = ""
                  , st = null
                  , lt = null
                  , ct = new l
                  , ht = new l
                  , ut = null
                  , dt = 0
                  , pt = F.width
                  , ft = F.height
                  , mt = 1
                  , vt = new l(0,0,pt,ft)
                  , gt = new l(0,0,pt,ft)
                  , yt = !1
                  , _t = new rt
                  , xt = new _i
                  , bt = !1
                  , wt = !1
                  , Tt = new n
                  , Mt = new a
                  , Et = {
                    geometries: 0,
                    textures: 0
                }
                  , St = {
                    frame: 0,
                    calls: 0,
                    vertices: 0,
                    faces: 0,
                    points: 0
                };
                this.info = {
                    render: St,
                    memory: Et,
                    programs: null
                };
                var At;
                try {
                    var Pt = {
                        alpha: N,
                        depth: z,
                        stencil: B,
                        antialias: G,
                        premultipliedAlpha: H,
                        preserveDrawingBuffer: j
                    };
                    if (At = k || F.getContext("webgl", Pt) || F.getContext("experimental-webgl", Pt),
                    null === At)
                        throw null !== F.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                    void 0 === At.getShaderPrecisionFormat && (At.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    }
                    ),
                    F.addEventListener("webglcontextlost", r, !1),
                    F.addEventListener("webglcontextrestored", o, !1)
                } catch (Ct) {
                    console.error("THREE.WebGLRenderer: " + Ct)
                }
                var Lt, Rt, Ot, It, Dt, Ut, Ft, Nt, zt, Bt, Ht, Yt, Qt, Jt, Kt, $t, ei, ti;
                i();
                var ii = new gi(K);
                this.vr = ii;
                var ni = new at(K,Nt,Rt.maxTextureSize);
                this.shadowMap = ni,
                this.getContext = function() {
                    return At
                }
                ,
                this.getContextAttributes = function() {
                    return At.getContextAttributes()
                }
                ,
                this.forceContextLoss = function() {
                    var e = Lt.get("WEBGL_lose_context");
                    e && e.loseContext()
                }
                ,
                this.forceContextRestore = function() {
                    var e = Lt.get("WEBGL_lose_context");
                    e && e.restoreContext()
                }
                ,
                this.getPixelRatio = function() {
                    return mt
                }
                ,
                this.setPixelRatio = function(e) {
                    void 0 !== e && (mt = e,
                    this.setSize(pt, ft, !1))
                }
                ,
                this.getSize = function() {
                    return {
                        width: pt,
                        height: ft
                    }
                }
                ,
                this.setSize = function(e, t, i) {
                    var n = ii.getDevice();
                    return n && n.isPresenting ? void console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (pt = e,
                    ft = t,
                    F.width = e * mt,
                    F.height = t * mt,
                    i !== !1 && (F.style.width = e + "px",
                    F.style.height = t + "px"),
                    void this.setViewport(0, 0, e, t))
                }
                ,
                this.getDrawingBufferSize = function() {
                    return {
                        width: pt * mt,
                        height: ft * mt
                    }
                }
                ,
                this.setDrawingBufferSize = function(e, t, i) {
                    pt = e,
                    ft = t,
                    mt = i,
                    F.width = e * i,
                    F.height = t * i,
                    this.setViewport(0, 0, e, t)
                }
                ,
                this.setViewport = function(e, t, i, n) {
                    vt.set(e, ft - t - n, i, n),
                    Ot.viewport(ct.copy(vt).multiplyScalar(mt))
                }
                ,
                this.setScissor = function(e, t, i, n) {
                    gt.set(e, ft - t - n, i, n),
                    Ot.scissor(ht.copy(gt).multiplyScalar(mt))
                }
                ,
                this.setScissorTest = function(e) {
                    Ot.setScissorTest(yt = e)
                }
                ,
                this.getClearColor = function() {
                    return Yt.getClearColor()
                }
                ,
                this.setClearColor = function() {
                    Yt.setClearColor.apply(Yt, arguments)
                }
                ,
                this.getClearAlpha = function() {
                    return Yt.getClearAlpha()
                }
                ,
                this.setClearAlpha = function() {
                    Yt.setClearAlpha.apply(Yt, arguments)
                }
                ,
                this.clear = function(e, t, i) {
                    var n = 0;
                    (void 0 === e || e) && (n |= At.COLOR_BUFFER_BIT),
                    (void 0 === t || t) && (n |= At.DEPTH_BUFFER_BIT),
                    (void 0 === i || i) && (n |= At.STENCIL_BUFFER_BIT),
                    At.clear(n)
                }
                ,
                this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }
                ,
                this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }
                ,
                this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }
                ,
                this.clearTarget = function(e, t, i, n) {
                    this.setRenderTarget(e),
                    this.clear(t, i, n)
                }
                ,
                this.dispose = function() {
                    F.removeEventListener("webglcontextlost", r, !1),
                    F.removeEventListener("webglcontextrestored", o, !1),
                    Ht.dispose(),
                    ii.dispose()
                }
                ,
                this.renderBufferImmediate = function(e, t, i) {
                    Ot.initAttributes();
                    var n = It.get(e);
                    e.hasPositions && !n.position && (n.position = At.createBuffer()),
                    e.hasNormals && !n.normal && (n.normal = At.createBuffer()),
                    e.hasUvs && !n.uv && (n.uv = At.createBuffer()),
                    e.hasColors && !n.color && (n.color = At.createBuffer());
                    var r = t.getAttributes();
                    if (e.hasPositions && (At.bindBuffer(At.ARRAY_BUFFER, n.position),
                    At.bufferData(At.ARRAY_BUFFER, e.positionArray, At.DYNAMIC_DRAW),
                    Ot.enableAttribute(r.position),
                    At.vertexAttribPointer(r.position, 3, At.FLOAT, !1, 0, 0)),
                    e.hasNormals) {
                        if (At.bindBuffer(At.ARRAY_BUFFER, n.normal),
                        !i.isMeshPhongMaterial && !i.isMeshStandardMaterial && !i.isMeshNormalMaterial && i.flatShading === !0)
                            for (var a = 0, o = 3 * e.count; o > a; a += 9) {
                                var s = e.normalArray
                                  , l = (s[a + 0] + s[a + 3] + s[a + 6]) / 3
                                  , c = (s[a + 1] + s[a + 4] + s[a + 7]) / 3
                                  , h = (s[a + 2] + s[a + 5] + s[a + 8]) / 3;
                                s[a + 0] = l,
                                s[a + 1] = c,
                                s[a + 2] = h,
                                s[a + 3] = l,
                                s[a + 4] = c,
                                s[a + 5] = h,
                                s[a + 6] = l,
                                s[a + 7] = c,
                                s[a + 8] = h
                            }
                        At.bufferData(At.ARRAY_BUFFER, e.normalArray, At.DYNAMIC_DRAW),
                        Ot.enableAttribute(r.normal),
                        At.vertexAttribPointer(r.normal, 3, At.FLOAT, !1, 0, 0)
                    }
                    e.hasUvs && i.map && (At.bindBuffer(At.ARRAY_BUFFER, n.uv),
                    At.bufferData(At.ARRAY_BUFFER, e.uvArray, At.DYNAMIC_DRAW),
                    Ot.enableAttribute(r.uv),
                    At.vertexAttribPointer(r.uv, 2, At.FLOAT, !1, 0, 0)),
                    e.hasColors && i.vertexColors !== Co && (At.bindBuffer(At.ARRAY_BUFFER, n.color),
                    At.bufferData(At.ARRAY_BUFFER, e.colorArray, At.DYNAMIC_DRAW),
                    Ot.enableAttribute(r.color),
                    At.vertexAttribPointer(r.color, 3, At.FLOAT, !1, 0, 0)),
                    Ot.disableUnusedAttributes(),
                    At.drawArrays(At.TRIANGLES, 0, e.count),
                    e.count = 0
                }
                ,
                this.renderBufferDirect = function(e, i, n, r, a, o) {
                    Ot.setMaterial(r);
                    var s = x(e, i, r, a)
                      , l = n.id + "_" + s.id + "_" + (r.wireframe === !0)
                      , c = !1;
                    l !== nt && (nt = l,
                    c = !0),
                    a.morphTargetInfluences && (Qt.update(a, n, r, s),
                    c = !0);
                    var h = n.index
                      , u = n.attributes.position
                      , d = 1;
                    r.wireframe === !0 && (h = Ft.getWireframeAttribute(n),
                    d = 2);
                    var f, m = Jt;
                    null !== h && (f = Ut.get(h),
                    m = Kt,
                    m.setIndex(f)),
                    c && (p(r, s, n),
                    null !== h && At.bindBuffer(At.ELEMENT_ARRAY_BUFFER, f.buffer));
                    var v = 0;
                    null !== h ? v = h.count : void 0 !== u && (v = u.count);
                    var g = n.drawRange.start * d
                      , y = n.drawRange.count * d
                      , _ = null !== o ? o.start * d : 0
                      , b = null !== o ? o.count * d : 1 / 0
                      , w = Math.max(g, _)
                      , T = Math.min(v, g + y, _ + b) - 1
                      , M = Math.max(0, T - w + 1);
                    if (0 !== M) {
                        if (a.isMesh)
                            if (r.wireframe === !0)
                                Ot.setLineWidth(r.wireframeLinewidth * t()),
                                m.setMode(At.LINES);
                            else
                                switch (a.drawMode) {
                                case gl:
                                    m.setMode(At.TRIANGLES);
                                    break;
                                case yl:
                                    m.setMode(At.TRIANGLE_STRIP);
                                    break;
                                case _l:
                                    m.setMode(At.TRIANGLE_FAN)
                                }
                        else if (a.isLine) {
                            var E = r.linewidth;
                            void 0 === E && (E = 1),
                            Ot.setLineWidth(E * t()),
                            m.setMode(a.isLineSegments ? At.LINES : a.isLineLoop ? At.LINE_LOOP : At.LINE_STRIP)
                        } else
                            a.isPoints && m.setMode(At.POINTS);
                        n && n.isInstancedBufferGeometry ? n.maxInstancedCount > 0 && m.renderInstances(n, w, M) : m.render(w, M)
                    }
                }
                ,
                this.compile = function(e, t) {
                    V.length = 0,
                    W.length = 0,
                    e.traverse(function(e) {
                        e.isLight && (V.push(e),
                        e.castShadow && W.push(e))
                    }),
                    zt.setup(V, W, t),
                    e.traverse(function(t) {
                        if (t.material)
                            if (Array.isArray(t.material))
                                for (var i = 0; i < t.material.length; i++)
                                    _(t.material[i], e.fog, t);
                            else
                                _(t.material, e.fog, t)
                    })
                }
                ;
                var ri = !1
                  , ai = null;
                this.animate = function(e) {
                    ai = e,
                    f()
                }
                ,
                this.render = function(e, t, i, n) {
                    if (!t || !t.isCamera)
                        return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
                    if (!$) {
                        nt = "",
                        it = -1,
                        st = null,
                        e.autoUpdate === !0 && e.updateMatrixWorld(),
                        null === t.parent && t.updateMatrixWorld(),
                        ii.enabled && (t = ii.getCamera(t)),
                        Tt.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                        _t.setFromMatrix(Tt),
                        V.length = 0,
                        W.length = 0,
                        q.length = 0,
                        Q.length = 0,
                        wt = this.localClippingEnabled,
                        bt = xt.init(this.clippingPlanes, wt, t),
                        Y = Ht.get(e, t),
                        Y.init(),
                        v(e, t, K.sortObjects),
                        K.sortObjects === !0 && Y.sort(),
                        bt && xt.beginShadows(),
                        ni.render(W, e, t),
                        zt.setup(V, W, t),
                        bt && xt.endShadows(),
                        St.frame++,
                        St.calls = 0,
                        St.vertices = 0,
                        St.faces = 0,
                        St.points = 0,
                        void 0 === i && (i = null),
                        this.setRenderTarget(i),
                        Yt.render(Y, e, t, n);
                        var r = Y.opaque
                          , a = Y.transparent;
                        if (e.overrideMaterial) {
                            var o = e.overrideMaterial;
                            r.length && g(r, e, t, o),
                            a.length && g(a, e, t, o)
                        } else
                            r.length && g(r, e, t),
                            a.length && g(a, e, t);
                        ei.render(q, e, t),
                        $t.render(Q, e, t, ct),
                        i && Dt.updateRenderTargetMipmap(i),
                        Ot.buffers.depth.setTest(!0),
                        Ot.buffers.depth.setMask(!0),
                        Ot.buffers.color.setMask(!0),
                        Ot.setPolygonOffset(!1),
                        ii.enabled && ii.submitFrame()
                    }
                }
                ,
                this.setFaceCulling = function(e, t) {
                    Ot.setCullFace(e),
                    Ot.setFlipSided(t === _o)
                }
                ,
                this.allocTextureUnit = U,
                this.setTexture2D = function() {
                    var e = !1;
                    return function(t, i) {
                        t && t.isWebGLRenderTarget && (e || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),
                        e = !0),
                        t = t.texture),
                        Dt.setTexture2D(t, i)
                    }
                }(),
                this.setTexture = function() {
                    var e = !1;
                    return function(t, i) {
                        e || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),
                        e = !0),
                        Dt.setTexture2D(t, i)
                    }
                }(),
                this.setTextureCube = function() {
                    var e = !1;
                    return function(t, i) {
                        t && t.isWebGLRenderTargetCube && (e || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
                        e = !0),
                        t = t.texture),
                        t && t.isCubeTexture || Array.isArray(t.image) && 6 === t.image.length ? Dt.setTextureCube(t, i) : Dt.setTextureCubeDynamic(t, i)
                    }
                }(),
                this.getRenderTarget = function() {
                    return et
                }
                ,
                this.setRenderTarget = function(e) {
                    et = e,
                    e && void 0 === It.get(e).__webglFramebuffer && Dt.setupRenderTarget(e);
                    var t = null
                      , i = !1;
                    if (e) {
                        var n = It.get(e).__webglFramebuffer;
                        e.isWebGLRenderTargetCube ? (t = n[e.activeCubeFace],
                        i = !0) : t = n,
                        ct.copy(e.viewport),
                        ht.copy(e.scissor),
                        ut = e.scissorTest
                    } else
                        ct.copy(vt).multiplyScalar(mt),
                        ht.copy(gt).multiplyScalar(mt),
                        ut = yt;
                    if (tt !== t && (At.bindFramebuffer(At.FRAMEBUFFER, t),
                    tt = t),
                    Ot.viewport(ct),
                    Ot.scissor(ht),
                    Ot.setScissorTest(ut),
                    i) {
                        var r = It.get(e.texture);
                        At.framebufferTexture2D(At.FRAMEBUFFER, At.COLOR_ATTACHMENT0, At.TEXTURE_CUBE_MAP_POSITIVE_X + e.activeCubeFace, r.__webglTexture, e.activeMipMapLevel)
                    }
                }
                ,
                this.readRenderTargetPixels = function(e, t, i, n, r, a) {
                    if (!e || !e.isWebGLRenderTarget)
                        return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                    var o = It.get(e).__webglFramebuffer;
                    if (o) {
                        var s = !1;
                        o !== tt && (At.bindFramebuffer(At.FRAMEBUFFER, o),
                        s = !0);
                        try {
                            var l = e.texture
                              , c = l.format
                              , h = l.type;
                            if (c !== Ys && ti.convert(c) !== At.getParameter(At.IMPLEMENTATION_COLOR_READ_FORMAT))
                                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                            if (!(h === Is || ti.convert(h) === At.getParameter(At.IMPLEMENTATION_COLOR_READ_TYPE) || h === zs && (Lt.get("OES_texture_float") || Lt.get("WEBGL_color_buffer_float")) || h === Bs && Lt.get("EXT_color_buffer_half_float")))
                                return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                            At.checkFramebufferStatus(At.FRAMEBUFFER) === At.FRAMEBUFFER_COMPLETE ? t >= 0 && t <= e.width - n && i >= 0 && i <= e.height - r && At.readPixels(t, i, n, r, ti.convert(c), ti.convert(h), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                        } finally {
                            s && At.bindFramebuffer(At.FRAMEBUFFER, tt)
                        }
                    }
                }
            }
            function wi(e, t) {
                this.name = "",
                this.color = new Y(e),
                this.density = void 0 !== t ? t : 25e-5
            }
            function Ti(e, t, i) {
                this.name = "",
                this.color = new Y(e),
                this.near = void 0 !== t ? t : 1,
                this.far = void 0 !== i ? i : 1e3
            }
            function Mi() {
                ct.call(this),
                this.type = "Scene",
                this.background = null,
                this.fog = null,
                this.overrideMaterial = null,
                this.autoUpdate = !0
            }
            function Ei(e, t, i, n, r) {
                ct.call(this),
                this.lensFlares = [],
                this.positionScreen = new a,
                this.customUpdateCallback = void 0,
                void 0 !== e && this.add(e, t, i, n, r)
            }
            function Si(e) {
                K.call(this),
                this.type = "SpriteMaterial",
                this.color = new Y(16777215),
                this.map = null,
                this.rotation = 0,
                this.fog = !1,
                this.lights = !1,
                this.setValues(e)
            }
            function Ai(e) {
                ct.call(this),
                this.type = "Sprite",
                this.material = void 0 !== e ? e : new Si
            }
            function Pi() {
                ct.call(this),
                this.type = "LOD",
                Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                })
            }
            function Ci(e, t) {
                if (e = e || [],
                this.bones = e.slice(0),
                this.boneMatrices = new Float32Array(16 * this.bones.length),
                void 0 === t)
                    this.calculateInverses();
                else if (this.bones.length === t.length)
                    this.boneInverses = t.slice(0);
                else {
                    console.warn("THREE.Skeleton boneInverses is the wrong length."),
                    this.boneInverses = [];
                    for (var i = 0, r = this.bones.length; r > i; i++)
                        this.boneInverses.push(new n)
                }
            }
            function Li() {
                ct.call(this),
                this.type = "Bone"
            }
            function Ri(e, t) {
                Ft.call(this, e, t),
                this.type = "SkinnedMesh",
                this.bindMode = "attached",
                this.bindMatrix = new n,
                this.bindMatrixInverse = new n;
                var i = this.initBones()
                  , r = new Ci(i);
                this.bind(r, this.matrixWorld),
                this.normalizeSkinWeights()
            }
            function Oi(e) {
                K.call(this),
                this.type = "LineBasicMaterial",
                this.color = new Y(16777215),
                this.linewidth = 1,
                this.linecap = "round",
                this.linejoin = "round",
                this.lights = !1,
                this.setValues(e)
            }
            function Ii(e, t, i) {
                return 1 === i ? (console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),
                new Di(e,t)) : (ct.call(this),
                this.type = "Line",
                this.geometry = void 0 !== e ? e : new St,
                void (this.material = void 0 !== t ? t : new Oi({
                    color: 16777215 * Math.random()
                })))
            }
            function Di(e, t) {
                Ii.call(this, e, t),
                this.type = "LineSegments"
            }
            function Ui(e, t) {
                Ii.call(this, e, t),
                this.type = "LineLoop"
            }
            function Fi(e) {
                K.call(this),
                this.type = "PointsMaterial",
                this.color = new Y(16777215),
                this.map = null,
                this.size = 1,
                this.sizeAttenuation = !0,
                this.lights = !1,
                this.setValues(e)
            }
            function ki(e, t) {
                ct.call(this),
                this.type = "Points",
                this.geometry = void 0 !== e ? e : new St,
                this.material = void 0 !== t ? t : new Fi({
                    color: 16777215 * Math.random()
                })
            }
            function Ni() {
                ct.call(this),
                this.type = "Group"
            }
            function zi(e, t, i, n, r, a, o, l, c) {
                function h() {
                    var e = u.image;
                    e.readyState >= e.HAVE_CURRENT_DATA && (u.needsUpdate = !0),
                    requestAnimationFrame(h)
                }
                s.call(this, e, t, i, n, r, a, o, l, c),
                this.generateMipmaps = !1;
                var u = this;
                requestAnimationFrame(h)
            }
            function Bi(e, t, i, n, r, a, o, l, c, h, u, d) {
                s.call(this, null, a, o, l, c, h, n, r, u, d),
                this.image = {
                    width: t,
                    height: i
                },
                this.mipmaps = e,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Gi(e, t, i, n, r, a, o, l, c, h) {
                if (h = void 0 !== h ? h : Js,
                h !== Js && h !== Ks)
                    throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === i && h === Js && (i = Fs),
                void 0 === i && h === Ks && (i = Vs),
                s.call(this, null, n, r, a, o, l, h, i, c),
                this.image = {
                    width: e,
                    height: t
                },
                this.magFilter = void 0 !== o ? o : As,
                this.minFilter = void 0 !== l ? l : As,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Hi(e) {
                St.call(this),
                this.type = "WireframeGeometry";
                var t, i, n, r, o, s, l, c, h, u, d = [], p = [0, 0], f = {}, m = ["a", "b", "c"];
                if (e && e.isGeometry) {
                    var v = e.faces;
                    for (t = 0,
                    n = v.length; n > t; t++) {
                        var g = v[t];
                        for (i = 0; 3 > i; i++)
                            l = g[m[i]],
                            c = g[m[(i + 1) % 3]],
                            p[0] = Math.min(l, c),
                            p[1] = Math.max(l, c),
                            h = p[0] + "," + p[1],
                            void 0 === f[h] && (f[h] = {
                                index1: p[0],
                                index2: p[1]
                            })
                    }
                    for (h in f)
                        s = f[h],
                        u = e.vertices[s.index1],
                        d.push(u.x, u.y, u.z),
                        u = e.vertices[s.index2],
                        d.push(u.x, u.y, u.z)
                } else if (e && e.isBufferGeometry) {
                    var y, _, x, b, w, T, M, E;
                    if (u = new a,
                    null !== e.index) {
                        for (y = e.attributes.position,
                        _ = e.index,
                        x = e.groups,
                        0 === x.length && (x = [{
                            start: 0,
                            count: _.count,
                            materialIndex: 0
                        }]),
                        r = 0,
                        o = x.length; o > r; ++r)
                            for (b = x[r],
                            w = b.start,
                            T = b.count,
                            t = w,
                            n = w + T; n > t; t += 3)
                                for (i = 0; 3 > i; i++)
                                    l = _.getX(t + i),
                                    c = _.getX(t + (i + 1) % 3),
                                    p[0] = Math.min(l, c),
                                    p[1] = Math.max(l, c),
                                    h = p[0] + "," + p[1],
                                    void 0 === f[h] && (f[h] = {
                                        index1: p[0],
                                        index2: p[1]
                                    });
                        for (h in f)
                            s = f[h],
                            u.fromBufferAttribute(y, s.index1),
                            d.push(u.x, u.y, u.z),
                            u.fromBufferAttribute(y, s.index2),
                            d.push(u.x, u.y, u.z)
                    } else
                        for (y = e.attributes.position,
                        t = 0,
                        n = y.count / 3; n > t; t++)
                            for (i = 0; 3 > i; i++)
                                M = 3 * t + i,
                                u.fromBufferAttribute(y, M),
                                d.push(u.x, u.y, u.z),
                                E = 3 * t + (i + 1) % 3,
                                u.fromBufferAttribute(y, E),
                                d.push(u.x, u.y, u.z)
                }
                this.addAttribute("position", new wt(d,3))
            }
            function ji(e, t, i) {
                pt.call(this),
                this.type = "ParametricGeometry",
                this.parameters = {
                    func: e,
                    slices: t,
                    stacks: i
                },
                this.fromBufferGeometry(new Vi(e,t,i)),
                this.mergeVertices()
            }
            function Vi(e, t, i) {
                St.call(this),
                this.type = "ParametricBufferGeometry",
                this.parameters = {
                    func: e,
                    slices: t,
                    stacks: i
                };
                var n, r, o = [], s = [], l = [], c = [], h = 1e-5, u = new a, d = new a, p = new a, f = new a, m = new a, v = t + 1;
                for (n = 0; i >= n; n++) {
                    var g = n / i;
                    for (r = 0; t >= r; r++) {
                        var y = r / t;
                        d = e(y, g, d),
                        s.push(d.x, d.y, d.z),
                        y - h >= 0 ? (p = e(y - h, g, p),
                        f.subVectors(d, p)) : (p = e(y + h, g, p),
                        f.subVectors(p, d)),
                        g - h >= 0 ? (p = e(y, g - h, p),
                        m.subVectors(d, p)) : (p = e(y, g + h, p),
                        m.subVectors(p, d)),
                        u.crossVectors(f, m).normalize(),
                        l.push(u.x, u.y, u.z),
                        c.push(y, g)
                    }
                }
                for (n = 0; i > n; n++)
                    for (r = 0; t > r; r++) {
                        var _ = n * v + r
                          , x = n * v + r + 1
                          , b = (n + 1) * v + r + 1
                          , w = (n + 1) * v + r;
                        o.push(_, x, w),
                        o.push(x, b, w)
                    }
                this.setIndex(o),
                this.addAttribute("position", new wt(s,3)),
                this.addAttribute("normal", new wt(l,3)),
                this.addAttribute("uv", new wt(c,2))
            }
            function Wi(e, t, i, n) {
                pt.call(this),
                this.type = "PolyhedronGeometry",
                this.parameters = {
                    vertices: e,
                    indices: t,
                    radius: i,
                    detail: n
                },
                this.fromBufferGeometry(new Xi(e,t,i,n)),
                this.mergeVertices()
            }
            function Xi(e, t, n, r) {
                function o(e) {
                    for (var i = new a, n = new a, r = new a, o = 0; o < t.length; o += 3)
                        d(t[o + 0], i),
                        d(t[o + 1], n),
                        d(t[o + 2], r),
                        s(i, n, r, e)
                }
                function s(e, t, i, n) {
                    var r, a, o = Math.pow(2, n), s = [];
                    for (r = 0; o >= r; r++) {
                        s[r] = [];
                        var l = e.clone().lerp(i, r / o)
                          , c = t.clone().lerp(i, r / o)
                          , h = o - r;
                        for (a = 0; h >= a; a++)
                            s[r][a] = 0 === a && r === o ? l : l.clone().lerp(c, a / h)
                    }
                    for (r = 0; o > r; r++)
                        for (a = 0; 2 * (o - r) - 1 > a; a++) {
                            var d = Math.floor(a / 2);
                            a % 2 === 0 ? (u(s[r][d + 1]),
                            u(s[r + 1][d]),
                            u(s[r][d])) : (u(s[r][d + 1]),
                            u(s[r + 1][d + 1]),
                            u(s[r + 1][d]))
                        }
                }
                function l(e) {
                    for (var t = new a, i = 0; i < g.length; i += 3)
                        t.x = g[i + 0],
                        t.y = g[i + 1],
                        t.z = g[i + 2],
                        t.normalize().multiplyScalar(e),
                        g[i + 0] = t.x,
                        g[i + 1] = t.y,
                        g[i + 2] = t.z
                }
                function c() {
                    for (var e = new a, t = 0; t < g.length; t += 3) {
                        e.x = g[t + 0],
                        e.y = g[t + 1],
                        e.z = g[t + 2];
                        var i = m(e) / 2 / Math.PI + .5
                          , n = v(e) / Math.PI + .5;
                        y.push(i, 1 - n)
                    }
                    p(),
                    h()
                }
                function h() {
                    for (var e = 0; e < y.length; e += 6) {
                        var t = y[e + 0]
                          , i = y[e + 2]
                          , n = y[e + 4]
                          , r = Math.max(t, i, n)
                          , a = Math.min(t, i, n);
                        r > .9 && .1 > a && (.2 > t && (y[e + 0] += 1),
                        .2 > i && (y[e + 2] += 1),
                        .2 > n && (y[e + 4] += 1))
                    }
                }
                function u(e) {
                    g.push(e.x, e.y, e.z)
                }
                function d(t, i) {
                    var n = 3 * t;
                    i.x = e[n + 0],
                    i.y = e[n + 1],
                    i.z = e[n + 2]
                }
                function p() {
                    for (var e = new a, t = new a, n = new a, r = new a, o = new i, s = new i, l = new i, c = 0, h = 0; c < g.length; c += 9,
                    h += 6) {
                        e.set(g[c + 0], g[c + 1], g[c + 2]),
                        t.set(g[c + 3], g[c + 4], g[c + 5]),
                        n.set(g[c + 6], g[c + 7], g[c + 8]),
                        o.set(y[h + 0], y[h + 1]),
                        s.set(y[h + 2], y[h + 3]),
                        l.set(y[h + 4], y[h + 5]),
                        r.copy(e).add(t).add(n).divideScalar(3);
                        var u = m(r);
                        f(o, h + 0, e, u),
                        f(s, h + 2, t, u),
                        f(l, h + 4, n, u)
                    }
                }
                function f(e, t, i, n) {
                    0 > n && 1 === e.x && (y[t] = e.x - 1),
                    0 === i.x && 0 === i.z && (y[t] = n / 2 / Math.PI + .5)
                }
                function m(e) {
                    return Math.atan2(e.z, -e.x)
                }
                function v(e) {
                    return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
                }
                St.call(this),
                this.type = "PolyhedronBufferGeometry",
                this.parameters = {
                    vertices: e,
                    indices: t,
                    radius: n,
                    detail: r
                },
                n = n || 1,
                r = r || 0;
                var g = []
                  , y = [];
                o(r),
                l(n),
                c(),
                this.addAttribute("position", new wt(g,3)),
                this.addAttribute("normal", new wt(g.slice(),3)),
                this.addAttribute("uv", new wt(y,2)),
                0 === r ? this.computeVertexNormals() : this.normalizeNormals()
            }
            function Yi(e, t) {
                pt.call(this),
                this.type = "TetrahedronGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                },
                this.fromBufferGeometry(new qi(e,t)),
                this.mergeVertices()
            }
            function qi(e, t) {
                var i = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
                  , n = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                Xi.call(this, i, n, e, t),
                this.type = "TetrahedronBufferGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                }
            }
            function Zi(e, t) {
                pt.call(this),
                this.type = "OctahedronGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                },
                this.fromBufferGeometry(new Qi(e,t)),
                this.mergeVertices()
            }
            function Qi(e, t) {
                var i = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
                  , n = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                Xi.call(this, i, n, e, t),
                this.type = "OctahedronBufferGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                }
            }
            function Ji(e, t) {
                pt.call(this),
                this.type = "IcosahedronGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                },
                this.fromBufferGeometry(new Ki(e,t)),
                this.mergeVertices()
            }
            function Ki(e, t) {
                var i = (1 + Math.sqrt(5)) / 2
                  , n = [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1]
                  , r = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                Xi.call(this, n, r, e, t),
                this.type = "IcosahedronBufferGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                }
            }
            function $i(e, t) {
                pt.call(this),
                this.type = "DodecahedronGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                },
                this.fromBufferGeometry(new en(e,t)),
                this.mergeVertices()
            }
            function en(e, t) {
                var i = (1 + Math.sqrt(5)) / 2
                  , n = 1 / i
                  , r = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n]
                  , a = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
                Xi.call(this, r, a, e, t),
                this.type = "DodecahedronBufferGeometry",
                this.parameters = {
                    radius: e,
                    detail: t
                }
            }
            function tn(e, t, i, n, r, a) {
                pt.call(this),
                this.type = "TubeGeometry",
                this.parameters = {
                    path: e,
                    tubularSegments: t,
                    radius: i,
                    radialSegments: n,
                    closed: r
                },
                void 0 !== a && console.warn("THREE.TubeGeometry: taper has been removed.");
                var o = new nn(e,t,i,n,r);
                this.tangents = o.tangents,
                this.normals = o.normals,
                this.binormals = o.binormals,
                this.fromBufferGeometry(o),
                this.mergeVertices()
            }
            function nn(e, t, n, r, o) {
                function s() {
                    for (d = 0; t > d; d++)
                        l(d);
                    l(o === !1 ? t : 0),
                    h(),
                    c()
                }
                function l(i) {
                    g = e.getPointAt(i / t, g);
                    var a = u.normals[i]
                      , o = u.binormals[i];
                    for (p = 0; r >= p; p++) {
                        var s = p / r * Math.PI * 2
                          , l = Math.sin(s)
                          , c = -Math.cos(s);
                        m.x = c * a.x + l * o.x,
                        m.y = c * a.y + l * o.y,
                        m.z = c * a.z + l * o.z,
                        m.normalize(),
                        _.push(m.x, m.y, m.z),
                        f.x = g.x + n * m.x,
                        f.y = g.y + n * m.y,
                        f.z = g.z + n * m.z,
                        y.push(f.x, f.y, f.z)
                    }
                }
                function c() {
                    for (p = 1; t >= p; p++)
                        for (d = 1; r >= d; d++) {
                            var e = (r + 1) * (p - 1) + (d - 1)
                              , i = (r + 1) * p + (d - 1)
                              , n = (r + 1) * p + d
                              , a = (r + 1) * (p - 1) + d;
                            b.push(e, i, a),
                            b.push(i, n, a)
                        }
                }
                function h() {
                    for (d = 0; t >= d; d++)
                        for (p = 0; r >= p; p++)
                            v.x = d / t,
                            v.y = p / r,
                            x.push(v.x, v.y)
                }
                St.call(this),
                this.type = "TubeBufferGeometry",
                this.parameters = {
                    path: e,
                    tubularSegments: t,
                    radius: n,
                    radialSegments: r,
                    closed: o
                },
                t = t || 64,
                n = n || 1,
                r = r || 8,
                o = o || !1;
                var u = e.computeFrenetFrames(t, o);
                this.tangents = u.tangents,
                this.normals = u.normals,
                this.binormals = u.binormals;
                var d, p, f = new a, m = new a, v = new i, g = new a, y = [], _ = [], x = [], b = [];
                s(),
                this.setIndex(b),
                this.addAttribute("position", new wt(y,3)),
                this.addAttribute("normal", new wt(_,3)),
                this.addAttribute("uv", new wt(x,2))
            }
            function rn(e, t, i, n, r, a, o) {
                pt.call(this),
                this.type = "TorusKnotGeometry",
                this.parameters = {
                    radius: e,
                    tube: t,
                    tubularSegments: i,
                    radialSegments: n,
                    p: r,
                    q: a
                },
                void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
                this.fromBufferGeometry(new an(e,t,i,n,r,a)),
                this.mergeVertices()
            }
            function an(e, t, i, n, r, o) {
                function s(e, t, i, n, r) {
                    var a = Math.cos(e)
                      , o = Math.sin(e)
                      , s = i / t * e
                      , l = Math.cos(s);
                    r.x = n * (2 + l) * .5 * a,
                    r.y = n * (2 + l) * o * .5,
                    r.z = n * Math.sin(s) * .5
                }
                St.call(this),
                this.type = "TorusKnotBufferGeometry",
                this.parameters = {
                    radius: e,
                    tube: t,
                    tubularSegments: i,
                    radialSegments: n,
                    p: r,
                    q: o
                },
                e = e || 1,
                t = t || .4,
                i = Math.floor(i) || 64,
                n = Math.floor(n) || 8,
                r = r || 2,
                o = o || 3;
                var l, c, h = [], u = [], d = [], p = [], f = new a, m = new a, v = new a, g = new a, y = new a, _ = new a, x = new a;
                for (l = 0; i >= l; ++l) {
                    var b = l / i * r * Math.PI * 2;
                    for (s(b, r, o, e, v),
                    s(b + .01, r, o, e, g),
                    _.subVectors(g, v),
                    x.addVectors(g, v),
                    y.crossVectors(_, x),
                    x.crossVectors(y, _),
                    y.normalize(),
                    x.normalize(),
                    c = 0; n >= c; ++c) {
                        var w = c / n * Math.PI * 2
                          , T = -t * Math.cos(w)
                          , M = t * Math.sin(w);
                        f.x = v.x + (T * x.x + M * y.x),
                        f.y = v.y + (T * x.y + M * y.y),
                        f.z = v.z + (T * x.z + M * y.z),
                        u.push(f.x, f.y, f.z),
                        m.subVectors(f, v).normalize(),
                        d.push(m.x, m.y, m.z),
                        p.push(l / i),
                        p.push(c / n)
                    }
                }
                for (c = 1; i >= c; c++)
                    for (l = 1; n >= l; l++) {
                        var E = (n + 1) * (c - 1) + (l - 1)
                          , S = (n + 1) * c + (l - 1)
                          , A = (n + 1) * c + l
                          , P = (n + 1) * (c - 1) + l;
                        h.push(E, S, P),
                        h.push(S, A, P)
                    }
                this.setIndex(h),
                this.addAttribute("position", new wt(u,3)),
                this.addAttribute("normal", new wt(d,3)),
                this.addAttribute("uv", new wt(p,2))
            }
            function on(e, t, i, n, r) {
                pt.call(this),
                this.type = "TorusGeometry",
                this.parameters = {
                    radius: e,
                    tube: t,
                    radialSegments: i,
                    tubularSegments: n,
                    arc: r
                },
                this.fromBufferGeometry(new sn(e,t,i,n,r)),
                this.mergeVertices()
            }
            function sn(e, t, i, n, r) {
                St.call(this),
                this.type = "TorusBufferGeometry",
                this.parameters = {
                    radius: e,
                    tube: t,
                    radialSegments: i,
                    tubularSegments: n,
                    arc: r
                },
                e = e || 1,
                t = t || .4,
                i = Math.floor(i) || 8,
                n = Math.floor(n) || 6,
                r = r || 2 * Math.PI;
                var o, s, l = [], c = [], h = [], u = [], d = new a, p = new a, f = new a;
                for (o = 0; i >= o; o++)
                    for (s = 0; n >= s; s++) {
                        var m = s / n * r
                          , v = o / i * Math.PI * 2;
                        p.x = (e + t * Math.cos(v)) * Math.cos(m),
                        p.y = (e + t * Math.cos(v)) * Math.sin(m),
                        p.z = t * Math.sin(v),
                        c.push(p.x, p.y, p.z),
                        d.x = e * Math.cos(m),
                        d.y = e * Math.sin(m),
                        f.subVectors(p, d).normalize(),
                        h.push(f.x, f.y, f.z),
                        u.push(s / n),
                        u.push(o / i)
                    }
                for (o = 1; i >= o; o++)
                    for (s = 1; n >= s; s++) {
                        var g = (n + 1) * o + s - 1
                          , y = (n + 1) * (o - 1) + s - 1
                          , _ = (n + 1) * (o - 1) + s
                          , x = (n + 1) * o + s;
                        l.push(g, y, x),
                        l.push(y, _, x)
                    }
                this.setIndex(l),
                this.addAttribute("position", new wt(c,3)),
                this.addAttribute("normal", new wt(h,3)),
                this.addAttribute("uv", new wt(u,2))
            }
            function ln(e, t) {
                pt.call(this),
                this.type = "ExtrudeGeometry",
                this.parameters = {
                    shapes: e,
                    options: t
                },
                this.fromBufferGeometry(new cn(e,t)),
                this.mergeVertices()
            }
            function cn(e, t) {
                "undefined" != typeof e && (St.call(this),
                this.type = "ExtrudeBufferGeometry",
                e = Array.isArray(e) ? e : [e],
                this.addShapeList(e, t),
                this.computeVertexNormals())
            }
            function hn(e, t) {
                pt.call(this),
                this.type = "TextGeometry",
                this.parameters = {
                    text: e,
                    parameters: t
                },
                this.fromBufferGeometry(new un(e,t)),
                this.mergeVertices()
            }
            function un(e, t) {
                t = t || {};
                var i = t.font;
                if (!i || !i.isFont)
                    return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
                    new pt;
                var n = i.generateShapes(e, t.size, t.curveSegments);
                t.amount = void 0 !== t.height ? t.height : 50,
                void 0 === t.bevelThickness && (t.bevelThickness = 10),
                void 0 === t.bevelSize && (t.bevelSize = 8),
                void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
                cn.call(this, n, t),
                this.type = "TextBufferGeometry"
            }
            function dn(e, t, i, n, r, a, o) {
                pt.call(this),
                this.type = "SphereGeometry",
                this.parameters = {
                    radius: e,
                    widthSegments: t,
                    heightSegments: i,
                    phiStart: n,
                    phiLength: r,
                    thetaStart: a,
                    thetaLength: o
                },
                this.fromBufferGeometry(new pn(e,t,i,n,r,a,o)),
                this.mergeVertices()
            }
            function pn(e, t, i, n, r, o, s) {
                St.call(this),
                this.type = "SphereBufferGeometry",
                this.parameters = {
                    radius: e,
                    widthSegments: t,
                    heightSegments: i,
                    phiStart: n,
                    phiLength: r,
                    thetaStart: o,
                    thetaLength: s
                },
                e = e || 1,
                t = Math.max(3, Math.floor(t) || 8),
                i = Math.max(2, Math.floor(i) || 6),
                n = void 0 !== n ? n : 0,
                r = void 0 !== r ? r : 2 * Math.PI,
                o = void 0 !== o ? o : 0,
                s = void 0 !== s ? s : Math.PI;
                var l, c, h = o + s, u = 0, d = [], p = new a, f = new a, m = [], v = [], g = [], y = [];
                for (c = 0; i >= c; c++) {
                    var _ = []
                      , x = c / i;
                    for (l = 0; t >= l; l++) {
                        var b = l / t;
                        p.x = -e * Math.cos(n + b * r) * Math.sin(o + x * s),
                        p.y = e * Math.cos(o + x * s),
                        p.z = e * Math.sin(n + b * r) * Math.sin(o + x * s),
                        v.push(p.x, p.y, p.z),
                        f.set(p.x, p.y, p.z).normalize(),
                        g.push(f.x, f.y, f.z),
                        y.push(b, 1 - x),
                        _.push(u++)
                    }
                    d.push(_)
                }
                for (c = 0; i > c; c++)
                    for (l = 0; t > l; l++) {
                        var w = d[c][l + 1]
                          , T = d[c][l]
                          , M = d[c + 1][l]
                          , E = d[c + 1][l + 1];
                        (0 !== c || o > 0) && m.push(w, T, E),
                        (c !== i - 1 || h < Math.PI) && m.push(T, M, E)
                    }
                this.setIndex(m),
                this.addAttribute("position", new wt(v,3)),
                this.addAttribute("normal", new wt(g,3)),
                this.addAttribute("uv", new wt(y,2))
            }
            function fn(e, t, i, n, r, a) {
                pt.call(this),
                this.type = "RingGeometry",
                this.parameters = {
                    innerRadius: e,
                    outerRadius: t,
                    thetaSegments: i,
                    phiSegments: n,
                    thetaStart: r,
                    thetaLength: a
                },
                this.fromBufferGeometry(new mn(e,t,i,n,r,a)),
                this.mergeVertices()
            }
            function mn(e, t, n, r, o, s) {
                St.call(this),
                this.type = "RingBufferGeometry",
                this.parameters = {
                    innerRadius: e,
                    outerRadius: t,
                    thetaSegments: n,
                    phiSegments: r,
                    thetaStart: o,
                    thetaLength: s
                },
                e = e || .5,
                t = t || 1,
                o = void 0 !== o ? o : 0,
                s = void 0 !== s ? s : 2 * Math.PI,
                n = void 0 !== n ? Math.max(3, n) : 8,
                r = void 0 !== r ? Math.max(1, r) : 1;
                var l, c, h, u = [], d = [], p = [], f = [], m = e, v = (t - e) / r, g = new a, y = new i;
                for (c = 0; r >= c; c++) {
                    for (h = 0; n >= h; h++)
                        l = o + h / n * s,
                        g.x = m * Math.cos(l),
                        g.y = m * Math.sin(l),
                        d.push(g.x, g.y, g.z),
                        p.push(0, 0, 1),
                        y.x = (g.x / t + 1) / 2,
                        y.y = (g.y / t + 1) / 2,
                        f.push(y.x, y.y);
                    m += v
                }
                for (c = 0; r > c; c++) {
                    var _ = c * (n + 1);
                    for (h = 0; n > h; h++) {
                        l = h + _;
                        var x = l
                          , b = l + n + 1
                          , w = l + n + 2
                          , T = l + 1;
                        u.push(x, b, T),
                        u.push(b, w, T)
                    }
                }
                this.setIndex(u),
                this.addAttribute("position", new wt(d,3)),
                this.addAttribute("normal", new wt(p,3)),
                this.addAttribute("uv", new wt(f,2))
            }
            function vn(e, t, i, n) {
                pt.call(this),
                this.type = "LatheGeometry",
                this.parameters = {
                    points: e,
                    segments: t,
                    phiStart: i,
                    phiLength: n
                },
                this.fromBufferGeometry(new gn(e,t,i,n)),
                this.mergeVertices()
            }
            function gn(e, t, n, r) {
                St.call(this),
                this.type = "LatheBufferGeometry",
                this.parameters = {
                    points: e,
                    segments: t,
                    phiStart: n,
                    phiLength: r
                },
                t = Math.floor(t) || 12,
                n = n || 0,
                r = r || 2 * Math.PI,
                r = Ll.clamp(r, 0, 2 * Math.PI);
                var o, s, l, c = [], h = [], u = [], d = 1 / t, p = new a, f = new i;
                for (s = 0; t >= s; s++) {
                    var m = n + s * d * r
                      , v = Math.sin(m)
                      , g = Math.cos(m);
                    for (l = 0; l <= e.length - 1; l++)
                        p.x = e[l].x * v,
                        p.y = e[l].y,
                        p.z = e[l].x * g,
                        h.push(p.x, p.y, p.z),
                        f.x = s / t,
                        f.y = l / (e.length - 1),
                        u.push(f.x, f.y)
                }
                for (s = 0; t > s; s++)
                    for (l = 0; l < e.length - 1; l++) {
                        o = l + s * e.length;
                        var y = o
                          , _ = o + e.length
                          , x = o + e.length + 1
                          , b = o + 1;
                        c.push(y, _, b),
                        c.push(_, x, b)
                    }
                if (this.setIndex(c),
                this.addAttribute("position", new wt(h,3)),
                this.addAttribute("uv", new wt(u,2)),
                this.computeVertexNormals(),
                r === 2 * Math.PI) {
                    var w = this.attributes.normal.array
                      , T = new a
                      , M = new a
                      , E = new a;
                    for (o = t * e.length * 3,
                    s = 0,
                    l = 0; s < e.length; s++,
                    l += 3)
                        T.x = w[l + 0],
                        T.y = w[l + 1],
                        T.z = w[l + 2],
                        M.x = w[o + l + 0],
                        M.y = w[o + l + 1],
                        M.z = w[o + l + 2],
                        E.addVectors(T, M).normalize(),
                        w[l + 0] = w[o + l + 0] = E.x,
                        w[l + 1] = w[o + l + 1] = E.y,
                        w[l + 2] = w[o + l + 2] = E.z
                }
            }
            function yn(e, t) {
                pt.call(this),
                this.type = "ShapeGeometry",
                "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
                t = t.curveSegments),
                this.parameters = {
                    shapes: e,
                    curveSegments: t
                },
                this.fromBufferGeometry(new _n(e,t)),
                this.mergeVertices()
            }
            function _n(e, t) {
                function i(e) {
                    var i, s, c, h = r.length / 3, u = e.extractPoints(t), d = u.shape, p = u.holes;
                    if (Qh.isClockWise(d) === !1)
                        for (d = d.reverse(),
                        i = 0,
                        s = p.length; s > i; i++)
                            c = p[i],
                            Qh.isClockWise(c) === !0 && (p[i] = c.reverse());
                    var f = Qh.triangulateShape(d, p);
                    for (i = 0,
                    s = p.length; s > i; i++)
                        c = p[i],
                        d = d.concat(c);
                    for (i = 0,
                    s = d.length; s > i; i++) {
                        var m = d[i];
                        r.push(m.x, m.y, 0),
                        a.push(0, 0, 1),
                        o.push(m.x, m.y)
                    }
                    for (i = 0,
                    s = f.length; s > i; i++) {
                        var v = f[i]
                          , g = v[0] + h
                          , y = v[1] + h
                          , _ = v[2] + h;
                        n.push(g, y, _),
                        l += 3
                    }
                }
                St.call(this),
                this.type = "ShapeBufferGeometry",
                this.parameters = {
                    shapes: e,
                    curveSegments: t
                },
                t = t || 12;
                var n = []
                  , r = []
                  , a = []
                  , o = []
                  , s = 0
                  , l = 0;
                if (Array.isArray(e) === !1)
                    i(e);
                else
                    for (var c = 0; c < e.length; c++)
                        i(e[c]),
                        this.addGroup(s, l, c),
                        s += l,
                        l = 0;
                this.setIndex(n),
                this.addAttribute("position", new wt(r,3)),
                this.addAttribute("normal", new wt(a,3)),
                this.addAttribute("uv", new wt(o,2))
            }
            function xn(e, t) {
                St.call(this),
                this.type = "EdgesGeometry",
                this.parameters = {
                    thresholdAngle: t
                },
                t = void 0 !== t ? t : 1;
                var i, n, r, a, o = [], s = Math.cos(Ll.DEG2RAD * t), l = [0, 0], c = {}, h = ["a", "b", "c"];
                e.isBufferGeometry ? (a = new pt,
                a.fromBufferGeometry(e)) : a = e.clone(),
                a.mergeVertices(),
                a.computeFaceNormals();
                for (var u = a.vertices, d = a.faces, p = 0, f = d.length; f > p; p++)
                    for (var m = d[p], v = 0; 3 > v; v++)
                        i = m[h[v]],
                        n = m[h[(v + 1) % 3]],
                        l[0] = Math.min(i, n),
                        l[1] = Math.max(i, n),
                        r = l[0] + "," + l[1],
                        void 0 === c[r] ? c[r] = {
                            index1: l[0],
                            index2: l[1],
                            face1: p,
                            face2: void 0
                        } : c[r].face2 = p;
                for (r in c) {
                    var g = c[r];
                    if (void 0 === g.face2 || d[g.face1].normal.dot(d[g.face2].normal) <= s) {
                        var y = u[g.index1];
                        o.push(y.x, y.y, y.z),
                        y = u[g.index2],
                        o.push(y.x, y.y, y.z)
                    }
                }
                this.addAttribute("position", new wt(o,3))
            }
            function bn(e, t, i, n, r, a, o, s) {
                pt.call(this),
                this.type = "CylinderGeometry",
                this.parameters = {
                    radiusTop: e,
                    radiusBottom: t,
                    height: i,
                    radialSegments: n,
                    heightSegments: r,
                    openEnded: a,
                    thetaStart: o,
                    thetaLength: s
                },
                this.fromBufferGeometry(new wn(e,t,i,n,r,a,o,s)),
                this.mergeVertices()
            }
            function wn(e, t, n, r, o, s, l, c) {
                function h() {
                    var i, s, h = new a, u = new a, b = 0, w = (t - e) / n;
                    for (s = 0; o >= s; s++) {
                        var T = []
                          , M = s / o
                          , E = M * (t - e) + e;
                        for (i = 0; r >= i; i++) {
                            var S = i / r
                              , A = S * c + l
                              , P = Math.sin(A)
                              , C = Math.cos(A);
                            u.x = E * P,
                            u.y = -M * n + _,
                            u.z = E * C,
                            f.push(u.x, u.y, u.z),
                            h.set(P, w, C).normalize(),
                            m.push(h.x, h.y, h.z),
                            v.push(S, 1 - M),
                            T.push(g++)
                        }
                        y.push(T)
                    }
                    for (i = 0; r > i; i++)
                        for (s = 0; o > s; s++) {
                            var L = y[s][i]
                              , R = y[s + 1][i]
                              , O = y[s + 1][i + 1]
                              , I = y[s][i + 1];
                            p.push(L, R, I),
                            p.push(R, O, I),
                            b += 6
                        }
                    d.addGroup(x, b, 0),
                    x += b
                }
                function u(n) {
                    var o, s, h, u = new i, y = new a, b = 0, w = n === !0 ? e : t, T = n === !0 ? 1 : -1;
                    for (s = g,
                    o = 1; r >= o; o++)
                        f.push(0, _ * T, 0),
                        m.push(0, T, 0),
                        v.push(.5, .5),
                        g++;
                    for (h = g,
                    o = 0; r >= o; o++) {
                        var M = o / r
                          , E = M * c + l
                          , S = Math.cos(E)
                          , A = Math.sin(E);
                        y.x = w * A,
                        y.y = _ * T,
                        y.z = w * S,
                        f.push(y.x, y.y, y.z),
                        m.push(0, T, 0),
                        u.x = .5 * S + .5,
                        u.y = .5 * A * T + .5,
                        v.push(u.x, u.y),
                        g++
                    }
                    for (o = 0; r > o; o++) {
                        var P = s + o
                          , C = h + o;
                        n === !0 ? p.push(C, C + 1, P) : p.push(C + 1, C, P),
                        b += 3
                    }
                    d.addGroup(x, b, n === !0 ? 1 : 2),
                    x += b
                }
                St.call(this),
                this.type = "CylinderBufferGeometry",
                this.parameters = {
                    radiusTop: e,
                    radiusBottom: t,
                    height: n,
                    radialSegments: r,
                    heightSegments: o,
                    openEnded: s,
                    thetaStart: l,
                    thetaLength: c
                };
                var d = this;
                e = void 0 !== e ? e : 1,
                t = void 0 !== t ? t : 1,
                n = n || 1,
                r = Math.floor(r) || 8,
                o = Math.floor(o) || 1,
                s = void 0 !== s ? s : !1,
                l = void 0 !== l ? l : 0,
                c = void 0 !== c ? c : 2 * Math.PI;
                var p = []
                  , f = []
                  , m = []
                  , v = []
                  , g = 0
                  , y = []
                  , _ = n / 2
                  , x = 0;
                h(),
                s === !1 && (e > 0 && u(!0),
                t > 0 && u(!1)),
                this.setIndex(p),
                this.addAttribute("position", new wt(f,3)),
                this.addAttribute("normal", new wt(m,3)),
                this.addAttribute("uv", new wt(v,2))
            }
            function Tn(e, t, i, n, r, a, o) {
                bn.call(this, 0, e, t, i, n, r, a, o),
                this.type = "ConeGeometry",
                this.parameters = {
                    radius: e,
                    height: t,
                    radialSegments: i,
                    heightSegments: n,
                    openEnded: r,
                    thetaStart: a,
                    thetaLength: o
                }
            }
            function Mn(e, t, i, n, r, a, o) {
                wn.call(this, 0, e, t, i, n, r, a, o),
                this.type = "ConeBufferGeometry",
                this.parameters = {
                    radius: e,
                    height: t,
                    radialSegments: i,
                    heightSegments: n,
                    openEnded: r,
                    thetaStart: a,
                    thetaLength: o
                }
            }
            function En(e, t, i, n) {
                pt.call(this),
                this.type = "CircleGeometry",
                this.parameters = {
                    radius: e,
                    segments: t,
                    thetaStart: i,
                    thetaLength: n
                },
                this.fromBufferGeometry(new Sn(e,t,i,n)),
                this.mergeVertices()
            }
            function Sn(e, t, n, r) {
                St.call(this),
                this.type = "CircleBufferGeometry",
                this.parameters = {
                    radius: e,
                    segments: t,
                    thetaStart: n,
                    thetaLength: r
                },
                e = e || 1,
                t = void 0 !== t ? Math.max(3, t) : 8,
                n = void 0 !== n ? n : 0,
                r = void 0 !== r ? r : 2 * Math.PI;
                var o, s, l = [], c = [], h = [], u = [], d = new a, p = new i;
                for (c.push(0, 0, 0),
                h.push(0, 0, 1),
                u.push(.5, .5),
                s = 0,
                o = 3; t >= s; s++,
                o += 3) {
                    var f = n + s / t * r;
                    d.x = e * Math.cos(f),
                    d.y = e * Math.sin(f),
                    c.push(d.x, d.y, d.z),
                    h.push(0, 0, 1),
                    p.x = (c[o] / e + 1) / 2,
                    p.y = (c[o + 1] / e + 1) / 2,
                    u.push(p.x, p.y)
                }
                for (o = 1; t >= o; o++)
                    l.push(o, o + 1, 0);
                this.setIndex(l),
                this.addAttribute("position", new wt(c,3)),
                this.addAttribute("normal", new wt(h,3)),
                this.addAttribute("uv", new wt(u,2))
            }
            function An(e) {
                K.call(this),
                this.type = "ShadowMaterial",
                this.color = new Y(0),
                this.opacity = 1,
                this.lights = !0,
                this.transparent = !0,
                this.setValues(e)
            }
            function Pn(e) {
                Ot.call(this, e),
                this.type = "RawShaderMaterial"
            }
            function Cn(e) {
                K.call(this),
                this.defines = {
                    STANDARD: ""
                },
                this.type = "MeshStandardMaterial",
                this.color = new Y(16777215),
                this.roughness = .5,
                this.metalness = .5,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new Y(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new i(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.roughnessMap = null,
                this.metalnessMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.envMapIntensity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function Ln(e) {
                Cn.call(this),
                this.defines = {
                    PHYSICAL: ""
                },
                this.type = "MeshPhysicalMaterial",
                this.reflectivity = .5,
                this.clearCoat = 0,
                this.clearCoatRoughness = 0,
                this.setValues(e)
            }
            function Rn(e) {
                K.call(this),
                this.type = "MeshPhongMaterial",
                this.color = new Y(16777215),
                this.specular = new Y(1118481),
                this.shininess = 30,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new Y(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new i(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = ls,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function On(e) {
                Rn.call(this),
                this.defines = {
                    TOON: ""
                },
                this.type = "MeshToonMaterial",
                this.gradientMap = null,
                this.setValues(e)
            }
            function In(e) {
                K.call(this),
                this.type = "MeshNormalMaterial",
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new i(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function Dn(e) {
                K.call(this),
                this.type = "MeshLambertMaterial",
                this.color = new Y(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new Y(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = ls,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(e)
            }
            function Un(e) {
                Oi.call(this),
                this.type = "LineDashedMaterial",
                this.scale = 1,
                this.dashSize = 3,
                this.gapSize = 1,
                this.setValues(e)
            }
            function Fn(e, t, i) {
                var n = this
                  , r = !1
                  , a = 0
                  , o = 0
                  , s = void 0;
                this.onStart = void 0,
                this.onLoad = e,
                this.onProgress = t,
                this.onError = i,
                this.itemStart = function(e) {
                    o++,
                    r === !1 && void 0 !== n.onStart && n.onStart(e, a, o),
                    r = !0
                }
                ,
                this.itemEnd = function(e) {
                    a++,
                    void 0 !== n.onProgress && n.onProgress(e, a, o),
                    a === o && (r = !1,
                    void 0 !== n.onLoad && n.onLoad())
                }
                ,
                this.itemError = function(e) {
                    void 0 !== n.onError && n.onError(e)
                }
                ,
                this.resolveURL = function(e) {
                    return s ? s(e) : e
                }
                ,
                this.setURLModifier = function(e) {
                    s = e
                }
            }
            function kn(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function Nn(e) {
                this.manager = void 0 !== e ? e : eu,
                this._parser = null
            }
            function zn(e) {
                this.manager = void 0 !== e ? e : eu,
                this._parser = null
            }
            function Bn(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function Gn(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function Hn(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function jn(e, t) {
                ct.call(this),
                this.type = "Light",
                this.color = new Y(e),
                this.intensity = void 0 !== t ? t : 1,
                this.receiveShadow = void 0
            }
            function Vn(e, t, i) {
                jn.call(this, e, i),
                this.type = "HemisphereLight",
                this.castShadow = void 0,
                this.position.copy(ct.DefaultUp),
                this.updateMatrix(),
                this.groundColor = new Y(t)
            }
            function Wn(e) {
                this.camera = e,
                this.bias = 0,
                this.radius = 1,
                this.mapSize = new i(512,512),
                this.map = null,
                this.matrix = new n
            }
            function Xn() {
                Wn.call(this, new mi(50,1,.5,500))
            }
            function Yn(e, t, i, n, r, a) {
                jn.call(this, e, t),
                this.type = "SpotLight",
                this.position.copy(ct.DefaultUp),
                this.updateMatrix(),
                this.target = new ct,
                Object.defineProperty(this, "power", {
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / Math.PI
                    }
                }),
                this.distance = void 0 !== i ? i : 0,
                this.angle = void 0 !== n ? n : Math.PI / 3,
                this.penumbra = void 0 !== r ? r : 0,
                this.decay = void 0 !== a ? a : 1,
                this.shadow = new Xn
            }
            function qn(e, t, i, n) {
                jn.call(this, e, t),
                this.type = "PointLight",
                Object.defineProperty(this, "power", {
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / (4 * Math.PI)
                    }
                }),
                this.distance = void 0 !== i ? i : 0,
                this.decay = void 0 !== n ? n : 1,
                this.shadow = new Wn(new mi(90,1,.5,500))
            }
            function Zn() {
                Wn.call(this, new ut(-5,5,5,-5,.5,500))
            }
            function Qn(e, t) {
                jn.call(this, e, t),
                this.type = "DirectionalLight",
                this.position.copy(ct.DefaultUp),
                this.updateMatrix(),
                this.target = new ct,
                this.shadow = new Zn
            }
            function Jn(e, t) {
                jn.call(this, e, t),
                this.type = "AmbientLight",
                this.castShadow = void 0
            }
            function Kn(e, t, i, n) {
                jn.call(this, e, t),
                this.type = "RectAreaLight",
                this.position.set(0, 1, 0),
                this.updateMatrix(),
                this.width = void 0 !== i ? i : 10,
                this.height = void 0 !== n ? n : 10
            }
            function $n(e, t, i, n) {
                this.parameterPositions = e,
                this._cachedIndex = 0,
                this.resultBuffer = void 0 !== n ? n : new t.constructor(i),
                this.sampleValues = t,
                this.valueSize = i
            }
            function er(e, t, i, n) {
                $n.call(this, e, t, i, n),
                this._weightPrev = -0,
                this._offsetPrev = -0,
                this._weightNext = -0,
                this._offsetNext = -0
            }
            function tr(e, t, i, n) {
                $n.call(this, e, t, i, n)
            }
            function ir(e, t, i, n) {
                $n.call(this, e, t, i, n)
            }
            function nr(e, t, i, n) {
                if (void 0 === e)
                    throw new Error("track name is undefined");
                if (void 0 === t || 0 === t.length)
                    throw new Error("no keyframes in track named " + e);
                this.name = e,
                this.times = iu.convertArray(t, this.TimeBufferType),
                this.values = iu.convertArray(i, this.ValueBufferType),
                this.setInterpolation(n || this.DefaultInterpolation),
                this.validate(),
                this.optimize()
            }
            function rr(e, t, i, n) {
                nr.call(this, e, t, i, n)
            }
            function ar(e, t, i, n) {
                $n.call(this, e, t, i, n)
            }
            function or(e, t, i, n) {
                nr.call(this, e, t, i, n)
            }
            function sr(e, t, i, n) {
                nr.call(this, e, t, i, n)
            }
            function lr(e, t, i, n) {
                nr.call(this, e, t, i, n)
            }
            function cr(e, t, i) {
                nr.call(this, e, t, i)
            }
            function hr(e, t, i, n) {
                nr.call(this, e, t, i, n)
            }
            function ur(e, t, i, n) {
                nr.apply(this, e, t, i, n)
            }
            function dr(e, t, i) {
                this.name = e,
                this.tracks = i,
                this.duration = void 0 !== t ? t : -1,
                this.uuid = Ll.generateUUID(),
                this.duration < 0 && this.resetDuration(),
                this.optimize()
            }
            function pr(e) {
                this.manager = void 0 !== e ? e : eu,
                this.textures = {}
            }
            function fr(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function mr() {
                this.onLoadStart = function() {}
                ,
                this.onLoadProgress = function() {}
                ,
                this.onLoadComplete = function() {}
            }
            function vr(e) {
                "boolean" == typeof e && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),
                e = void 0),
                this.manager = void 0 !== e ? e : eu,
                this.withCredentials = !1
            }
            function gr(e) {
                this.manager = void 0 !== e ? e : eu,
                this.texturePath = ""
            }
            function yr(e, t, i, n, r) {
                var a = .5 * (n - t)
                  , o = .5 * (r - i)
                  , s = e * e
                  , l = e * s;
                return (2 * i - 2 * n + a + o) * l + (-3 * i + 3 * n - 2 * a - o) * s + a * e + i
            }
            function _r(e, t) {
                var i = 1 - e;
                return i * i * t
            }
            function xr(e, t) {
                return 2 * (1 - e) * e * t
            }
            function br(e, t) {
                return e * e * t
            }
            function wr(e, t, i, n) {
                return _r(e, t) + xr(e, i) + br(e, n)
            }
            function Tr(e, t) {
                var i = 1 - e;
                return i * i * i * t
            }
            function Mr(e, t) {
                var i = 1 - e;
                return 3 * i * i * e * t
            }
            function Er(e, t) {
                return 3 * (1 - e) * e * e * t
            }
            function Sr(e, t) {
                return e * e * e * t
            }
            function Ar(e, t, i, n, r) {
                return Tr(e, t) + Mr(e, i) + Er(e, n) + Sr(e, r)
            }
            function Pr() {
                this.type = "Curve",
                this.arcLengthDivisions = 200
            }
            function Cr(e, t) {
                Pr.call(this),
                this.type = "LineCurve",
                this.v1 = e || new i,
                this.v2 = t || new i
            }
            function Lr() {
                Pr.call(this),
                this.type = "CurvePath",
                this.curves = [],
                this.autoClose = !1
            }
            function Rr(e, t, i, n, r, a, o, s) {
                Pr.call(this),
                this.type = "EllipseCurve",
                this.aX = e || 0,
                this.aY = t || 0,
                this.xRadius = i || 1,
                this.yRadius = n || 1,
                this.aStartAngle = r || 0,
                this.aEndAngle = a || 2 * Math.PI,
                this.aClockwise = o || !1,
                this.aRotation = s || 0
            }
            function Or(e) {
                Pr.call(this),
                this.type = "SplineCurve",
                this.points = e || []
            }
            function Ir(e, t, n, r) {
                Pr.call(this),
                this.type = "CubicBezierCurve",
                this.v0 = e || new i,
                this.v1 = t || new i,
                this.v2 = n || new i,
                this.v3 = r || new i
            }
            function Dr(e, t, n) {
                Pr.call(this),
                this.type = "QuadraticBezierCurve",
                this.v0 = e || new i,
                this.v1 = t || new i,
                this.v2 = n || new i
            }
            function Ur(e) {
                Lr.call(this),
                this.type = "Path",
                this.currentPoint = new i,
                e && this.setFromPoints(e)
            }
            function Fr(e) {
                Ur.call(this, e),
                this.type = "Shape",
                this.holes = []
            }
            function kr() {
                this.type = "ShapePath",
                this.subPaths = [],
                this.currentPath = null
            }
            function Nr(e) {
                this.type = "Font",
                this.data = e
            }
            function zr(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function Br(e) {
                this.manager = void 0 !== e ? e : eu
            }
            function Gr() {
                this.type = "StereoCamera",
                this.aspect = 1,
                this.eyeSep = .064,
                this.cameraL = new mi,
                this.cameraL.layers.enable(1),
                this.cameraL.matrixAutoUpdate = !1,
                this.cameraR = new mi,
                this.cameraR.layers.enable(2),
                this.cameraR.matrixAutoUpdate = !1
            }
            function Hr(e, t, i) {
                ct.call(this),
                this.type = "CubeCamera";
                var n = 90
                  , r = 1
                  , o = new mi(n,r,e,t);
                o.up.set(0, -1, 0),
                o.lookAt(new a(1,0,0)),
                this.add(o);
                var s = new mi(n,r,e,t);
                s.up.set(0, -1, 0),
                s.lookAt(new a(-1,0,0)),
                this.add(s);
                var l = new mi(n,r,e,t);
                l.up.set(0, 0, 1),
                l.lookAt(new a(0,1,0)),
                this.add(l);
                var c = new mi(n,r,e,t);
                c.up.set(0, 0, -1),
                c.lookAt(new a(0,-1,0)),
                this.add(c);
                var u = new mi(n,r,e,t);
                u.up.set(0, -1, 0),
                u.lookAt(new a(0,0,1)),
                this.add(u);
                var d = new mi(n,r,e,t);
                d.up.set(0, -1, 0),
                d.lookAt(new a(0,0,-1)),
                this.add(d);
                var p = {
                    format: Xs,
                    magFilter: Ls,
                    minFilter: Ls
                };
                this.renderTarget = new h(i,i,p),
                this.renderTarget.texture.name = "CubeCamera",
                this.update = function(e, t) {
                    null === this.parent && this.updateMatrixWorld();
                    var i = this.renderTarget
                      , n = i.texture.generateMipmaps;
                    i.texture.generateMipmaps = !1,
                    i.activeCubeFace = 0,
                    e.render(t, o, i),
                    i.activeCubeFace = 1,
                    e.render(t, s, i),
                    i.activeCubeFace = 2,
                    e.render(t, l, i),
                    i.activeCubeFace = 3,
                    e.render(t, c, i),
                    i.activeCubeFace = 4,
                    e.render(t, u, i),
                    i.texture.generateMipmaps = n,
                    i.activeCubeFace = 5,
                    e.render(t, d, i),
                    e.setRenderTarget(null)
                }
                ,
                this.clear = function(e, t, i, n) {
                    for (var r = this.renderTarget, a = 0; 6 > a; a++)
                        r.activeCubeFace = a,
                        e.setRenderTarget(r),
                        e.clear(t, i, n);
                    e.setRenderTarget(null)
                }
            }
            function jr() {
                ct.call(this),
                this.type = "AudioListener",
                this.context = hu.getContext(),
                this.gain = this.context.createGain(),
                this.gain.connect(this.context.destination),
                this.filter = null
            }
            function Vr(e) {
                ct.call(this),
                this.type = "Audio",
                this.context = e.context,
                this.gain = this.context.createGain(),
                this.gain.connect(e.getInput()),
                this.autoplay = !1,
                this.buffer = null,
                this.loop = !1,
                this.startTime = 0,
                this.offset = 0,
                this.playbackRate = 1,
                this.isPlaying = !1,
                this.hasPlaybackControl = !0,
                this.sourceType = "empty",
                this.filters = []
            }
            function Wr(e) {
                Vr.call(this, e),
                this.panner = this.context.createPanner(),
                this.panner.connect(this.gain)
            }
            function Xr(e, t) {
                this.analyser = e.context.createAnalyser(),
                this.analyser.fftSize = void 0 !== t ? t : 2048,
                this.data = new Uint8Array(this.analyser.frequencyBinCount),
                e.getOutput().connect(this.analyser)
            }
            function Yr(e, t, i) {
                this.binding = e,
                this.valueSize = i;
                var n, r = Float64Array;
                switch (t) {
                case "quaternion":
                    n = this._slerp;
                    break;
                case "string":
                case "bool":
                    r = Array,
                    n = this._select;
                    break;
                default:
                    n = this._lerp
                }
                this.buffer = new r(4 * i),
                this._mixBufferRegion = n,
                this.cumulativeWeight = 0,
                this.useCount = 0,
                this.referenceCount = 0
            }
            function qr(e, t, i) {
                var n = i || Zr.parseTrackName(t);
                this._targetGroup = e,
                this._bindings = e.subscribe_(t, n)
            }
            function Zr(e, t, i) {
                this.path = t,
                this.parsedPath = i || Zr.parseTrackName(t),
                this.node = Zr.findNode(e, this.parsedPath.nodeName) || e,
                this.rootNode = e
            }
            function Qr() {
                this.uuid = Ll.generateUUID(),
                this._objects = Array.prototype.slice.call(arguments),
                this.nCachedObjects_ = 0;
                var e = {};
                this._indicesByUUID = e;
                for (var t = 0, i = arguments.length; t !== i; ++t)
                    e[arguments[t].uuid] = t;
                this._paths = [],
                this._parsedPaths = [],
                this._bindings = [],
                this._bindingsIndicesByPath = {};
                var n = this;
                this.stats = {
                    objects: {
                        get total() {
                            return n._objects.length
                        },
                        get inUse() {
                            return this.total - n.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return n._bindings.length
                    }
                }
            }
            function Jr(e, t, i) {
                this._mixer = e,
                this._clip = t,
                this._localRoot = i || null;
                for (var n = t.tracks, r = n.length, a = new Array(r), o = {
                    endingStart: fl,
                    endingEnd: fl
                }, s = 0; s !== r; ++s) {
                    var l = n[s].createInterpolant(null);
                    a[s] = l,
                    l.settings = o
                }
                this._interpolantSettings = o,
                this._interpolants = a,
                this._propertyBindings = new Array(r),
                this._cacheIndex = null,
                this._byClipCacheIndex = null,
                this._timeScaleInterpolant = null,
                this._weightInterpolant = null,
                this.loop = cl,
                this._loopCount = -1,
                this._startTime = null,
                this.time = 0,
                this.timeScale = 1,
                this._effectiveTimeScale = 1,
                this.weight = 1,
                this._effectiveWeight = 1,
                this.repetitions = 1 / 0,
                this.paused = !1,
                this.enabled = !0,
                this.clampWhenFinished = !1,
                this.zeroSlopeAtStart = !0,
                this.zeroSlopeAtEnd = !0
            }
            function Kr(e) {
                this._root = e,
                this._initMemoryManager(),
                this._accuIndex = 0,
                this.time = 0,
                this.timeScale = 1
            }
            function $r(e) {
                "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
                e = arguments[1]),
                this.value = e
            }
            function ea() {
                St.call(this),
                this.type = "InstancedBufferGeometry",
                this.maxInstancedCount = void 0
            }
            function ta(e, t, i, n) {
                this.uuid = Ll.generateUUID(),
                this.data = e,
                this.itemSize = t,
                this.offset = i,
                this.normalized = n === !0
            }
            function ia(e, t) {
                this.uuid = Ll.generateUUID(),
                this.array = e,
                this.stride = t,
                this.count = void 0 !== e ? e.length / t : 0,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function na(e, t, i) {
                ia.call(this, e, t),
                this.meshPerAttribute = i || 1
            }
            function ra(e, t, i) {
                ft.call(this, e, t),
                this.meshPerAttribute = i || 1
            }
            function aa(e, t, i, n) {
                this.ray = new It(e,t),
                this.near = i || 0,
                this.far = n || 1 / 0,
                this.params = {
                    Mesh: {},
                    Line: {},
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function() {
                            return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                            this.Points
                        }
                    }
                })
            }
            function oa(e, t) {
                return e.distance - t.distance
            }
            function sa(e, t, i, n) {
                if (e.visible !== !1 && (e.raycast(t, i),
                n === !0))
                    for (var r = e.children, a = 0, o = r.length; o > a; a++)
                        sa(r[a], t, i, !0)
            }
            function la(e) {
                this.autoStart = void 0 !== e ? e : !0,
                this.startTime = 0,
                this.oldTime = 0,
                this.elapsedTime = 0,
                this.running = !1
            }
            function ca(e, t, i) {
                return this.radius = void 0 !== e ? e : 1,
                this.phi = void 0 !== t ? t : 0,
                this.theta = void 0 !== i ? i : 0,
                this
            }
            function ha(e, t, i) {
                return this.radius = void 0 !== e ? e : 1,
                this.theta = void 0 !== t ? t : 0,
                this.y = void 0 !== i ? i : 0,
                this
            }
            function ua(e) {
                ct.call(this),
                this.material = e,
                this.render = function() {}
            }
            function da(e, t, i, n) {
                this.object = e,
                this.size = void 0 !== t ? t : 1;
                var r = void 0 !== i ? i : 16711680
                  , a = void 0 !== n ? n : 1
                  , o = 0
                  , s = this.object.geometry;
                s && s.isGeometry ? o = 3 * s.faces.length : s && s.isBufferGeometry && (o = s.attributes.normal.count);
                var l = new St
                  , c = new wt(2 * o * 3,3);
                l.addAttribute("position", c),
                Di.call(this, l, new Oi({
                    color: r,
                    linewidth: a
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function pa(e, t) {
                ct.call(this),
                this.light = e,
                this.light.updateMatrixWorld(),
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = t;
                for (var i = new St, n = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], r = 0, a = 1, o = 32; o > r; r++,
                a++) {
                    var s = r / o * Math.PI * 2
                      , l = a / o * Math.PI * 2;
                    n.push(Math.cos(s), Math.sin(s), 1, Math.cos(l), Math.sin(l), 1)
                }
                i.addAttribute("position", new wt(n,3));
                var c = new Oi({
                    fog: !1
                });
                this.cone = new Di(i,c),
                this.add(this.cone),
                this.update()
            }
            function fa(e) {
                var t = [];
                e && e.isBone && t.push(e);
                for (var i = 0; i < e.children.length; i++)
                    t.push.apply(t, fa(e.children[i]));
                return t
            }
            function ma(e) {
                for (var t = fa(e), i = new St, n = [], r = [], a = new Y(0,0,1), o = new Y(0,1,0), s = 0; s < t.length; s++) {
                    var l = t[s];
                    l.parent && l.parent.isBone && (n.push(0, 0, 0),
                    n.push(0, 0, 0),
                    r.push(a.r, a.g, a.b),
                    r.push(o.r, o.g, o.b))
                }
                i.addAttribute("position", new wt(n,3)),
                i.addAttribute("color", new wt(r,3));
                var c = new Oi({
                    vertexColors: Ro,
                    depthTest: !1,
                    depthWrite: !1,
                    transparent: !0
                });
                Di.call(this, i, c),
                this.root = e,
                this.bones = t,
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1
            }
            function va(e, t, i) {
                this.light = e,
                this.light.updateMatrixWorld(),
                this.color = i;
                var n = new pn(t,4,2)
                  , r = new Rt({
                    wireframe: !0,
                    fog: !1
                });
                Ft.call(this, n, r),
                this.matrix = this.light.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function ga(e, t) {
                ct.call(this),
                this.light = e,
                this.light.updateMatrixWorld(),
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = t;
                var i = new Oi({
                    fog: !1
                })
                  , n = new St;
                n.addAttribute("position", new ft(new Float32Array(15),3)),
                this.line = new Ii(n,i),
                this.add(this.line),
                this.update()
            }
            function ya(e, t, i) {
                ct.call(this),
                this.light = e,
                this.light.updateMatrixWorld(),
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = i;
                var n = new Qi(t);
                n.rotateY(.5 * Math.PI),
                this.material = new Rt({
                    wireframe: !0,
                    fog: !1
                }),
                void 0 === this.color && (this.material.vertexColors = Ro);
                var r = n.getAttribute("position")
                  , a = new Float32Array(3 * r.count);
                n.addAttribute("color", new ft(a,3)),
                this.add(new Ft(n,this.material)),
                this.update()
            }
            function _a(e, t, i, n) {
                e = e || 10,
                t = t || 10,
                i = new Y(void 0 !== i ? i : 4473924),
                n = new Y(void 0 !== n ? n : 8947848);
                for (var r = t / 2, a = e / t, o = e / 2, s = [], l = [], c = 0, h = 0, u = -o; t >= c; c++,
                u += a) {
                    s.push(-o, 0, u, o, 0, u),
                    s.push(u, 0, -o, u, 0, o);
                    var d = c === r ? i : n;
                    d.toArray(l, h),
                    h += 3,
                    d.toArray(l, h),
                    h += 3,
                    d.toArray(l, h),
                    h += 3,
                    d.toArray(l, h),
                    h += 3
                }
                var p = new St;
                p.addAttribute("position", new wt(s,3)),
                p.addAttribute("color", new wt(l,3));
                var f = new Oi({
                    vertexColors: Ro
                });
                Di.call(this, p, f)
            }
            function xa(e, t, i, n, r, a) {
                e = e || 10,
                t = t || 16,
                i = i || 8,
                n = n || 64,
                r = new Y(void 0 !== r ? r : 4473924),
                a = new Y(void 0 !== a ? a : 8947848);
                var o, s, l, c, h, u, d, p = [], f = [];
                for (c = 0; t >= c; c++)
                    l = c / t * 2 * Math.PI,
                    o = Math.sin(l) * e,
                    s = Math.cos(l) * e,
                    p.push(0, 0, 0),
                    p.push(o, 0, s),
                    d = 1 & c ? r : a,
                    f.push(d.r, d.g, d.b),
                    f.push(d.r, d.g, d.b);
                for (c = 0; i >= c; c++)
                    for (d = 1 & c ? r : a,
                    u = e - e / i * c,
                    h = 0; n > h; h++)
                        l = h / n * 2 * Math.PI,
                        o = Math.sin(l) * u,
                        s = Math.cos(l) * u,
                        p.push(o, 0, s),
                        f.push(d.r, d.g, d.b),
                        l = (h + 1) / n * 2 * Math.PI,
                        o = Math.sin(l) * u,
                        s = Math.cos(l) * u,
                        p.push(o, 0, s),
                        f.push(d.r, d.g, d.b);
                var m = new St;
                m.addAttribute("position", new wt(p,3)),
                m.addAttribute("color", new wt(f,3));
                var v = new Oi({
                    vertexColors: Ro
                });
                Di.call(this, m, v)
            }
            function ba(e, t, i, n) {
                this.object = e,
                this.size = void 0 !== t ? t : 1;
                var r = void 0 !== i ? i : 16776960
                  , a = void 0 !== n ? n : 1
                  , o = 0
                  , s = this.object.geometry;
                s && s.isGeometry ? o = s.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");
                var l = new St
                  , c = new wt(2 * o * 3,3);
                l.addAttribute("position", c),
                Di.call(this, l, new Oi({
                    color: r,
                    linewidth: a
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function wa(e, t, i) {
                ct.call(this),
                this.light = e,
                this.light.updateMatrixWorld(),
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.color = i,
                void 0 === t && (t = 1);
                var n = new St;
                n.addAttribute("position", new wt([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0],3));
                var r = new Oi({
                    fog: !1
                });
                this.lightPlane = new Ii(n,r),
                this.add(this.lightPlane),
                n = new St,
                n.addAttribute("position", new wt([0, 0, 0, 0, 0, 1],3)),
                this.targetLine = new Ii(n,r),
                this.add(this.targetLine),
                this.update()
            }
            function Ta(e) {
                function t(e, t, n) {
                    i(e, n),
                    i(t, n)
                }
                function i(e, t) {
                    a.push(0, 0, 0),
                    o.push(t.r, t.g, t.b),
                    void 0 === s[e] && (s[e] = []),
                    s[e].push(a.length / 3 - 1)
                }
                var n = new St
                  , r = new Oi({
                    color: 16777215,
                    vertexColors: Lo
                })
                  , a = []
                  , o = []
                  , s = {}
                  , l = new Y(16755200)
                  , c = new Y(16711680)
                  , h = new Y(43775)
                  , u = new Y(16777215)
                  , d = new Y(3355443);
                t("n1", "n2", l),
                t("n2", "n4", l),
                t("n4", "n3", l),
                t("n3", "n1", l),
                t("f1", "f2", l),
                t("f2", "f4", l),
                t("f4", "f3", l),
                t("f3", "f1", l),
                t("n1", "f1", l),
                t("n2", "f2", l),
                t("n3", "f3", l),
                t("n4", "f4", l),
                t("p", "n1", c),
                t("p", "n2", c),
                t("p", "n3", c),
                t("p", "n4", c),
                t("u1", "u2", h),
                t("u2", "u3", h),
                t("u3", "u1", h),
                t("c", "t", u),
                t("p", "c", d),
                t("cn1", "cn2", d),
                t("cn3", "cn4", d),
                t("cf1", "cf2", d),
                t("cf3", "cf4", d),
                n.addAttribute("position", new wt(a,3)),
                n.addAttribute("color", new wt(o,3)),
                Di.call(this, n, r),
                this.camera = e,
                this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                this.matrix = e.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.pointMap = s,
                this.update()
            }
            function Ma(e, t) {
                this.object = e,
                void 0 === t && (t = 16776960);
                var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
                  , n = new Float32Array(24)
                  , r = new St;
                r.setIndex(new ft(i,1)),
                r.addAttribute("position", new ft(n,3)),
                Di.call(this, r, new Oi({
                    color: t
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function Ea(e, t) {
                this.type = "Box3Helper",
                this.box = e;
                var i = void 0 !== t ? t : 16776960
                  , n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
                  , r = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1]
                  , a = new St;
                a.setIndex(new ft(n,1)),
                a.addAttribute("position", new wt(r,3)),
                Di.call(this, a, new Oi({
                    color: i
                })),
                this.geometry.computeBoundingSphere()
            }
            function Sa(e, t, i) {
                this.type = "PlaneHelper",
                this.plane = e,
                this.size = void 0 === t ? 1 : t;
                var n = void 0 !== i ? i : 16776960
                  , r = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0]
                  , a = new St;
                a.addAttribute("position", new wt(r,3)),
                a.computeBoundingSphere(),
                Ii.call(this, a, new Oi({
                    color: n
                }));
                var o = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1]
                  , s = new St;
                s.addAttribute("position", new wt(o,3)),
                s.computeBoundingSphere(),
                this.add(new Ft(s,new Rt({
                    color: n,
                    opacity: .2,
                    transparent: !0,
                    depthWrite: !1
                })))
            }
            function Aa(e, t, i, n, r, a) {
                ct.call(this),
                void 0 === n && (n = 16776960),
                void 0 === i && (i = 1),
                void 0 === r && (r = .2 * i),
                void 0 === a && (a = .2 * r),
                void 0 === uu && (uu = new St,
                uu.addAttribute("position", new wt([0, 0, 0, 0, 1, 0],3)),
                du = new wn(0,.5,1,5,1),
                du.translate(0, -.5, 0)),
                this.position.copy(t),
                this.line = new Ii(uu,new Oi({
                    color: n
                })),
                this.line.matrixAutoUpdate = !1,
                this.add(this.line),
                this.cone = new Ft(du,new Rt({
                    color: n
                })),
                this.cone.matrixAutoUpdate = !1,
                this.add(this.cone),
                this.setDirection(e),
                this.setLength(i, r, a)
            }
            function Pa(e) {
                e = e || 1;
                var t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e]
                  , i = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
                  , n = new St;
                n.addAttribute("position", new wt(t,3)),
                n.addAttribute("color", new wt(i,3));
                var r = new Oi({
                    vertexColors: Ro
                });
                Di.call(this, n, r)
            }
            function Ca() {
                function e(e, a, o, s) {
                    t = e,
                    i = o,
                    n = -3 * e + 3 * a - 2 * o - s,
                    r = 2 * e - 2 * a + o + s
                }
                var t = 0
                  , i = 0
                  , n = 0
                  , r = 0;
                return {
                    initCatmullRom: function(t, i, n, r, a) {
                        e(i, n, a * (n - t), a * (r - i))
                    },
                    initNonuniformCatmullRom: function(t, i, n, r, a, o, s) {
                        var l = (i - t) / a - (n - t) / (a + o) + (n - i) / o
                          , c = (n - i) / o - (r - i) / (o + s) + (r - n) / s;
                        l *= o,
                        c *= o,
                        e(i, n, l, c)
                    },
                    calc: function(e) {
                        var a = e * e
                          , o = a * e;
                        return t + i * e + n * a + r * o
                    }
                }
            }
            function La(e, t, i, n) {
                Pr.call(this),
                this.type = "CatmullRomCurve3",
                this.points = e || [],
                this.closed = t || !1,
                this.curveType = i || "centripetal",
                this.tension = n || .5
            }
            function Ra(e, t, i, n) {
                Pr.call(this),
                this.type = "CubicBezierCurve3",
                this.v0 = e || new a,
                this.v1 = t || new a,
                this.v2 = i || new a,
                this.v3 = n || new a
            }
            function Oa(e, t, i) {
                Pr.call(this),
                this.type = "QuadraticBezierCurve3",
                this.v0 = e || new a,
                this.v1 = t || new a,
                this.v2 = i || new a
            }
            function Ia(e, t) {
                Pr.call(this),
                this.type = "LineCurve3",
                this.v1 = e || new a,
                this.v2 = t || new a
            }
            function Da(e, t, i, n, r, a) {
                Rr.call(this, e, t, i, i, n, r, a),
                this.type = "ArcCurve"
            }
            function Ua(e, t, i, n, r, a, o) {
                return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
                new dt(e,t,i,r,a,o)
            }
            function Fa(e) {
                return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
                e
            }
            function ka(e) {
                return void 0 === e && (e = []),
                console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
                e.isMultiMaterial = !0,
                e.materials = e,
                e.clone = function() {
                    return e.slice()
                }
                ,
                e
            }
            function Na(e, t) {
                return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
                new ki(e,t)
            }
            function za(e) {
                return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
                new Ai(e)
            }
            function Ba(e, t) {
                return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
                new ki(e,t)
            }
            function Ga(e) {
                return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
                new Fi(e)
            }
            function Ha(e) {
                return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
                new Fi(e)
            }
            function ja(e) {
                return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
                new Fi(e)
            }
            function Va(e, t, i) {
                return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
                new a(e,t,i)
            }
            function Wa(e, t) {
                return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),
                new ft(e,t).setDynamic(!0)
            }
            function Xa(e, t) {
                return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
                new mt(e,t)
            }
            function Ya(e, t) {
                return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
                new vt(e,t)
            }
            function qa(e, t) {
                return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
                new gt(e,t)
            }
            function Za(e, t) {
                return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
                new yt(e,t)
            }
            function Qa(e, t) {
                return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
                new _t(e,t)
            }
            function Ja(e, t) {
                return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
                new xt(e,t)
            }
            function Ka(e, t) {
                return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
                new bt(e,t)
            }
            function $a(e, t) {
                return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
                new wt(e,t)
            }
            function eo(e, t) {
                return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
                new Tt(e,t)
            }
            function to(e) {
                console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                La.call(this, e),
                this.type = "catmullrom",
                this.closed = !0
            }
            function io(e) {
                console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
                La.call(this, e),
                this.type = "catmullrom"
            }
            function no(e) {
                console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
                La.call(this, e),
                this.type = "catmullrom"
            }
            function ro(e) {
                return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),
                new Pa(e)
            }
            function ao(e, t) {
                return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
                new Ma(e,t)
            }
            function oo(e, t) {
                return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
                new Di(new xn(e.geometry),new Oi({
                    color: void 0 !== t ? t : 16777215
                }))
            }
            function so(e, t) {
                return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
                new Di(new Hi(e.geometry),new Oi({
                    color: void 0 !== t ? t : 16777215
                }))
            }
            function lo(e) {
                return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
                new kn(e)
            }
            function co(e) {
                return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
                new zn(e)
            }
            function ho() {
                console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),
                this.projectVector = function(e, t) {
                    console.warn("THREE.Projector: .projectVector() is now vector.project()."),
                    e.project(t)
                }
                ,
                this.unprojectVector = function(e, t) {
                    console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),
                    e.unproject(t)
                }
                ,
                this.pickingRay = function() {
                    console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
                }
            }
            function uo() {
                console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),
                this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                this.clear = function() {}
                ,
                this.render = function() {}
                ,
                this.setClearColor = function() {}
                ,
                this.setSize = function() {}
            }
            void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
            void 0 === Number.isInteger && (Number.isInteger = function(e) {
                return "number" == typeof e && isFinite(e) && Math.floor(e) === e
            }
            ),
            void 0 === Math.sign && (Math.sign = function(e) {
                return 0 > e ? -1 : e > 0 ? 1 : +e
            }
            ),
            "name"in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name", {
                get: function() {
                    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
                }
            }),
            void 0 === Object.assign && !function() {
                Object.assign = function(e) {
                    if (void 0 === e || null === e)
                        throw new TypeError("Cannot convert undefined or null to object");
                    for (var t = Object(e), i = 1; i < arguments.length; i++) {
                        var n = arguments[i];
                        if (void 0 !== n && null !== n)
                            for (var r in n)
                                Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
                    }
                    return t
                }
            }(),
            Object.assign(t.prototype, {
                addEventListener: function(e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    var i = this._listeners;
                    void 0 === i[e] && (i[e] = []),
                    -1 === i[e].indexOf(t) && i[e].push(t)
                },
                hasEventListener: function(e, t) {
                    if (void 0 === this._listeners)
                        return !1;
                    var i = this._listeners;
                    return void 0 !== i[e] && -1 !== i[e].indexOf(t)
                },
                removeEventListener: function(e, t) {
                    if (void 0 !== this._listeners) {
                        var i = this._listeners
                          , n = i[e];
                        if (void 0 !== n) {
                            var r = n.indexOf(t);
                            -1 !== r && n.splice(r, 1)
                        }
                    }
                },
                dispatchEvent: function(e) {
                    if (void 0 !== this._listeners) {
                        var t = this._listeners
                          , i = t[e.type];
                        if (void 0 !== i) {
                            e.target = this;
                            for (var n = i.slice(0), r = 0, a = n.length; a > r; r++)
                                n[r].call(this, e)
                        }
                    }
                }
            });
            var po = "88"
              , fo = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2
            }
              , mo = 0
              , vo = 1
              , go = 2
              , yo = 3
              , _o = 0
              , xo = 1
              , bo = 0
              , wo = 1
              , To = 2
              , Mo = 0
              , Eo = 1
              , So = 2
              , Ao = 1
              , Po = 2
              , Co = 0
              , Lo = 1
              , Ro = 2
              , Oo = 0
              , Io = 1
              , Do = 2
              , Uo = 3
              , Fo = 4
              , ko = 5
              , No = 100
              , zo = 101
              , Bo = 102
              , Go = 103
              , Ho = 104
              , jo = 200
              , Vo = 201
              , Wo = 202
              , Xo = 203
              , Yo = 204
              , qo = 205
              , Zo = 206
              , Qo = 207
              , Jo = 208
              , Ko = 209
              , $o = 210
              , es = 0
              , ts = 1
              , is = 2
              , ns = 3
              , rs = 4
              , as = 5
              , os = 6
              , ss = 7
              , ls = 0
              , cs = 1
              , hs = 2
              , us = 0
              , ds = 1
              , ps = 2
              , fs = 3
              , ms = 4
              , vs = 300
              , gs = 301
              , ys = 302
              , _s = 303
              , xs = 304
              , bs = 305
              , ws = 306
              , Ts = 307
              , Ms = 1e3
              , Es = 1001
              , Ss = 1002
              , As = 1003
              , Ps = 1004
              , Cs = 1005
              , Ls = 1006
              , Rs = 1007
              , Os = 1008
              , Is = 1009
              , Ds = 1010
              , Us = 1011
              , Fs = 1012
              , ks = 1013
              , Ns = 1014
              , zs = 1015
              , Bs = 1016
              , Gs = 1017
              , Hs = 1018
              , js = 1019
              , Vs = 1020
              , Ws = 1021
              , Xs = 1022
              , Ys = 1023
              , qs = 1024
              , Zs = 1025
              , Qs = Ys
              , Js = 1026
              , Ks = 1027
              , $s = 2001
              , el = 2002
              , tl = 2003
              , il = 2004
              , nl = 2100
              , rl = 2101
              , al = 2102
              , ol = 2103
              , sl = 2151
              , ll = 2200
              , cl = 2201
              , hl = 2202
              , ul = 2300
              , dl = 2301
              , pl = 2302
              , fl = 2400
              , ml = 2401
              , vl = 2402
              , gl = 0
              , yl = 1
              , _l = 2
              , xl = 3e3
              , bl = 3001
              , wl = 3007
              , Tl = 3002
              , Ml = 3003
              , El = 3004
              , Sl = 3005
              , Al = 3006
              , Pl = 3200
              , Cl = 3201
              , Ll = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function() {
                    var e, t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = 0;
                    return function() {
                        for (var n = "", r = 0; 36 > r; r++)
                            8 === r || 13 === r || 18 === r || 23 === r ? n += "-" : 14 === r ? n += "4" : (2 >= i && (i = 33554432 + 16777216 * Math.random() | 0),
                            e = 15 & i,
                            i >>= 4,
                            n += t[19 === r ? 3 & e | 8 : e]);
                        return n
                    }
                }(),
                clamp: function(e, t, i) {
                    return Math.max(t, Math.min(i, e))
                },
                euclideanModulo: function(e, t) {
                    return (e % t + t) % t
                },
                mapLinear: function(e, t, i, n, r) {
                    return n + (e - t) * (r - n) / (i - t)
                },
                lerp: function(e, t, i) {
                    return (1 - i) * e + i * t
                },
                smoothstep: function(e, t, i) {
                    return t >= e ? 0 : e >= i ? 1 : (e = (e - t) / (i - t),
                    e * e * (3 - 2 * e))
                },
                smootherstep: function(e, t, i) {
                    return t >= e ? 0 : e >= i ? 1 : (e = (e - t) / (i - t),
                    e * e * e * (e * (6 * e - 15) + 10))
                },
                randInt: function(e, t) {
                    return e + Math.floor(Math.random() * (t - e + 1))
                },
                randFloat: function(e, t) {
                    return e + Math.random() * (t - e)
                },
                randFloatSpread: function(e) {
                    return e * (.5 - Math.random())
                },
                degToRad: function(e) {
                    return e * Ll.DEG2RAD
                },
                radToDeg: function(e) {
                    return e * Ll.RAD2DEG
                },
                isPowerOfTwo: function(e) {
                    return 0 === (e & e - 1) && 0 !== e
                },
                ceilPowerOfTwo: function(e) {
                    return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
                },
                floorPowerOfTwo: function(e) {
                    return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
                }
            };
            Object.defineProperties(i.prototype, {
                width: {
                    get: function() {
                        return this.x
                    },
                    set: function(e) {
                        this.x = e
                    }
                },
                height: {
                    get: function() {
                        return this.y
                    },
                    set: function(e) {
                        this.y = e
                    }
                }
            }),
            Object.assign(i.prototype, {
                isVector2: !0,
                set: function(e, t) {
                    return this.x = e,
                    this.y = t,
                    this
                },
                setScalar: function(e) {
                    return this.x = e,
                    this.y = e,
                    this
                },
                setX: function(e) {
                    return this.x = e,
                    this
                },
                setY: function(e) {
                    return this.y = e,
                    this
                },
                setComponent: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y)
                },
                copy: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this
                },
                add: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(e, t)) : (this.x += e.x,
                    this.y += e.y,
                    this)
                },
                addScalar: function(e) {
                    return this.x += e,
                    this.y += e,
                    this
                },
                addVectors: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this
                },
                addScaledVector: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this
                },
                sub: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(e, t)) : (this.x -= e.x,
                    this.y -= e.y,
                    this)
                },
                subScalar: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this
                },
                subVectors: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this
                },
                multiply: function(e) {
                    return this.x *= e.x,
                    this.y *= e.y,
                    this
                },
                multiplyScalar: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this
                },
                divide: function(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this
                },
                divideScalar: function(e) {
                    return this.multiplyScalar(1 / e)
                },
                applyMatrix3: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = e.elements;
                    return this.x = n[0] * t + n[3] * i + n[6],
                    this.y = n[1] * t + n[4] * i + n[7],
                    this
                },
                min: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this
                },
                max: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this
                },
                clamp: function(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this
                },
                clampScalar: function() {
                    var e = new i
                      , t = new i;
                    return function(i, n) {
                        return e.set(i, i),
                        t.set(n, n),
                        this.clamp(e, t)
                    }
                }(),
                clampLength: function(e, t) {
                    var i = this.length();
                    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(t, i)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this
                },
                dot: function(e) {
                    return this.x * e.x + this.y * e.y
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                },
                manhattanLength: function() {
                    return Math.abs(this.x) + Math.abs(this.y)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                angle: function() {
                    var e = Math.atan2(this.y, this.x);
                    return 0 > e && (e += 2 * Math.PI),
                    e
                },
                distanceTo: function(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                },
                distanceToSquared: function(e) {
                    var t = this.x - e.x
                      , i = this.y - e.y;
                    return t * t + i * i
                },
                manhattanDistanceTo: function(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                },
                setLength: function(e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this
                },
                lerpVectors: function(e, t, i) {
                    return this.subVectors(t, e).multiplyScalar(i).add(e)
                },
                equals: function(e) {
                    return e.x === this.x && e.y === this.y
                },
                fromArray: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e
                },
                fromBufferAttribute: function(e, t, i) {
                    return void 0 !== i && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this
                },
                rotateAround: function(e, t) {
                    var i = Math.cos(t)
                      , n = Math.sin(t)
                      , r = this.x - e.x
                      , a = this.y - e.y;
                    return this.x = r * i - a * n + e.x,
                    this.y = r * n + a * i + e.y,
                    this
                }
            }),
            Object.assign(n.prototype, {
                isMatrix4: !0,
                set: function(e, t, i, n, r, a, o, s, l, c, h, u, d, p, f, m) {
                    var v = this.elements;
                    return v[0] = e,
                    v[4] = t,
                    v[8] = i,
                    v[12] = n,
                    v[1] = r,
                    v[5] = a,
                    v[9] = o,
                    v[13] = s,
                    v[2] = l,
                    v[6] = c,
                    v[10] = h,
                    v[14] = u,
                    v[3] = d,
                    v[7] = p,
                    v[11] = f,
                    v[15] = m,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new n).fromArray(this.elements)
                },
                copy: function(e) {
                    var t = this.elements
                      , i = e.elements;
                    return t[0] = i[0],
                    t[1] = i[1],
                    t[2] = i[2],
                    t[3] = i[3],
                    t[4] = i[4],
                    t[5] = i[5],
                    t[6] = i[6],
                    t[7] = i[7],
                    t[8] = i[8],
                    t[9] = i[9],
                    t[10] = i[10],
                    t[11] = i[11],
                    t[12] = i[12],
                    t[13] = i[13],
                    t[14] = i[14],
                    t[15] = i[15],
                    this
                },
                copyPosition: function(e) {
                    var t = this.elements
                      , i = e.elements;
                    return t[12] = i[12],
                    t[13] = i[13],
                    t[14] = i[14],
                    this
                },
                extractBasis: function(e, t, i) {
                    return e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    i.setFromMatrixColumn(this, 2),
                    this
                },
                makeBasis: function(e, t, i) {
                    return this.set(e.x, t.x, i.x, 0, e.y, t.y, i.y, 0, e.z, t.z, i.z, 0, 0, 0, 0, 1),
                    this
                },
                extractRotation: function() {
                    var e = new a;
                    return function(t) {
                        var i = this.elements
                          , n = t.elements
                          , r = 1 / e.setFromMatrixColumn(t, 0).length()
                          , a = 1 / e.setFromMatrixColumn(t, 1).length()
                          , o = 1 / e.setFromMatrixColumn(t, 2).length();
                        return i[0] = n[0] * r,
                        i[1] = n[1] * r,
                        i[2] = n[2] * r,
                        i[4] = n[4] * a,
                        i[5] = n[5] * a,
                        i[6] = n[6] * a,
                        i[8] = n[8] * o,
                        i[9] = n[9] * o,
                        i[10] = n[10] * o,
                        this
                    }
                }(),
                makeRotationFromEuler: function(e) {
                    e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                    var t = this.elements
                      , i = e.x
                      , n = e.y
                      , r = e.z
                      , a = Math.cos(i)
                      , o = Math.sin(i)
                      , s = Math.cos(n)
                      , l = Math.sin(n)
                      , c = Math.cos(r)
                      , h = Math.sin(r);
                    if ("XYZ" === e.order) {
                        var u = a * c
                          , d = a * h
                          , p = o * c
                          , f = o * h;
                        t[0] = s * c,
                        t[4] = -s * h,
                        t[8] = l,
                        t[1] = d + p * l,
                        t[5] = u - f * l,
                        t[9] = -o * s,
                        t[2] = f - u * l,
                        t[6] = p + d * l,
                        t[10] = a * s
                    } else if ("YXZ" === e.order) {
                        var m = s * c
                          , v = s * h
                          , g = l * c
                          , y = l * h;
                        t[0] = m + y * o,
                        t[4] = g * o - v,
                        t[8] = a * l,
                        t[1] = a * h,
                        t[5] = a * c,
                        t[9] = -o,
                        t[2] = v * o - g,
                        t[6] = y + m * o,
                        t[10] = a * s
                    } else if ("ZXY" === e.order) {
                        var m = s * c
                          , v = s * h
                          , g = l * c
                          , y = l * h;
                        t[0] = m - y * o,
                        t[4] = -a * h,
                        t[8] = g + v * o,
                        t[1] = v + g * o,
                        t[5] = a * c,
                        t[9] = y - m * o,
                        t[2] = -a * l,
                        t[6] = o,
                        t[10] = a * s
                    } else if ("ZYX" === e.order) {
                        var u = a * c
                          , d = a * h
                          , p = o * c
                          , f = o * h;
                        t[0] = s * c,
                        t[4] = p * l - d,
                        t[8] = u * l + f,
                        t[1] = s * h,
                        t[5] = f * l + u,
                        t[9] = d * l - p,
                        t[2] = -l,
                        t[6] = o * s,
                        t[10] = a * s
                    } else if ("YZX" === e.order) {
                        var _ = a * s
                          , x = a * l
                          , b = o * s
                          , w = o * l;
                        t[0] = s * c,
                        t[4] = w - _ * h,
                        t[8] = b * h + x,
                        t[1] = h,
                        t[5] = a * c,
                        t[9] = -o * c,
                        t[2] = -l * c,
                        t[6] = x * h + b,
                        t[10] = _ - w * h
                    } else if ("XZY" === e.order) {
                        var _ = a * s
                          , x = a * l
                          , b = o * s
                          , w = o * l;
                        t[0] = s * c,
                        t[4] = -h,
                        t[8] = l * c,
                        t[1] = _ * h + w,
                        t[5] = a * c,
                        t[9] = x * h - b,
                        t[2] = b * h - x,
                        t[6] = o * c,
                        t[10] = w * h + _
                    }
                    return t[3] = 0,
                    t[7] = 0,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                },
                makeRotationFromQuaternion: function(e) {
                    var t = this.elements
                      , i = e._x
                      , n = e._y
                      , r = e._z
                      , a = e._w
                      , o = i + i
                      , s = n + n
                      , l = r + r
                      , c = i * o
                      , h = i * s
                      , u = i * l
                      , d = n * s
                      , p = n * l
                      , f = r * l
                      , m = a * o
                      , v = a * s
                      , g = a * l;
                    return t[0] = 1 - (d + f),
                    t[4] = h - g,
                    t[8] = u + v,
                    t[1] = h + g,
                    t[5] = 1 - (c + f),
                    t[9] = p - m,
                    t[2] = u - v,
                    t[6] = p + m,
                    t[10] = 1 - (c + d),
                    t[3] = 0,
                    t[7] = 0,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                },
                lookAt: function() {
                    var e = new a
                      , t = new a
                      , i = new a;
                    return function(n, r, a) {
                        var o = this.elements;
                        return i.subVectors(n, r),
                        0 === i.lengthSq() && (i.z = 1),
                        i.normalize(),
                        e.crossVectors(a, i),
                        0 === e.lengthSq() && (1 === Math.abs(a.z) ? i.x += 1e-4 : i.z += 1e-4,
                        i.normalize(),
                        e.crossVectors(a, i)),
                        e.normalize(),
                        t.crossVectors(i, e),
                        o[0] = e.x,
                        o[4] = t.x,
                        o[8] = i.x,
                        o[1] = e.y,
                        o[5] = t.y,
                        o[9] = i.y,
                        o[2] = e.z,
                        o[6] = t.z,
                        o[10] = i.z,
                        this
                    }
                }(),
                multiply: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
                    this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
                },
                premultiply: function(e) {
                    return this.multiplyMatrices(e, this)
                },
                multiplyMatrices: function(e, t) {
                    var i = e.elements
                      , n = t.elements
                      , r = this.elements
                      , a = i[0]
                      , o = i[4]
                      , s = i[8]
                      , l = i[12]
                      , c = i[1]
                      , h = i[5]
                      , u = i[9]
                      , d = i[13]
                      , p = i[2]
                      , f = i[6]
                      , m = i[10]
                      , v = i[14]
                      , g = i[3]
                      , y = i[7]
                      , _ = i[11]
                      , x = i[15]
                      , b = n[0]
                      , w = n[4]
                      , T = n[8]
                      , M = n[12]
                      , E = n[1]
                      , S = n[5]
                      , A = n[9]
                      , P = n[13]
                      , C = n[2]
                      , L = n[6]
                      , R = n[10]
                      , O = n[14]
                      , I = n[3]
                      , D = n[7]
                      , U = n[11]
                      , F = n[15];
                    return r[0] = a * b + o * E + s * C + l * I,
                    r[4] = a * w + o * S + s * L + l * D,
                    r[8] = a * T + o * A + s * R + l * U,
                    r[12] = a * M + o * P + s * O + l * F,
                    r[1] = c * b + h * E + u * C + d * I,
                    r[5] = c * w + h * S + u * L + d * D,
                    r[9] = c * T + h * A + u * R + d * U,
                    r[13] = c * M + h * P + u * O + d * F,
                    r[2] = p * b + f * E + m * C + v * I,
                    r[6] = p * w + f * S + m * L + v * D,
                    r[10] = p * T + f * A + m * R + v * U,
                    r[14] = p * M + f * P + m * O + v * F,
                    r[3] = g * b + y * E + _ * C + x * I,
                    r[7] = g * w + y * S + _ * L + x * D,
                    r[11] = g * T + y * A + _ * R + x * U,
                    r[15] = g * M + y * P + _ * O + x * F,
                    this
                },
                multiplyScalar: function(e) {
                    var t = this.elements;
                    return t[0] *= e,
                    t[4] *= e,
                    t[8] *= e,
                    t[12] *= e,
                    t[1] *= e,
                    t[5] *= e,
                    t[9] *= e,
                    t[13] *= e,
                    t[2] *= e,
                    t[6] *= e,
                    t[10] *= e,
                    t[14] *= e,
                    t[3] *= e,
                    t[7] *= e,
                    t[11] *= e,
                    t[15] *= e,
                    this
                },
                applyToBufferAttribute: function() {
                    var e = new a;
                    return function(t) {
                        for (var i = 0, n = t.count; n > i; i++)
                            e.x = t.getX(i),
                            e.y = t.getY(i),
                            e.z = t.getZ(i),
                            e.applyMatrix4(this),
                            t.setXYZ(i, e.x, e.y, e.z);
                        return t
                    }
                }(),
                determinant: function() {
                    var e = this.elements
                      , t = e[0]
                      , i = e[4]
                      , n = e[8]
                      , r = e[12]
                      , a = e[1]
                      , o = e[5]
                      , s = e[9]
                      , l = e[13]
                      , c = e[2]
                      , h = e[6]
                      , u = e[10]
                      , d = e[14]
                      , p = e[3]
                      , f = e[7]
                      , m = e[11]
                      , v = e[15];
                    return p * (+r * s * h - n * l * h - r * o * u + i * l * u + n * o * d - i * s * d) + f * (+t * s * d - t * l * u + r * a * u - n * a * d + n * l * c - r * s * c) + m * (+t * l * h - t * o * d - r * a * h + i * a * d + r * o * c - i * l * c) + v * (-n * o * c - t * s * h + t * o * u + n * a * h - i * a * u + i * s * c)
                },
                transpose: function() {
                    var e, t = this.elements;
                    return e = t[1],
                    t[1] = t[4],
                    t[4] = e,
                    e = t[2],
                    t[2] = t[8],
                    t[8] = e,
                    e = t[6],
                    t[6] = t[9],
                    t[9] = e,
                    e = t[3],
                    t[3] = t[12],
                    t[12] = e,
                    e = t[7],
                    t[7] = t[13],
                    t[13] = e,
                    e = t[11],
                    t[11] = t[14],
                    t[14] = e,
                    this
                },
                setPosition: function(e) {
                    var t = this.elements;
                    return t[12] = e.x,
                    t[13] = e.y,
                    t[14] = e.z,
                    this
                },
                getInverse: function(e, t) {
                    var i = this.elements
                      , n = e.elements
                      , r = n[0]
                      , a = n[1]
                      , o = n[2]
                      , s = n[3]
                      , l = n[4]
                      , c = n[5]
                      , h = n[6]
                      , u = n[7]
                      , d = n[8]
                      , p = n[9]
                      , f = n[10]
                      , m = n[11]
                      , v = n[12]
                      , g = n[13]
                      , y = n[14]
                      , _ = n[15]
                      , x = p * y * u - g * f * u + g * h * m - c * y * m - p * h * _ + c * f * _
                      , b = v * f * u - d * y * u - v * h * m + l * y * m + d * h * _ - l * f * _
                      , w = d * g * u - v * p * u + v * c * m - l * g * m - d * c * _ + l * p * _
                      , T = v * p * h - d * g * h - v * c * f + l * g * f + d * c * y - l * p * y
                      , M = r * x + a * b + o * w + s * T;
                    if (0 === M) {
                        var E = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
                        if (t === !0)
                            throw new Error(E);
                        return console.warn(E),
                        this.identity()
                    }
                    var S = 1 / M;
                    return i[0] = x * S,
                    i[1] = (g * f * s - p * y * s - g * o * m + a * y * m + p * o * _ - a * f * _) * S,
                    i[2] = (c * y * s - g * h * s + g * o * u - a * y * u - c * o * _ + a * h * _) * S,
                    i[3] = (p * h * s - c * f * s - p * o * u + a * f * u + c * o * m - a * h * m) * S,
                    i[4] = b * S,
                    i[5] = (d * y * s - v * f * s + v * o * m - r * y * m - d * o * _ + r * f * _) * S,
                    i[6] = (v * h * s - l * y * s - v * o * u + r * y * u + l * o * _ - r * h * _) * S,
                    i[7] = (l * f * s - d * h * s + d * o * u - r * f * u - l * o * m + r * h * m) * S,
                    i[8] = w * S,
                    i[9] = (v * p * s - d * g * s - v * a * m + r * g * m + d * a * _ - r * p * _) * S,
                    i[10] = (l * g * s - v * c * s + v * a * u - r * g * u - l * a * _ + r * c * _) * S,
                    i[11] = (d * c * s - l * p * s - d * a * u + r * p * u + l * a * m - r * c * m) * S,
                    i[12] = T * S,
                    i[13] = (d * g * o - v * p * o + v * a * f - r * g * f - d * a * y + r * p * y) * S,
                    i[14] = (v * c * o - l * g * o - v * a * h + r * g * h + l * a * y - r * c * y) * S,
                    i[15] = (l * p * o - d * c * o + d * a * h - r * p * h - l * a * f + r * c * f) * S,
                    this
                },
                scale: function(e) {
                    var t = this.elements
                      , i = e.x
                      , n = e.y
                      , r = e.z;
                    return t[0] *= i,
                    t[4] *= n,
                    t[8] *= r,
                    t[1] *= i,
                    t[5] *= n,
                    t[9] *= r,
                    t[2] *= i,
                    t[6] *= n,
                    t[10] *= r,
                    t[3] *= i,
                    t[7] *= n,
                    t[11] *= r,
                    this
                },
                getMaxScaleOnAxis: function() {
                    var e = this.elements
                      , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
                      , i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
                      , n = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                    return Math.sqrt(Math.max(t, i, n))
                },
                makeTranslation: function(e, t, i) {
                    return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, i, 0, 0, 0, 1),
                    this
                },
                makeRotationX: function(e) {
                    var t = Math.cos(e)
                      , i = Math.sin(e);
                    return this.set(1, 0, 0, 0, 0, t, -i, 0, 0, i, t, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationY: function(e) {
                    var t = Math.cos(e)
                      , i = Math.sin(e);
                    return this.set(t, 0, i, 0, 0, 1, 0, 0, -i, 0, t, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationZ: function(e) {
                    var t = Math.cos(e)
                      , i = Math.sin(e);
                    return this.set(t, -i, 0, 0, i, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationAxis: function(e, t) {
                    var i = Math.cos(t)
                      , n = Math.sin(t)
                      , r = 1 - i
                      , a = e.x
                      , o = e.y
                      , s = e.z
                      , l = r * a
                      , c = r * o;
                    return this.set(l * a + i, l * o - n * s, l * s + n * o, 0, l * o + n * s, c * o + i, c * s - n * a, 0, l * s - n * o, c * s + n * a, r * s * s + i, 0, 0, 0, 0, 1),
                    this
                },
                makeScale: function(e, t, i) {
                    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, i, 0, 0, 0, 0, 1),
                    this
                },
                makeShear: function(e, t, i) {
                    return this.set(1, t, i, 0, e, 1, i, 0, e, t, 1, 0, 0, 0, 0, 1),
                    this
                },
                compose: function(e, t, i) {
                    return this.makeRotationFromQuaternion(t),
                    this.scale(i),
                    this.setPosition(e),
                    this
                },
                decompose: function() {
                    var e = new a
                      , t = new n;
                    return function(i, n, r) {
                        var a = this.elements
                          , o = e.set(a[0], a[1], a[2]).length()
                          , s = e.set(a[4], a[5], a[6]).length()
                          , l = e.set(a[8], a[9], a[10]).length()
                          , c = this.determinant();
                        0 > c && (o = -o),
                        i.x = a[12],
                        i.y = a[13],
                        i.z = a[14],
                        t.copy(this);
                        var h = 1 / o
                          , u = 1 / s
                          , d = 1 / l;
                        return t.elements[0] *= h,
                        t.elements[1] *= h,
                        t.elements[2] *= h,
                        t.elements[4] *= u,
                        t.elements[5] *= u,
                        t.elements[6] *= u,
                        t.elements[8] *= d,
                        t.elements[9] *= d,
                        t.elements[10] *= d,
                        n.setFromRotationMatrix(t),
                        r.x = o,
                        r.y = s,
                        r.z = l,
                        this
                    }
                }(),
                makePerspective: function(e, t, i, n, r, a) {
                    void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                    var o = this.elements
                      , s = 2 * r / (t - e)
                      , l = 2 * r / (i - n)
                      , c = (t + e) / (t - e)
                      , h = (i + n) / (i - n)
                      , u = -(a + r) / (a - r)
                      , d = -2 * a * r / (a - r);
                    return o[0] = s,
                    o[4] = 0,
                    o[8] = c,
                    o[12] = 0,
                    o[1] = 0,
                    o[5] = l,
                    o[9] = h,
                    o[13] = 0,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = u,
                    o[14] = d,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = -1,
                    o[15] = 0,
                    this
                },
                makeOrthographic: function(e, t, i, n, r, a) {
                    var o = this.elements
                      , s = 1 / (t - e)
                      , l = 1 / (i - n)
                      , c = 1 / (a - r)
                      , h = (t + e) * s
                      , u = (i + n) * l
                      , d = (a + r) * c;
                    return o[0] = 2 * s,
                    o[4] = 0,
                    o[8] = 0,
                    o[12] = -h,
                    o[1] = 0,
                    o[5] = 2 * l,
                    o[9] = 0,
                    o[13] = -u,
                    o[2] = 0,
                    o[6] = 0,
                    o[10] = -2 * c,
                    o[14] = -d,
                    o[3] = 0,
                    o[7] = 0,
                    o[11] = 0,
                    o[15] = 1,
                    this
                },
                equals: function(e) {
                    for (var t = this.elements, i = e.elements, n = 0; 16 > n; n++)
                        if (t[n] !== i[n])
                            return !1;
                    return !0
                },
                fromArray: function(e, t) {
                    void 0 === t && (t = 0);
                    for (var i = 0; 16 > i; i++)
                        this.elements[i] = e[i + t];
                    return this
                },
                toArray: function(e, t) {
                    void 0 === e && (e = []),
                    void 0 === t && (t = 0);
                    var i = this.elements;
                    return e[t] = i[0],
                    e[t + 1] = i[1],
                    e[t + 2] = i[2],
                    e[t + 3] = i[3],
                    e[t + 4] = i[4],
                    e[t + 5] = i[5],
                    e[t + 6] = i[6],
                    e[t + 7] = i[7],
                    e[t + 8] = i[8],
                    e[t + 9] = i[9],
                    e[t + 10] = i[10],
                    e[t + 11] = i[11],
                    e[t + 12] = i[12],
                    e[t + 13] = i[13],
                    e[t + 14] = i[14],
                    e[t + 15] = i[15],
                    e
                }
            }),
            Object.assign(r, {
                slerp: function(e, t, i, n) {
                    return i.copy(e).slerp(t, n)
                },
                slerpFlat: function(e, t, i, n, r, a, o) {
                    var s = i[n + 0]
                      , l = i[n + 1]
                      , c = i[n + 2]
                      , h = i[n + 3]
                      , u = r[a + 0]
                      , d = r[a + 1]
                      , p = r[a + 2]
                      , f = r[a + 3];
                    if (h !== f || s !== u || l !== d || c !== p) {
                        var m = 1 - o
                          , v = s * u + l * d + c * p + h * f
                          , g = v >= 0 ? 1 : -1
                          , y = 1 - v * v;
                        if (y > Number.EPSILON) {
                            var _ = Math.sqrt(y)
                              , x = Math.atan2(_, v * g);
                            m = Math.sin(m * x) / _,
                            o = Math.sin(o * x) / _
                        }
                        var b = o * g;
                        if (s = s * m + u * b,
                        l = l * m + d * b,
                        c = c * m + p * b,
                        h = h * m + f * b,
                        m === 1 - o) {
                            var w = 1 / Math.sqrt(s * s + l * l + c * c + h * h);
                            s *= w,
                            l *= w,
                            c *= w,
                            h *= w
                        }
                    }
                    e[t] = s,
                    e[t + 1] = l,
                    e[t + 2] = c,
                    e[t + 3] = h
                }
            }),
            Object.defineProperties(r.prototype, {
                x: {
                    get: function() {
                        return this._x
                    },
                    set: function(e) {
                        this._x = e,
                        this.onChangeCallback()
                    }
                },
                y: {
                    get: function() {
                        return this._y
                    },
                    set: function(e) {
                        this._y = e,
                        this.onChangeCallback()
                    }
                },
                z: {
                    get: function() {
                        return this._z
                    },
                    set: function(e) {
                        this._z = e,
                        this.onChangeCallback()
                    }
                },
                w: {
                    get: function() {
                        return this._w
                    },
                    set: function(e) {
                        this._w = e,
                        this.onChangeCallback()
                    }
                }
            }),
            Object.assign(r.prototype, {
                set: function(e, t, i, n) {
                    return this._x = e,
                    this._y = t,
                    this._z = i,
                    this._w = n,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._w)
                },
                copy: function(e) {
                    return this._x = e.x,
                    this._y = e.y,
                    this._z = e.z,
                    this._w = e.w,
                    this.onChangeCallback(),
                    this
                },
                setFromEuler: function(e, t) {
                    if (!e || !e.isEuler)
                        throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                    var i = e._x
                      , n = e._y
                      , r = e._z
                      , a = e.order
                      , o = Math.cos
                      , s = Math.sin
                      , l = o(i / 2)
                      , c = o(n / 2)
                      , h = o(r / 2)
                      , u = s(i / 2)
                      , d = s(n / 2)
                      , p = s(r / 2);
                    return "XYZ" === a ? (this._x = u * c * h + l * d * p,
                    this._y = l * d * h - u * c * p,
                    this._z = l * c * p + u * d * h,
                    this._w = l * c * h - u * d * p) : "YXZ" === a ? (this._x = u * c * h + l * d * p,
                    this._y = l * d * h - u * c * p,
                    this._z = l * c * p - u * d * h,
                    this._w = l * c * h + u * d * p) : "ZXY" === a ? (this._x = u * c * h - l * d * p,
                    this._y = l * d * h + u * c * p,
                    this._z = l * c * p + u * d * h,
                    this._w = l * c * h - u * d * p) : "ZYX" === a ? (this._x = u * c * h - l * d * p,
                    this._y = l * d * h + u * c * p,
                    this._z = l * c * p - u * d * h,
                    this._w = l * c * h + u * d * p) : "YZX" === a ? (this._x = u * c * h + l * d * p,
                    this._y = l * d * h + u * c * p,
                    this._z = l * c * p - u * d * h,
                    this._w = l * c * h - u * d * p) : "XZY" === a && (this._x = u * c * h - l * d * p,
                    this._y = l * d * h - u * c * p,
                    this._z = l * c * p + u * d * h,
                    this._w = l * c * h + u * d * p),
                    t !== !1 && this.onChangeCallback(),
                    this
                },
                setFromAxisAngle: function(e, t) {
                    var i = t / 2
                      , n = Math.sin(i);
                    return this._x = e.x * n,
                    this._y = e.y * n,
                    this._z = e.z * n,
                    this._w = Math.cos(i),
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(e) {
                    var t, i = e.elements, n = i[0], r = i[4], a = i[8], o = i[1], s = i[5], l = i[9], c = i[2], h = i[6], u = i[10], d = n + s + u;
                    return d > 0 ? (t = .5 / Math.sqrt(d + 1),
                    this._w = .25 / t,
                    this._x = (h - l) * t,
                    this._y = (a - c) * t,
                    this._z = (o - r) * t) : n > s && n > u ? (t = 2 * Math.sqrt(1 + n - s - u),
                    this._w = (h - l) / t,
                    this._x = .25 * t,
                    this._y = (r + o) / t,
                    this._z = (a + c) / t) : s > u ? (t = 2 * Math.sqrt(1 + s - n - u),
                    this._w = (a - c) / t,
                    this._x = (r + o) / t,
                    this._y = .25 * t,
                    this._z = (l + h) / t) : (t = 2 * Math.sqrt(1 + u - n - s),
                    this._w = (o - r) / t,
                    this._x = (a + c) / t,
                    this._y = (l + h) / t,
                    this._z = .25 * t),
                    this.onChangeCallback(),
                    this
                },
                setFromUnitVectors: function() {
                    var e, t = new a, i = 1e-6;
                    return function(n, r) {
                        return void 0 === t && (t = new a),
                        e = n.dot(r) + 1,
                        i > e ? (e = 0,
                        Math.abs(n.x) > Math.abs(n.z) ? t.set(-n.y, n.x, 0) : t.set(0, -n.z, n.y)) : t.crossVectors(n, r),
                        this._x = t.x,
                        this._y = t.y,
                        this._z = t.z,
                        this._w = e,
                        this.normalize()
                    }
                }(),
                inverse: function() {
                    return this.conjugate().normalize()
                },
                conjugate: function() {
                    return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this.onChangeCallback(),
                    this
                },
                dot: function(e) {
                    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                },
                lengthSq: function() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                },
                length: function() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                },
                normalize: function() {
                    var e = this.length();
                    return 0 === e ? (this._x = 0,
                    this._y = 0,
                    this._z = 0,
                    this._w = 1) : (e = 1 / e,
                    this._x = this._x * e,
                    this._y = this._y * e,
                    this._z = this._z * e,
                    this._w = this._w * e),
                    this.onChangeCallback(),
                    this
                },
                multiply: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
                    this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
                },
                premultiply: function(e) {
                    return this.multiplyQuaternions(e, this)
                },
                multiplyQuaternions: function(e, t) {
                    var i = e._x
                      , n = e._y
                      , r = e._z
                      , a = e._w
                      , o = t._x
                      , s = t._y
                      , l = t._z
                      , c = t._w;
                    return this._x = i * c + a * o + n * l - r * s,
                    this._y = n * c + a * s + r * o - i * l,
                    this._z = r * c + a * l + i * s - n * o,
                    this._w = a * c - i * o - n * s - r * l,
                    this.onChangeCallback(),
                    this
                },
                slerp: function(e, t) {
                    if (0 === t)
                        return this;
                    if (1 === t)
                        return this.copy(e);
                    var i = this._x
                      , n = this._y
                      , r = this._z
                      , a = this._w
                      , o = a * e._w + i * e._x + n * e._y + r * e._z;
                    if (0 > o ? (this._w = -e._w,
                    this._x = -e._x,
                    this._y = -e._y,
                    this._z = -e._z,
                    o = -o) : this.copy(e),
                    o >= 1)
                        return this._w = a,
                        this._x = i,
                        this._y = n,
                        this._z = r,
                        this;
                    var s = Math.sqrt(1 - o * o);
                    if (Math.abs(s) < .001)
                        return this._w = .5 * (a + this._w),
                        this._x = .5 * (i + this._x),
                        this._y = .5 * (n + this._y),
                        this._z = .5 * (r + this._z),
                        this;
                    var l = Math.atan2(s, o)
                      , c = Math.sin((1 - t) * l) / s
                      , h = Math.sin(t * l) / s;
                    return this._w = a * c + this._w * h,
                    this._x = i * c + this._x * h,
                    this._y = n * c + this._y * h,
                    this._z = r * c + this._z * h,
                    this.onChangeCallback(),
                    this
                },
                equals: function(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                },
                fromArray: function(e, t) {
                    return void 0 === t && (t = 0),
                    this._x = e[t],
                    this._y = e[t + 1],
                    this._z = e[t + 2],
                    this._w = e[t + 3],
                    this.onChangeCallback(),
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._w,
                    e
                },
                onChange: function(e) {
                    return this.onChangeCallback = e,
                    this
                },
                onChangeCallback: function() {}
            }),
            Object.assign(a.prototype, {
                isVector3: !0,
                set: function(e, t, i) {
                    return this.x = e,
                    this.y = t,
                    this.z = i,
                    this
                },
                setScalar: function(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this
                },
                setX: function(e) {
                    return this.x = e,
                    this
                },
                setY: function(e) {
                    return this.y = e,
                    this
                },
                setZ: function(e) {
                    return this.z = e,
                    this
                },
                setComponent: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z)
                },
                copy: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this
                },
                add: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(e, t)) : (this.x += e.x,
                    this.y += e.y,
                    this.z += e.z,
                    this)
                },
                addScalar: function(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this
                },
                addVectors: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this
                },
                addScaledVector: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this
                },
                sub: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(e, t)) : (this.x -= e.x,
                    this.y -= e.y,
                    this.z -= e.z,
                    this)
                },
                subScalar: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this
                },
                subVectors: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this
                },
                multiply: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
                    this.multiplyVectors(e, t)) : (this.x *= e.x,
                    this.y *= e.y,
                    this.z *= e.z,
                    this)
                },
                multiplyScalar: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this
                },
                multiplyVectors: function(e, t) {
                    return this.x = e.x * t.x,
                    this.y = e.y * t.y,
                    this.z = e.z * t.z,
                    this
                },
                applyEuler: function() {
                    var e = new r;
                    return function(t) {
                        return t && t.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
                        this.applyQuaternion(e.setFromEuler(t))
                    }
                }(),
                applyAxisAngle: function() {
                    var e = new r;
                    return function(t, i) {
                        return this.applyQuaternion(e.setFromAxisAngle(t, i))
                    }
                }(),
                applyMatrix3: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = this.z
                      , r = e.elements;
                    return this.x = r[0] * t + r[3] * i + r[6] * n,
                    this.y = r[1] * t + r[4] * i + r[7] * n,
                    this.z = r[2] * t + r[5] * i + r[8] * n,
                    this
                },
                applyMatrix4: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = this.z
                      , r = e.elements
                      , a = 1 / (r[3] * t + r[7] * i + r[11] * n + r[15]);
                    return this.x = (r[0] * t + r[4] * i + r[8] * n + r[12]) * a,
                    this.y = (r[1] * t + r[5] * i + r[9] * n + r[13]) * a,
                    this.z = (r[2] * t + r[6] * i + r[10] * n + r[14]) * a,
                    this
                },
                applyQuaternion: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = this.z
                      , r = e.x
                      , a = e.y
                      , o = e.z
                      , s = e.w
                      , l = s * t + a * n - o * i
                      , c = s * i + o * t - r * n
                      , h = s * n + r * i - a * t
                      , u = -r * t - a * i - o * n;
                    return this.x = l * s + u * -r + c * -o - h * -a,
                    this.y = c * s + u * -a + h * -r - l * -o,
                    this.z = h * s + u * -o + l * -a - c * -r,
                    this
                },
                project: function() {
                    var e = new n;
                    return function(t) {
                        return e.multiplyMatrices(t.projectionMatrix, e.getInverse(t.matrixWorld)),
                        this.applyMatrix4(e)
                    }
                }(),
                unproject: function() {
                    var e = new n;
                    return function(t) {
                        return e.multiplyMatrices(t.matrixWorld, e.getInverse(t.projectionMatrix)),
                        this.applyMatrix4(e)
                    }
                }(),
                transformDirection: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = this.z
                      , r = e.elements;
                    return this.x = r[0] * t + r[4] * i + r[8] * n,
                    this.y = r[1] * t + r[5] * i + r[9] * n,
                    this.z = r[2] * t + r[6] * i + r[10] * n,
                    this.normalize()
                },
                divide: function(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this.z /= e.z,
                    this
                },
                divideScalar: function(e) {
                    return this.multiplyScalar(1 / e)
                },
                min: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this
                },
                max: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this
                },
                clamp: function(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this.z = Math.max(e.z, Math.min(t.z, this.z)),
                    this
                },
                clampScalar: function() {
                    var e = new a
                      , t = new a;
                    return function(i, n) {
                        return e.set(i, i, i),
                        t.set(n, n, n),
                        this.clamp(e, t)
                    }
                }(),
                clampLength: function(e, t) {
                    var i = this.length();
                    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(t, i)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
                },
                dot: function(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                manhattanLength: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function(e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this
                },
                lerpVectors: function(e, t, i) {
                    return this.subVectors(t, e).multiplyScalar(i).add(e)
                },
                cross: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
                    this.crossVectors(e, t)) : this.crossVectors(this, e)
                },
                crossVectors: function(e, t) {
                    var i = e.x
                      , n = e.y
                      , r = e.z
                      , a = t.x
                      , o = t.y
                      , s = t.z;
                    return this.x = n * s - r * o,
                    this.y = r * a - i * s,
                    this.z = i * o - n * a,
                    this
                },
                projectOnVector: function(e) {
                    var t = e.dot(this) / e.lengthSq();
                    return this.copy(e).multiplyScalar(t)
                },
                projectOnPlane: function() {
                    var e = new a;
                    return function(t) {
                        return e.copy(this).projectOnVector(t),
                        this.sub(e)
                    }
                }(),
                reflect: function() {
                    var e = new a;
                    return function(t) {
                        return this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)))
                    }
                }(),
                angleTo: function(e) {
                    var t = this.dot(e) / Math.sqrt(this.lengthSq() * e.lengthSq());
                    return Math.acos(Ll.clamp(t, -1, 1))
                },
                distanceTo: function(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                },
                distanceToSquared: function(e) {
                    var t = this.x - e.x
                      , i = this.y - e.y
                      , n = this.z - e.z;
                    return t * t + i * i + n * n
                },
                manhattanDistanceTo: function(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                },
                setFromSpherical: function(e) {
                    var t = Math.sin(e.phi) * e.radius;
                    return this.x = t * Math.sin(e.theta),
                    this.y = Math.cos(e.phi) * e.radius,
                    this.z = t * Math.cos(e.theta),
                    this
                },
                setFromCylindrical: function(e) {
                    return this.x = e.radius * Math.sin(e.theta),
                    this.y = e.y,
                    this.z = e.radius * Math.cos(e.theta),
                    this
                },
                setFromMatrixPosition: function(e) {
                    var t = e.elements;
                    return this.x = t[12],
                    this.y = t[13],
                    this.z = t[14],
                    this
                },
                setFromMatrixScale: function(e) {
                    var t = this.setFromMatrixColumn(e, 0).length()
                      , i = this.setFromMatrixColumn(e, 1).length()
                      , n = this.setFromMatrixColumn(e, 2).length();
                    return this.x = t,
                    this.y = i,
                    this.z = n,
                    this
                },
                setFromMatrixColumn: function(e, t) {
                    return this.fromArray(e.elements, 4 * t)
                },
                equals: function(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z
                },
                fromArray: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e
                },
                fromBufferAttribute: function(e, t, i) {
                    return void 0 !== i && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this
                }
            }),
            Object.assign(o.prototype, {
                isMatrix3: !0,
                set: function(e, t, i, n, r, a, o, s, l) {
                    var c = this.elements;
                    return c[0] = e,
                    c[1] = n,
                    c[2] = o,
                    c[3] = t,
                    c[4] = r,
                    c[5] = s,
                    c[6] = i,
                    c[7] = a,
                    c[8] = l,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new this.constructor).fromArray(this.elements)
                },
                copy: function(e) {
                    var t = this.elements
                      , i = e.elements;
                    return t[0] = i[0],
                    t[1] = i[1],
                    t[2] = i[2],
                    t[3] = i[3],
                    t[4] = i[4],
                    t[5] = i[5],
                    t[6] = i[6],
                    t[7] = i[7],
                    t[8] = i[8],
                    this
                },
                setFromMatrix4: function(e) {
                    var t = e.elements;
                    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
                    this
                },
                applyToBufferAttribute: function() {
                    var e = new a;
                    return function(t) {
                        for (var i = 0, n = t.count; n > i; i++)
                            e.x = t.getX(i),
                            e.y = t.getY(i),
                            e.z = t.getZ(i),
                            e.applyMatrix3(this),
                            t.setXYZ(i, e.x, e.y, e.z);
                        return t
                    }
                }(),
                multiply: function(e) {
                    return this.multiplyMatrices(this, e)
                },
                premultiply: function(e) {
                    return this.multiplyMatrices(e, this)
                },
                multiplyMatrices: function(e, t) {
                    var i = e.elements
                      , n = t.elements
                      , r = this.elements
                      , a = i[0]
                      , o = i[3]
                      , s = i[6]
                      , l = i[1]
                      , c = i[4]
                      , h = i[7]
                      , u = i[2]
                      , d = i[5]
                      , p = i[8]
                      , f = n[0]
                      , m = n[3]
                      , v = n[6]
                      , g = n[1]
                      , y = n[4]
                      , _ = n[7]
                      , x = n[2]
                      , b = n[5]
                      , w = n[8];
                    return r[0] = a * f + o * g + s * x,
                    r[3] = a * m + o * y + s * b,
                    r[6] = a * v + o * _ + s * w,
                    r[1] = l * f + c * g + h * x,
                    r[4] = l * m + c * y + h * b,
                    r[7] = l * v + c * _ + h * w,
                    r[2] = u * f + d * g + p * x,
                    r[5] = u * m + d * y + p * b,
                    r[8] = u * v + d * _ + p * w,
                    this
                },
                multiplyScalar: function(e) {
                    var t = this.elements;
                    return t[0] *= e,
                    t[3] *= e,
                    t[6] *= e,
                    t[1] *= e,
                    t[4] *= e,
                    t[7] *= e,
                    t[2] *= e,
                    t[5] *= e,
                    t[8] *= e,
                    this
                },
                determinant: function() {
                    var e = this.elements
                      , t = e[0]
                      , i = e[1]
                      , n = e[2]
                      , r = e[3]
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[7]
                      , c = e[8];
                    return t * a * c - t * o * l - i * r * c + i * o * s + n * r * l - n * a * s
                },
                getInverse: function(e, t) {
                    e && e.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
                    var i = e.elements
                      , n = this.elements
                      , r = i[0]
                      , a = i[1]
                      , o = i[2]
                      , s = i[3]
                      , l = i[4]
                      , c = i[5]
                      , h = i[6]
                      , u = i[7]
                      , d = i[8]
                      , p = d * l - c * u
                      , f = c * h - d * s
                      , m = u * s - l * h
                      , v = r * p + a * f + o * m;
                    if (0 === v) {
                        var g = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
                        if (t === !0)
                            throw new Error(g);
                        return console.warn(g),
                        this.identity()
                    }
                    var y = 1 / v;
                    return n[0] = p * y,
                    n[1] = (o * u - d * a) * y,
                    n[2] = (c * a - o * l) * y,
                    n[3] = f * y,
                    n[4] = (d * r - o * h) * y,
                    n[5] = (o * s - c * r) * y,
                    n[6] = m * y,
                    n[7] = (a * h - u * r) * y,
                    n[8] = (l * r - a * s) * y,
                    this
                },
                transpose: function() {
                    var e, t = this.elements;
                    return e = t[1],
                    t[1] = t[3],
                    t[3] = e,
                    e = t[2],
                    t[2] = t[6],
                    t[6] = e,
                    e = t[5],
                    t[5] = t[7],
                    t[7] = e,
                    this
                },
                getNormalMatrix: function(e) {
                    return this.setFromMatrix4(e).getInverse(this).transpose()
                },
                transposeIntoArray: function(e) {
                    var t = this.elements;
                    return e[0] = t[0],
                    e[1] = t[3],
                    e[2] = t[6],
                    e[3] = t[1],
                    e[4] = t[4],
                    e[5] = t[7],
                    e[6] = t[2],
                    e[7] = t[5],
                    e[8] = t[8],
                    this
                },
                setUvTransform: function(e, t, i, n, r, a, o) {
                    var s = Math.cos(r)
                      , l = Math.sin(r);
                    this.set(i * s, i * l, -i * (s * a + l * o) + a + e, -n * l, n * s, -n * (-l * a + s * o) + o + t, 0, 0, 1)
                },
                scale: function(e, t) {
                    var i = this.elements;
                    return i[0] *= e,
                    i[3] *= e,
                    i[6] *= e,
                    i[1] *= t,
                    i[4] *= t,
                    i[7] *= t,
                    this
                },
                rotate: function(e) {
                    var t = Math.cos(e)
                      , i = Math.sin(e)
                      , n = this.elements
                      , r = n[0]
                      , a = n[3]
                      , o = n[6]
                      , s = n[1]
                      , l = n[4]
                      , c = n[7];
                    return n[0] = t * r + i * s,
                    n[3] = t * a + i * l,
                    n[6] = t * o + i * c,
                    n[1] = -i * r + t * s,
                    n[4] = -i * a + t * l,
                    n[7] = -i * o + t * c,
                    this
                },
                translate: function(e, t) {
                    var i = this.elements;
                    return i[0] += e * i[2],
                    i[3] += e * i[5],
                    i[6] += e * i[8],
                    i[1] += t * i[2],
                    i[4] += t * i[5],
                    i[7] += t * i[8],
                    this
                },
                equals: function(e) {
                    for (var t = this.elements, i = e.elements, n = 0; 9 > n; n++)
                        if (t[n] !== i[n])
                            return !1;
                    return !0
                },
                fromArray: function(e, t) {
                    void 0 === t && (t = 0);
                    for (var i = 0; 9 > i; i++)
                        this.elements[i] = e[i + t];
                    return this
                },
                toArray: function(e, t) {
                    void 0 === e && (e = []),
                    void 0 === t && (t = 0);
                    var i = this.elements;
                    return e[t] = i[0],
                    e[t + 1] = i[1],
                    e[t + 2] = i[2],
                    e[t + 3] = i[3],
                    e[t + 4] = i[4],
                    e[t + 5] = i[5],
                    e[t + 6] = i[6],
                    e[t + 7] = i[7],
                    e[t + 8] = i[8],
                    e
                }
            });
            var Rl = 0;
            s.DEFAULT_IMAGE = void 0,
            s.DEFAULT_MAPPING = vs,
            Object.defineProperty(s.prototype, "needsUpdate", {
                set: function(e) {
                    e === !0 && this.version++
                }
            }),
            Object.assign(s.prototype, t.prototype, {
                constructor: s,
                isTexture: !0,
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.name = e.name,
                    this.image = e.image,
                    this.mipmaps = e.mipmaps.slice(0),
                    this.mapping = e.mapping,
                    this.wrapS = e.wrapS,
                    this.wrapT = e.wrapT,
                    this.magFilter = e.magFilter,
                    this.minFilter = e.minFilter,
                    this.anisotropy = e.anisotropy,
                    this.format = e.format,
                    this.type = e.type,
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    this.rotation = e.rotation,
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this.matrix.copy(e.matrix),
                    this.generateMipmaps = e.generateMipmaps,
                    this.premultiplyAlpha = e.premultiplyAlpha,
                    this.flipY = e.flipY,
                    this.unpackAlignment = e.unpackAlignment,
                    this.encoding = e.encoding,
                    this
                },
                toJSON: function(e) {
                    function t(e) {
                        var t;
                        if (e instanceof HTMLCanvasElement)
                            t = e;
                        else {
                            t = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                            t.width = e.width,
                            t.height = e.height;
                            var i = t.getContext("2d");
                            e instanceof ImageData ? i.putImageData(e, 0, 0) : i.drawImage(e, 0, 0, e.width, e.height)
                        }
                        return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
                    }
                    var i = void 0 === e || "string" == typeof e;
                    if (!i && void 0 !== e.textures[this.uuid])
                        return e.textures[this.uuid];
                    var n = {
                        metadata: {
                            version: 4.5,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        center: [this.center.x, this.center.y],
                        rotation: this.rotation,
                        wrap: [this.wrapS, this.wrapT],
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY
                    };
                    if (void 0 !== this.image) {
                        var r = this.image;
                        void 0 === r.uuid && (r.uuid = Ll.generateUUID()),
                        i || void 0 !== e.images[r.uuid] || (e.images[r.uuid] = {
                            uuid: r.uuid,
                            url: t(r)
                        }),
                        n.image = r.uuid
                    }
                    return i || (e.textures[this.uuid] = n),
                    n
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function(e) {
                    if (this.mapping === vs) {
                        if (e.applyMatrix3(this.matrix),
                        e.x < 0 || e.x > 1)
                            switch (this.wrapS) {
                            case Ms:
                                e.x = e.x - Math.floor(e.x);
                                break;
                            case Es:
                                e.x = e.x < 0 ? 0 : 1;
                                break;
                            case Ss:
                                e.x = 1 === Math.abs(Math.floor(e.x) % 2) ? Math.ceil(e.x) - e.x : e.x - Math.floor(e.x)
                            }
                        if (e.y < 0 || e.y > 1)
                            switch (this.wrapT) {
                            case Ms:
                                e.y = e.y - Math.floor(e.y);
                                break;
                            case Es:
                                e.y = e.y < 0 ? 0 : 1;
                                break;
                            case Ss:
                                e.y = 1 === Math.abs(Math.floor(e.y) % 2) ? Math.ceil(e.y) - e.y : e.y - Math.floor(e.y)
                            }
                        this.flipY && (e.y = 1 - e.y)
                    }
                }
            }),
            Object.assign(l.prototype, {
                isVector4: !0,
                set: function(e, t, i, n) {
                    return this.x = e,
                    this.y = t,
                    this.z = i,
                    this.w = n,
                    this
                },
                setScalar: function(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this.w = e,
                    this
                },
                setX: function(e) {
                    return this.x = e,
                    this
                },
                setY: function(e) {
                    return this.y = e,
                    this
                },
                setZ: function(e) {
                    return this.z = e,
                    this
                },
                setW: function(e) {
                    return this.w = e,
                    this
                },
                setComponent: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    case 3:
                        this.w = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                },
                getComponent: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z,this.w)
                },
                copy: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this.w = void 0 !== e.w ? e.w : 1,
                    this
                },
                add: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
                    this.addVectors(e, t)) : (this.x += e.x,
                    this.y += e.y,
                    this.z += e.z,
                    this.w += e.w,
                    this)
                },
                addScalar: function(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this.w += e,
                    this
                },
                addVectors: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this.w = e.w + t.w,
                    this
                },
                addScaledVector: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this.w += e.w * t,
                    this
                },
                sub: function(e, t) {
                    return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
                    this.subVectors(e, t)) : (this.x -= e.x,
                    this.y -= e.y,
                    this.z -= e.z,
                    this.w -= e.w,
                    this)
                },
                subScalar: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this.w -= e,
                    this
                },
                subVectors: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this.w = e.w - t.w,
                    this
                },
                multiplyScalar: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this.w *= e,
                    this
                },
                applyMatrix4: function(e) {
                    var t = this.x
                      , i = this.y
                      , n = this.z
                      , r = this.w
                      , a = e.elements;
                    return this.x = a[0] * t + a[4] * i + a[8] * n + a[12] * r,
                    this.y = a[1] * t + a[5] * i + a[9] * n + a[13] * r,
                    this.z = a[2] * t + a[6] * i + a[10] * n + a[14] * r,
                    this.w = a[3] * t + a[7] * i + a[11] * n + a[15] * r,
                    this
                },
                divideScalar: function(e) {
                    return this.multiplyScalar(1 / e)
                },
                setAxisAngleFromQuaternion: function(e) {
                    this.w = 2 * Math.acos(e.w);
                    var t = Math.sqrt(1 - e.w * e.w);
                    return 1e-4 > t ? (this.x = 1,
                    this.y = 0,
                    this.z = 0) : (this.x = e.x / t,
                    this.y = e.y / t,
                    this.z = e.z / t),
                    this
                },
                setAxisAngleFromRotationMatrix: function(e) {
                    var t, i, n, r, a = .01, o = .1, s = e.elements, l = s[0], c = s[4], h = s[8], u = s[1], d = s[5], p = s[9], f = s[2], m = s[6], v = s[10];
                    if (Math.abs(c - u) < a && Math.abs(h - f) < a && Math.abs(p - m) < a) {
                        if (Math.abs(c + u) < o && Math.abs(h + f) < o && Math.abs(p + m) < o && Math.abs(l + d + v - 3) < o)
                            return this.set(1, 0, 0, 0),
                            this;
                        t = Math.PI;
                        var g = (l + 1) / 2
                          , y = (d + 1) / 2
                          , _ = (v + 1) / 2
                          , x = (c + u) / 4
                          , b = (h + f) / 4
                          , w = (p + m) / 4;
                        return g > y && g > _ ? a > g ? (i = 0,
                        n = .707106781,
                        r = .707106781) : (i = Math.sqrt(g),
                        n = x / i,
                        r = b / i) : y > _ ? a > y ? (i = .707106781,
                        n = 0,
                        r = .707106781) : (n = Math.sqrt(y),
                        i = x / n,
                        r = w / n) : a > _ ? (i = .707106781,
                        n = .707106781,
                        r = 0) : (r = Math.sqrt(_),
                        i = b / r,
                        n = w / r),
                        this.set(i, n, r, t),
                        this
                    }
                    var T = Math.sqrt((m - p) * (m - p) + (h - f) * (h - f) + (u - c) * (u - c));
                    return Math.abs(T) < .001 && (T = 1),
                    this.x = (m - p) / T,
                    this.y = (h - f) / T,
                    this.z = (u - c) / T,
                    this.w = Math.acos((l + d + v - 1) / 2),
                    this
                },
                min: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this.w = Math.min(this.w, e.w),
                    this
                },
                max: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this.w = Math.max(this.w, e.w),
                    this
                },
                clamp: function(e, t) {
                    return this.x = Math.max(e.x, Math.min(t.x, this.x)),
                    this.y = Math.max(e.y, Math.min(t.y, this.y)),
                    this.z = Math.max(e.z, Math.min(t.z, this.z)),
                    this.w = Math.max(e.w, Math.min(t.w, this.w)),
                    this
                },
                clampScalar: function() {
                    var e, t;
                    return function(i, n) {
                        return void 0 === e && (e = new l,
                        t = new l),
                        e.set(i, i, i, i),
                        t.set(n, n, n, n),
                        this.clamp(e, t)
                    }
                }(),
                clampLength: function(e, t) {
                    var i = this.length();
                    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(t, i)))
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
                },
                dot: function(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                },
                manhattanLength: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                },
                normalize: function() {
                    return this.divideScalar(this.length() || 1)
                },
                setLength: function(e) {
                    return this.normalize().multiplyScalar(e)
                },
                lerp: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this.w += (e.w - this.w) * t,
                    this
                },
                lerpVectors: function(e, t, i) {
                    return this.subVectors(t, e).multiplyScalar(i).add(e)
                },
                equals: function(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                },
                fromArray: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this.w = e[t + 3],
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e[t + 3] = this.w,
                    e
                },
                fromBufferAttribute: function(e, t, i) {
                    return void 0 !== i && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
                    this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this.w = e.getW(t),
                    this
                }
            }),
            Object.assign(c.prototype, t.prototype, {
                isWebGLRenderTarget: !0,
                setSize: function(e, t) {
                    (this.width !== e || this.height !== t) && (this.width = e,
                    this.height = t,
                    this.dispose()),
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.width = e.width,
                    this.height = e.height,
                    this.viewport.copy(e.viewport),
                    this.texture = e.texture.clone(),
                    this.depthBuffer = e.depthBuffer,
                    this.stencilBuffer = e.stencilBuffer,
                    this.depthTexture = e.depthTexture,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            h.prototype = Object.create(c.prototype),
            h.prototype.constructor = h,
            h.prototype.isWebGLRenderTargetCube = !0,
            u.prototype = Object.create(s.prototype),
            u.prototype.constructor = u,
            u.prototype.isDataTexture = !0,
            d.prototype = Object.create(s.prototype),
            d.prototype.constructor = d,
            d.prototype.isCubeTexture = !0,
            Object.defineProperty(d.prototype, "images", {
                get: function() {
                    return this.image
                },
                set: function(e) {
                    this.image = e
                }
            });
            var Ol = new s
              , Il = new d
              , Dl = []
              , Ul = []
              , Fl = new Float32Array(16)
              , kl = new Float32Array(9);
            j.prototype.setValue = function(e, t) {
                for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
                    var a = i[n];
                    a.setValue(e, t[a.id])
                }
            }
            ;
            var Nl = /([\w\d_]+)(\])?(\[|\.)?/g;
            X.prototype.setValue = function(e, t, i) {
                var n = this.map[t];
                void 0 !== n && n.setValue(e, i, this.renderer)
            }
            ,
            X.prototype.setOptional = function(e, t, i) {
                var n = t[i];
                void 0 !== n && this.setValue(e, i, n)
            }
            ,
            X.upload = function(e, t, i, n) {
                for (var r = 0, a = t.length; r !== a; ++r) {
                    var o = t[r]
                      , s = i[o.id];
                    s.needsUpdate !== !1 && o.setValue(e, s.value, n)
                }
            }
            ,
            X.seqWithValue = function(e, t) {
                for (var i = [], n = 0, r = e.length; n !== r; ++n) {
                    var a = e[n];
                    a.id in t && i.push(a)
                }
                return i
            }
            ;
            var zl = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            };
            Object.assign(Y.prototype, {
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function(e) {
                    return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e),
                    this
                },
                setScalar: function(e) {
                    return this.r = e,
                    this.g = e,
                    this.b = e,
                    this
                },
                setHex: function(e) {
                    return e = Math.floor(e),
                    this.r = (e >> 16 & 255) / 255,
                    this.g = (e >> 8 & 255) / 255,
                    this.b = (255 & e) / 255,
                    this
                },
                setRGB: function(e, t, i) {
                    return this.r = e,
                    this.g = t,
                    this.b = i,
                    this
                },
                setHSL: function() {
                    function e(e, t, i) {
                        return 0 > i && (i += 1),
                        i > 1 && (i -= 1),
                        1 / 6 > i ? e + 6 * (t - e) * i : .5 > i ? t : 2 / 3 > i ? e + 6 * (t - e) * (2 / 3 - i) : e
                    }
                    return function(t, i, n) {
                        if (t = Ll.euclideanModulo(t, 1),
                        i = Ll.clamp(i, 0, 1),
                        n = Ll.clamp(n, 0, 1),
                        0 === i)
                            this.r = this.g = this.b = n;
                        else {
                            var r = .5 >= n ? n * (1 + i) : n + i - n * i
                              , a = 2 * n - r;
                            this.r = e(a, r, t + 1 / 3),
                            this.g = e(a, r, t),
                            this.b = e(a, r, t - 1 / 3)
                        }
                        return this
                    }
                }(),
                setStyle: function(e) {
                    function t(t) {
                        void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                    }
                    var i;
                    if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                        var n, r = i[1], a = i[2];
                        switch (r) {
                        case "rgb":
                        case "rgba":
                            if (n = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(255, parseInt(n[1], 10)) / 255,
                                this.g = Math.min(255, parseInt(n[2], 10)) / 255,
                                this.b = Math.min(255, parseInt(n[3], 10)) / 255,
                                t(n[5]),
                                this;
                            if (n = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                                return this.r = Math.min(100, parseInt(n[1], 10)) / 100,
                                this.g = Math.min(100, parseInt(n[2], 10)) / 100,
                                this.b = Math.min(100, parseInt(n[3], 10)) / 100,
                                t(n[5]),
                                this;
                            break;
                        case "hsl":
                        case "hsla":
                            if (n = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                                var o = parseFloat(n[1]) / 360
                                  , s = parseInt(n[2], 10) / 100
                                  , l = parseInt(n[3], 10) / 100;
                                return t(n[5]),
                                this.setHSL(o, s, l)
                            }
                        }
                    } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                        var c = i[1]
                          , h = c.length;
                        if (3 === h)
                            return this.r = parseInt(c.charAt(0) + c.charAt(0), 16) / 255,
                            this.g = parseInt(c.charAt(1) + c.charAt(1), 16) / 255,
                            this.b = parseInt(c.charAt(2) + c.charAt(2), 16) / 255,
                            this;
                        if (6 === h)
                            return this.r = parseInt(c.charAt(0) + c.charAt(1), 16) / 255,
                            this.g = parseInt(c.charAt(2) + c.charAt(3), 16) / 255,
                            this.b = parseInt(c.charAt(4) + c.charAt(5), 16) / 255,
                            this
                    }
                    if (e && e.length > 0) {
                        var c = zl[e];
                        void 0 !== c ? this.setHex(c) : console.warn("THREE.Color: Unknown color " + e)
                    }
                    return this
                },
                clone: function() {
                    return new this.constructor(this.r,this.g,this.b)
                },
                copy: function(e) {
                    return this.r = e.r,
                    this.g = e.g,
                    this.b = e.b,
                    this
                },
                copyGammaToLinear: function(e, t) {
                    return void 0 === t && (t = 2),
                    this.r = Math.pow(e.r, t),
                    this.g = Math.pow(e.g, t),
                    this.b = Math.pow(e.b, t),
                    this
                },
                copyLinearToGamma: function(e, t) {
                    void 0 === t && (t = 2);
                    var i = t > 0 ? 1 / t : 1;
                    return this.r = Math.pow(e.r, i),
                    this.g = Math.pow(e.g, i),
                    this.b = Math.pow(e.b, i),
                    this
                },
                convertGammaToLinear: function() {
                    var e = this.r
                      , t = this.g
                      , i = this.b;
                    return this.r = e * e,
                    this.g = t * t,
                    this.b = i * i,
                    this
                },
                convertLinearToGamma: function() {
                    return this.r = Math.sqrt(this.r),
                    this.g = Math.sqrt(this.g),
                    this.b = Math.sqrt(this.b),
                    this
                },
                getHex: function() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function(e) {
                    var t, i, n = e || {
                        h: 0,
                        s: 0,
                        l: 0
                    }, r = this.r, a = this.g, o = this.b, s = Math.max(r, a, o), l = Math.min(r, a, o), c = (l + s) / 2;
                    if (l === s)
                        t = 0,
                        i = 0;
                    else {
                        var h = s - l;
                        switch (i = .5 >= c ? h / (s + l) : h / (2 - s - l),
                        s) {
                        case r:
                            t = (a - o) / h + (o > a ? 6 : 0);
                            break;
                        case a:
                            t = (o - r) / h + 2;
                            break;
                        case o:
                            t = (r - a) / h + 4
                        }
                        t /= 6
                    }
                    return n.h = t,
                    n.s = i,
                    n.l = c,
                    n
                },
                getStyle: function() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function(e, t, i) {
                    var n = this.getHSL();
                    return n.h += e,
                    n.s += t,
                    n.l += i,
                    this.setHSL(n.h, n.s, n.l),
                    this
                },
                add: function(e) {
                    return this.r += e.r,
                    this.g += e.g,
                    this.b += e.b,
                    this
                },
                addColors: function(e, t) {
                    return this.r = e.r + t.r,
                    this.g = e.g + t.g,
                    this.b = e.b + t.b,
                    this
                },
                addScalar: function(e) {
                    return this.r += e,
                    this.g += e,
                    this.b += e,
                    this
                },
                sub: function(e) {
                    return this.r = Math.max(0, this.r - e.r),
                    this.g = Math.max(0, this.g - e.g),
                    this.b = Math.max(0, this.b - e.b),
                    this
                },
                multiply: function(e) {
                    return this.r *= e.r,
                    this.g *= e.g,
                    this.b *= e.b,
                    this
                },
                multiplyScalar: function(e) {
                    return this.r *= e,
                    this.g *= e,
                    this.b *= e,
                    this
                },
                lerp: function(e, t) {
                    return this.r += (e.r - this.r) * t,
                    this.g += (e.g - this.g) * t,
                    this.b += (e.b - this.b) * t,
                    this
                },
                equals: function(e) {
                    return e.r === this.r && e.g === this.g && e.b === this.b
                },
                fromArray: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.r = e[t],
                    this.g = e[t + 1],
                    this.b = e[t + 2],
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this.r,
                    e[t + 1] = this.g,
                    e[t + 2] = this.b,
                    e
                },
                toJSON: function() {
                    return this.getHex()
                }
            });
            var Bl = {
                common: {
                    diffuse: {
                        value: new Y(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    uvTransform: {
                        value: new o
                    },
                    alphaMap: {
                        value: null
                    }
                },
                specularmap: {
                    specularMap: {
                        value: null
                    }
                },
                envmap: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new i(1,1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new Y(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {},
                            shadowCameraNear: {},
                            shadowCameraFar: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new Y(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    uvTransform: {
                        value: new o
                    }
                }
            }
              , Gl = {
                merge: function(e) {
                    for (var t = {}, i = 0; i < e.length; i++) {
                        var n = this.clone(e[i]);
                        for (var r in n)
                            t[r] = n[r]
                    }
                    return t
                },
                clone: function(e) {
                    var t = {};
                    for (var i in e) {
                        t[i] = {};
                        for (var n in e[i]) {
                            var r = e[i][n];
                            t[i][n] = r && (r.isColor || r.isMatrix3 || r.isMatrix4 || r.isVector2 || r.isVector3 || r.isVector4 || r.isTexture) ? r.clone() : Array.isArray(r) ? r.slice() : r
                        }
                    }
                    return t
                }
            }
              , Hl = "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n"
              , jl = "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n"
              , Vl = "#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n"
              , Wl = "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n"
              , Xl = "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif"
              , Yl = "\nvec3 transformed = vec3( position );\n"
              , ql = "\nvec3 objectNormal = vec3( normal );\n"
              , Zl = "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		return distanceFalloff * maxDistanceCutoffFactor;\n#else\n		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n	}\n	return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE  = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS  = 0.5 / LUT_SIZE;\n	float theta = acos( dot( N, V ) );\n	vec2 uv = vec2(\n		sqrt( saturate( roughness ) ),\n		saturate( theta / ( 0.5 * PI ) ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n	float b = 3.45068 + (4.18814 + y) * y;\n	float v = a / b;\n	float theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	vec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n	return result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n"
              , Ql = "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n"
              , Jl = "#if NUM_CLIPPING_PLANES > 0\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n		vec4 plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n		\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n			vec4 plane = clippingPlanes[ i ];\n			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		if ( clipped ) discard;\n	\n	#endif\n#endif\n"
              , Kl = "#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( PHYSICAL ) && ! defined( PHONG )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n"
              , $l = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	varying vec3 vViewPosition;\n#endif\n"
              , ec = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	vViewPosition = - mvPosition.xyz;\n#endif\n"
              , tc = "#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif"
              , ic = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n"
              , nc = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif"
              , rc = "#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif"
              , ac = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\n"
              , oc = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif\n"
              , sc = "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n"
              , lc = "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n"
              , cc = "#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n"
              , hc = "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n"
              , uc = "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n"
              , dc = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n"
              , pc = "\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.x, max( value.g, value.b ) );\n	float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M            = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.x, max( value.g, value.b ) );\n	float D      = max( maxRange / maxRGB, 1.0 );\n	D            = min( floor( D ) / 255.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n	vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n	Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract(Le);\n	vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n	return vec4( max(vRGB, 0.0), 1.0 );\n}\n"
              , fc = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		reflectVec = normalize( reflectVec );\n		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		reflectVec = normalize( reflectVec );\n		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n"
              , mc = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n	uniform float reflectivity;\n	uniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n		varying vec3 vWorldPosition;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n"
              , vc = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif\n"
              , gc = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif\n"
              , yc = "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif"
              , _c = "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n"
              , xc = "#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n"
              , bc = "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float fogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif\n"
              , wc = "#ifdef TOON\n	uniform sampler2D gradientMap;\n	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n		float dotNL = dot( normal, lightDirection );\n		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n		#ifdef USE_GRADIENTMAP\n			return texture2D( gradientMap, coord ).rgb;\n		#else\n			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n		#endif\n	}\n#endif\n"
              , Tc = "#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n"
              , Mc = "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif"
              , Ec = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n"
              , Sc = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n		float shadowCameraNear;\n		float shadowCameraFar;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		directLight.color = pointLight.color;\n		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n		directLight.visible = ( directLight.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( angleCos > spotLight.coneCos ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltcMat;	uniform sampler2D ltcMag;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n"
              , Ac = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n"
              , Pc = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	#ifdef TOON\n		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	#else\n		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n		vec3 irradiance = dotNL * directLight.color;\n	#endif\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n"
              , Cc = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n"
              , Lc = "struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n	#ifndef STANDARD\n		float clearCoat;\n		float clearCoatRoughness;\n	#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.specularRoughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos - halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		float norm = texture2D( ltcMag, uv ).a;\n		vec4 t = texture2D( ltcMat, uv );\n		mat3 mInv = mat3(\n			vec3(   1,   0, t.y ),\n			vec3(   0, t.z,   0 ),\n			vec3( t.w,   0, t.x )\n		);\n		reflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifndef STANDARD\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	#ifndef STANDARD\n		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	#ifndef STANDARD\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		float dotNL = dotNV;\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n	#ifndef STANDARD\n		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n"
              , Rc = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n		irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	#ifndef STANDARD\n		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n	#else\n		vec3 clearCoatRadiance = vec3( 0.0 );\n	#endif\n	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n"
              , Oc = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif"
              , Ic = "#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n"
              , Dc = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif"
              , Uc = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n		gl_Position.z *= gl_Position.w;\n	#endif\n#endif\n"
              , Fc = "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n"
              , kc = "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n"
              , Nc = "#ifdef USE_MAP\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n"
              , zc = "#ifdef USE_MAP\n	uniform mat3 uvTransform;\n	uniform sampler2D map;\n#endif\n"
              , Bc = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif\n"
              , Gc = "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif"
              , Hc = "#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n"
              , jc = "#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif"
              , Vc = "#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n"
              , Wc = "#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#endif\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n"
              , Xc = "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n"
              , Yc = "vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n"
              , qc = "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n"
              , Zc = "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n"
              , Qc = "#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n"
              , Jc = "#if defined( DITHERING )\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif\n"
              , Kc = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif\n"
              , $c = "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif"
              , eh = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			shadow = (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n"
              , th = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n"
              , ih = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n"
              , nh = "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n"
              , rh = "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif"
              , ah = "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n"
              , oh = "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n"
              , sh = "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n"
              , lh = "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif"
              , ch = "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif"
              , hh = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n"
              , uh = "#ifndef saturate\n	#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n"
              , dh = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif"
              , ph = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\n"
              , fh = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif"
              , mh = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif"
              , vh = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif"
              , gh = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif"
              , yh = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n	vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n"
              , _h = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	gl_FragColor.a *= opacity;\n}\n"
              , xh = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}\n"
              , bh = "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}\n"
              , wh = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n"
              , Th = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}\n"
              , Mh = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}\n"
              , Eh = "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n}\n"
              , Sh = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}\n"
              , Ah = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n"
              , Ph = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}\n"
              , Ch = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n"
              , Lh = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}\n"
              , Rh = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}\n"
              , Oh = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n"
              , Ih = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}\n"
              , Dh = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n"
              , Uh = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n	uniform float clearCoat;\n	uniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}\n"
              , Fh = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n"
              , kh = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n"
              , Nh = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}\n"
              , zh = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n"
              , Bh = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n"
              , Gh = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <fog_fragment>\n}\n"
              , Hh = "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}\n"
              , jh = {
                alphamap_fragment: Hl,
                alphamap_pars_fragment: jl,
                alphatest_fragment: Vl,
                aomap_fragment: Wl,
                aomap_pars_fragment: Xl,
                begin_vertex: Yl,
                beginnormal_vertex: ql,
                bsdfs: Zl,
                bumpmap_pars_fragment: Ql,
                clipping_planes_fragment: Jl,
                clipping_planes_pars_fragment: Kl,
                clipping_planes_pars_vertex: $l,
                clipping_planes_vertex: ec,
                color_fragment: tc,
                color_pars_fragment: ic,
                color_pars_vertex: nc,
                color_vertex: rc,
                common: ac,
                cube_uv_reflection_fragment: oc,
                defaultnormal_vertex: sc,
                displacementmap_pars_vertex: lc,
                displacementmap_vertex: cc,
                emissivemap_fragment: hc,
                emissivemap_pars_fragment: uc,
                encodings_fragment: dc,
                encodings_pars_fragment: pc,
                envmap_fragment: fc,
                envmap_pars_fragment: mc,
                envmap_pars_vertex: vc,
                envmap_vertex: gc,
                fog_vertex: yc,
                fog_pars_vertex: _c,
                fog_fragment: xc,
                fog_pars_fragment: bc,
                gradientmap_pars_fragment: wc,
                lightmap_fragment: Tc,
                lightmap_pars_fragment: Mc,
                lights_lambert_vertex: Ec,
                lights_pars: Sc,
                lights_phong_fragment: Ac,
                lights_phong_pars_fragment: Pc,
                lights_physical_fragment: Cc,
                lights_physical_pars_fragment: Lc,
                lights_template: Rc,
                logdepthbuf_fragment: Oc,
                logdepthbuf_pars_fragment: Ic,
                logdepthbuf_pars_vertex: Dc,
                logdepthbuf_vertex: Uc,
                map_fragment: Fc,
                map_pars_fragment: kc,
                map_particle_fragment: Nc,
                map_particle_pars_fragment: zc,
                metalnessmap_fragment: Bc,
                metalnessmap_pars_fragment: Gc,
                morphnormal_vertex: Hc,
                morphtarget_pars_vertex: jc,
                morphtarget_vertex: Vc,
                normal_fragment: Wc,
                normalmap_pars_fragment: Xc,
                packing: Yc,
                premultiplied_alpha_fragment: qc,
                project_vertex: Zc,
                dithering_fragment: Qc,
                dithering_pars_fragment: Jc,
                roughnessmap_fragment: Kc,
                roughnessmap_pars_fragment: $c,
                shadowmap_pars_fragment: eh,
                shadowmap_pars_vertex: th,
                shadowmap_vertex: ih,
                shadowmask_pars_fragment: nh,
                skinbase_vertex: rh,
                skinning_pars_vertex: ah,
                skinning_vertex: oh,
                skinnormal_vertex: sh,
                specularmap_fragment: lh,
                specularmap_pars_fragment: ch,
                tonemapping_fragment: hh,
                tonemapping_pars_fragment: uh,
                uv_pars_fragment: dh,
                uv_pars_vertex: ph,
                uv_vertex: fh,
                uv2_pars_fragment: mh,
                uv2_pars_vertex: vh,
                uv2_vertex: gh,
                worldpos_vertex: yh,
                cube_frag: _h,
                cube_vert: xh,
                depth_frag: bh,
                depth_vert: wh,
                distanceRGBA_frag: Th,
                distanceRGBA_vert: Mh,
                equirect_frag: Eh,
                equirect_vert: Sh,
                linedashed_frag: Ah,
                linedashed_vert: Ph,
                meshbasic_frag: Ch,
                meshbasic_vert: Lh,
                meshlambert_frag: Rh,
                meshlambert_vert: Oh,
                meshphong_frag: Ih,
                meshphong_vert: Dh,
                meshphysical_frag: Uh,
                meshphysical_vert: Fh,
                normal_frag: kh,
                normal_vert: Nh,
                points_frag: zh,
                points_vert: Bh,
                shadow_frag: Gh,
                shadow_vert: Hh
            }
              , Vh = {
                basic: {
                    uniforms: Gl.merge([Bl.common, Bl.specularmap, Bl.envmap, Bl.aomap, Bl.lightmap, Bl.fog]),
                    vertexShader: jh.meshbasic_vert,
                    fragmentShader: jh.meshbasic_frag
                },
                lambert: {
                    uniforms: Gl.merge([Bl.common, Bl.specularmap, Bl.envmap, Bl.aomap, Bl.lightmap, Bl.emissivemap, Bl.fog, Bl.lights, {
                        emissive: {
                            value: new Y(0)
                        }
                    }]),
                    vertexShader: jh.meshlambert_vert,
                    fragmentShader: jh.meshlambert_frag
                },
                phong: {
                    uniforms: Gl.merge([Bl.common, Bl.specularmap, Bl.envmap, Bl.aomap, Bl.lightmap, Bl.emissivemap, Bl.bumpmap, Bl.normalmap, Bl.displacementmap, Bl.gradientmap, Bl.fog, Bl.lights, {
                        emissive: {
                            value: new Y(0)
                        },
                        specular: {
                            value: new Y(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: jh.meshphong_vert,
                    fragmentShader: jh.meshphong_frag
                },
                standard: {
                    uniforms: Gl.merge([Bl.common, Bl.envmap, Bl.aomap, Bl.lightmap, Bl.emissivemap, Bl.bumpmap, Bl.normalmap, Bl.displacementmap, Bl.roughnessmap, Bl.metalnessmap, Bl.fog, Bl.lights, {
                        emissive: {
                            value: new Y(0)
                        },
                        roughness: {
                            value: .5
                        },
                        metalness: {
                            value: .5
                        },
                        envMapIntensity: {
                            value: 1
                        }
                    }]),
                    vertexShader: jh.meshphysical_vert,
                    fragmentShader: jh.meshphysical_frag
                },
                points: {
                    uniforms: Gl.merge([Bl.points, Bl.fog]),
                    vertexShader: jh.points_vert,
                    fragmentShader: jh.points_frag
                },
                dashed: {
                    uniforms: Gl.merge([Bl.common, Bl.fog, {
                        scale: {
                            value: 1
                        },
                        dashSize: {
                            value: 1
                        },
                        totalSize: {
                            value: 2
                        }
                    }]),
                    vertexShader: jh.linedashed_vert,
                    fragmentShader: jh.linedashed_frag
                },
                depth: {
                    uniforms: Gl.merge([Bl.common, Bl.displacementmap]),
                    vertexShader: jh.depth_vert,
                    fragmentShader: jh.depth_frag
                },
                normal: {
                    uniforms: Gl.merge([Bl.common, Bl.bumpmap, Bl.normalmap, Bl.displacementmap, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: jh.normal_vert,
                    fragmentShader: jh.normal_frag
                },
                cube: {
                    uniforms: {
                        tCube: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        },
                        opacity: {
                            value: 1
                        }
                    },
                    vertexShader: jh.cube_vert,
                    fragmentShader: jh.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        }
                    },
                    vertexShader: jh.equirect_vert,
                    fragmentShader: jh.equirect_frag
                },
                distanceRGBA: {
                    uniforms: Gl.merge([Bl.common, Bl.displacementmap, {
                        referencePosition: {
                            value: new a
                        },
                        nearDistance: {
                            value: 1
                        },
                        farDistance: {
                            value: 1e3
                        }
                    }]),
                    vertexShader: jh.distanceRGBA_vert,
                    fragmentShader: jh.distanceRGBA_frag
                },
                shadow: {
                    uniforms: Gl.merge([Bl.lights, Bl.fog, {
                        color: {
                            value: new Y(0)
                        },
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: jh.shadow_vert,
                    fragmentShader: jh.shadow_frag
                }
            };
            Vh.physical = {
                uniforms: Gl.merge([Vh.standard.uniforms, {
                    clearCoat: {
                        value: 0
                    },
                    clearCoatRoughness: {
                        value: 0
                    }
                }]),
                vertexShader: jh.meshphysical_vert,
                fragmentShader: jh.meshphysical_frag
            },
            Object.assign(q.prototype, {
                set: function(e, t) {
                    return this.min.copy(e),
                    this.max.copy(t),
                    this
                },
                setFromPoints: function(e) {
                    this.makeEmpty();
                    for (var t = 0, i = e.length; i > t; t++)
                        this.expandByPoint(e[t]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var e = new i;
                    return function(t, i) {
                        var n = e.copy(i).multiplyScalar(.5);
                        return this.min.copy(t).sub(n),
                        this.max.copy(t).add(n),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.min.copy(e.min),
                    this.max.copy(e.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = +1 / 0,
                    this.max.x = this.max.y = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                getCenter: function(e) {
                    var t = e || new i;
                    return this.isEmpty() ? t.set(0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(e) {
                    var t = e || new i;
                    return this.isEmpty() ? t.set(0, 0) : t.subVectors(this.max, this.min)
                },
                expandByPoint: function(e) {
                    return this.min.min(e),
                    this.max.max(e),
                    this
                },
                expandByVector: function(e) {
                    return this.min.sub(e),
                    this.max.add(e),
                    this
                },
                expandByScalar: function(e) {
                    return this.min.addScalar(-e),
                    this.max.addScalar(e),
                    this
                },
                containsPoint: function(e) {
                    return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y ? !1 : !0
                },
                containsBox: function(e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
                },
                getParameter: function(e, t) {
                    var n = t || new i;
                    return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function(e) {
                    return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y ? !1 : !0
                },
                clampPoint: function(e, t) {
                    var n = t || new i;
                    return n.copy(e).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var e = new i;
                    return function(t) {
                        var i = e.copy(t).clamp(this.min, this.max);
                        return i.sub(t).length()
                    }
                }(),
                intersect: function(e) {
                    return this.min.max(e.min),
                    this.max.min(e.max),
                    this
                },
                union: function(e) {
                    return this.min.min(e.min),
                    this.max.max(e.max),
                    this
                },
                translate: function(e) {
                    return this.min.add(e),
                    this.max.add(e),
                    this
                },
                equals: function(e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            }),
            Q.prototype = Object.create(s.prototype),
            Q.prototype.constructor = Q;
            var Wh = 0;
            Object.assign(K.prototype, t.prototype, {
                isMaterial: !0,
                onBeforeCompile: function() {},
                setValues: function(e) {
                    if (void 0 !== e)
                        for (var t in e) {
                            var i = e[t];
                            if (void 0 !== i)
                                if ("shading" !== t) {
                                    var n = this[t];
                                    void 0 !== n ? n && n.isColor ? n.set(i) : n && n.isVector3 && i && i.isVector3 ? n.copy(i) : this[t] = "overdraw" === t ? Number(i) : i : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                                } else
                                    console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                                    this.flatShading = i === Ao ? !0 : !1;
                            else
                                console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                        }
                },
                toJSON: function(e) {
                    function t(e) {
                        var t = [];
                        for (var i in e) {
                            var n = e[i];
                            delete n.metadata,
                            t.push(n)
                        }
                        return t
                    }
                    var i = void 0 === e || "string" == typeof e;
                    i && (e = {
                        textures: {},
                        images: {}
                    });
                    var n = {
                        metadata: {
                            version: 4.5,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    if (n.uuid = this.uuid,
                    n.type = this.type,
                    "" !== this.name && (n.name = this.name),
                    this.color && this.color.isColor && (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
                    1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearCoat && (n.clearCoat = this.clearCoat),
                    void 0 !== this.clearCoatRoughness && (n.clearCoatRoughness = this.clearCoatRoughness),
                    this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
                    this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid),
                    this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid,
                    n.bumpScale = this.bumpScale),
                    this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid,
                    n.normalScale = this.normalScale.toArray()),
                    this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid,
                    n.displacementScale = this.displacementScale,
                    n.displacementBias = this.displacementBias),
                    this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid,
                    n.reflectivity = this.reflectivity),
                    this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.size && (n.size = this.size),
                    void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== Io && (n.blending = this.blending),
                    this.flatShading === !0 && (n.flatShading = this.flatShading),
                    this.side !== Mo && (n.side = this.side),
                    this.vertexColors !== Co && (n.vertexColors = this.vertexColors),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    this.transparent === !0 && (n.transparent = this.transparent),
                    n.depthFunc = this.depthFunc,
                    n.depthTest = this.depthTest,
                    n.depthWrite = this.depthWrite,
                    0 !== this.rotation && (n.rotation = this.rotation),
                    1 !== this.linewidth && (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    this.dithering === !0 && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha),
                    this.wireframe === !0 && (n.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
                    this.morphTargets === !0 && (n.morphTargets = !0),
                    this.skinning === !0 && (n.skinning = !0),
                    this.visible === !1 && (n.visible = !1),
                    "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData),
                    i) {
                        var r = t(e.textures)
                          , a = t(e.images);
                        r.length > 0 && (n.textures = r),
                        a.length > 0 && (n.images = a)
                    }
                    return n
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    this.name = e.name,
                    this.fog = e.fog,
                    this.lights = e.lights,
                    this.blending = e.blending,
                    this.side = e.side,
                    this.flatShading = e.flatShading,
                    this.vertexColors = e.vertexColors,
                    this.opacity = e.opacity,
                    this.transparent = e.transparent,
                    this.blendSrc = e.blendSrc,
                    this.blendDst = e.blendDst,
                    this.blendEquation = e.blendEquation,
                    this.blendSrcAlpha = e.blendSrcAlpha,
                    this.blendDstAlpha = e.blendDstAlpha,
                    this.blendEquationAlpha = e.blendEquationAlpha,
                    this.depthFunc = e.depthFunc,
                    this.depthTest = e.depthTest,
                    this.depthWrite = e.depthWrite,
                    this.colorWrite = e.colorWrite,
                    this.precision = e.precision,
                    this.polygonOffset = e.polygonOffset,
                    this.polygonOffsetFactor = e.polygonOffsetFactor,
                    this.polygonOffsetUnits = e.polygonOffsetUnits,
                    this.dithering = e.dithering,
                    this.alphaTest = e.alphaTest,
                    this.premultipliedAlpha = e.premultipliedAlpha,
                    this.overdraw = e.overdraw,
                    this.visible = e.visible,
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    this.clipShadows = e.clipShadows,
                    this.clipIntersection = e.clipIntersection;
                    var t = e.clippingPlanes
                      , i = null;
                    if (null !== t) {
                        var n = t.length;
                        i = new Array(n);
                        for (var r = 0; r !== n; ++r)
                            i[r] = t[r].clone()
                    }
                    return this.clippingPlanes = i,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            $.prototype = Object.create(K.prototype),
            $.prototype.constructor = $,
            $.prototype.isMeshDepthMaterial = !0,
            $.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.depthPacking = e.depthPacking,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this
            }
            ,
            et.prototype = Object.create(K.prototype),
            et.prototype.constructor = et,
            et.prototype.isMeshDistanceMaterial = !0,
            et.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.referencePosition.copy(e.referencePosition),
                this.nearDistance = e.nearDistance,
                this.farDistance = e.farDistance,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.map = e.map,
                this.alphaMap = e.alphaMap,
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this
            }
            ,
            Object.assign(tt.prototype, {
                isBox3: !0,
                set: function(e, t) {
                    return this.min.copy(e),
                    this.max.copy(t),
                    this
                },
                setFromArray: function(e) {
                    for (var t = +1 / 0, i = +1 / 0, n = +1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.length; l > s; s += 3) {
                        var c = e[s]
                          , h = e[s + 1]
                          , u = e[s + 2];
                        t > c && (t = c),
                        i > h && (i = h),
                        n > u && (n = u),
                        c > r && (r = c),
                        h > a && (a = h),
                        u > o && (o = u)
                    }
                    return this.min.set(t, i, n),
                    this.max.set(r, a, o),
                    this
                },
                setFromBufferAttribute: function(e) {
                    for (var t = +1 / 0, i = +1 / 0, n = +1 / 0, r = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.count; l > s; s++) {
                        var c = e.getX(s)
                          , h = e.getY(s)
                          , u = e.getZ(s);
                        t > c && (t = c),
                        i > h && (i = h),
                        n > u && (n = u),
                        c > r && (r = c),
                        h > a && (a = h),
                        u > o && (o = u)
                    }
                    return this.min.set(t, i, n),
                    this.max.set(r, a, o),
                    this
                },
                setFromPoints: function(e) {
                    this.makeEmpty();
                    for (var t = 0, i = e.length; i > t; t++)
                        this.expandByPoint(e[t]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var e = new a;
                    return function(t, i) {
                        var n = e.copy(i).multiplyScalar(.5);
                        return this.min.copy(t).sub(n),
                        this.max.copy(t).add(n),
                        this
                    }
                }(),
                setFromObject: function(e) {
                    return this.makeEmpty(),
                    this.expandByObject(e)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.min.copy(e.min),
                    this.max.copy(e.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = this.min.z = +1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                getCenter: function(e) {
                    var t = e || new a;
                    return this.isEmpty() ? t.set(0, 0, 0) : t.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(e) {
                    var t = e || new a;
                    return this.isEmpty() ? t.set(0, 0, 0) : t.subVectors(this.max, this.min)
                },
                expandByPoint: function(e) {
                    return this.min.min(e),
                    this.max.max(e),
                    this
                },
                expandByVector: function(e) {
                    return this.min.sub(e),
                    this.max.add(e),
                    this
                },
                expandByScalar: function(e) {
                    return this.min.addScalar(-e),
                    this.max.addScalar(e),
                    this
                },
                expandByObject: function() {
                    function e(e) {
                        var a = e.geometry;
                        if (void 0 !== a)
                            if (a.isGeometry) {
                                var o = a.vertices;
                                for (i = 0,
                                n = o.length; n > i; i++)
                                    r.copy(o[i]),
                                    r.applyMatrix4(e.matrixWorld),
                                    t.expandByPoint(r)
                            } else if (a.isBufferGeometry) {
                                var s = a.attributes.position;
                                if (void 0 !== s)
                                    for (i = 0,
                                    n = s.count; n > i; i++)
                                        r.fromBufferAttribute(s, i).applyMatrix4(e.matrixWorld),
                                        t.expandByPoint(r)
                            }
                    }
                    var t, i, n, r = new a;
                    return function(i) {
                        return t = this,
                        i.updateMatrixWorld(!0),
                        i.traverse(e),
                        this
                    }
                }(),
                containsPoint: function(e) {
                    return e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z ? !1 : !0
                },
                containsBox: function(e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                },
                getParameter: function(e, t) {
                    var i = t || new a;
                    return i.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function(e) {
                    return e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z ? !1 : !0
                },
                intersectsSphere: function() {
                    var e = new a;
                    return function(t) {
                        return this.clampPoint(t.center, e),
                        e.distanceToSquared(t.center) <= t.radius * t.radius
                    }
                }(),
                intersectsPlane: function(e) {
                    var t, i;
                    return e.normal.x > 0 ? (t = e.normal.x * this.min.x,
                    i = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x,
                    i = e.normal.x * this.min.x),
                    e.normal.y > 0 ? (t += e.normal.y * this.min.y,
                    i += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y,
                    i += e.normal.y * this.min.y),
                    e.normal.z > 0 ? (t += e.normal.z * this.min.z,
                    i += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z,
                    i += e.normal.z * this.min.z),
                    t <= e.constant && i >= e.constant
                },
                clampPoint: function(e, t) {
                    var i = t || new a;
                    return i.copy(e).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var e = new a;
                    return function(t) {
                        var i = e.copy(t).clamp(this.min, this.max);
                        return i.sub(t).length()
                    }
                }(),
                getBoundingSphere: function() {
                    var e = new a;
                    return function(t) {
                        var i = t || new it;
                        return this.getCenter(i.center),
                        i.radius = .5 * this.getSize(e).length(),
                        i
                    }
                }(),
                intersect: function(e) {
                    return this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                },
                union: function(e) {
                    return this.min.min(e.min),
                    this.max.max(e.max),
                    this
                },
                applyMatrix4: function() {
                    var e = [new a, new a, new a, new a, new a, new a, new a, new a];
                    return function(t) {
                        return this.isEmpty() ? this : (e[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(t),
                        e[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(t),
                        e[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(t),
                        e[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(t),
                        e[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(t),
                        e[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(t),
                        e[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(t),
                        e[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(t),
                        this.setFromPoints(e),
                        this)
                    }
                }(),
                translate: function(e) {
                    return this.min.add(e),
                    this.max.add(e),
                    this
                },
                equals: function(e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            }),
            Object.assign(it.prototype, {
                set: function(e, t) {
                    return this.center.copy(e),
                    this.radius = t,
                    this
                },
                setFromPoints: function() {
                    var e = new tt;
                    return function(t, i) {
                        var n = this.center;
                        void 0 !== i ? n.copy(i) : e.setFromPoints(t).getCenter(n);
                        for (var r = 0, a = 0, o = t.length; o > a; a++)
                            r = Math.max(r, n.distanceToSquared(t[a]));
                        return this.radius = Math.sqrt(r),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.center.copy(e.center),
                    this.radius = e.radius,
                    this
                },
                empty: function() {
                    return this.radius <= 0
                },
                containsPoint: function(e) {
                    return e.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function(e) {
                    return e.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function(e) {
                    var t = this.radius + e.radius;
                    return e.center.distanceToSquared(this.center) <= t * t
                },
                intersectsBox: function(e) {
                    return e.intersectsSphere(this)
                },
                intersectsPlane: function(e) {
                    return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                },
                clampPoint: function(e, t) {
                    var i = this.center.distanceToSquared(e)
                      , n = t || new a;
                    return n.copy(e),
                    i > this.radius * this.radius && (n.sub(this.center).normalize(),
                    n.multiplyScalar(this.radius).add(this.center)),
                    n
                },
                getBoundingBox: function(e) {
                    var t = e || new tt;
                    return t.set(this.center, this.center),
                    t.expandByScalar(this.radius),
                    t
                },
                applyMatrix4: function(e) {
                    return this.center.applyMatrix4(e),
                    this.radius = this.radius * e.getMaxScaleOnAxis(),
                    this
                },
                translate: function(e) {
                    return this.center.add(e),
                    this
                },
                equals: function(e) {
                    return e.center.equals(this.center) && e.radius === this.radius
                }
            }),
            Object.assign(nt.prototype, {
                set: function(e, t) {
                    return this.normal.copy(e),
                    this.constant = t,
                    this
                },
                setComponents: function(e, t, i, n) {
                    return this.normal.set(e, t, i),
                    this.constant = n,
                    this
                },
                setFromNormalAndCoplanarPoint: function(e, t) {
                    return this.normal.copy(e),
                    this.constant = -t.dot(this.normal),
                    this
                },
                setFromCoplanarPoints: function() {
                    var e = new a
                      , t = new a;
                    return function(i, n, r) {
                        var a = e.subVectors(r, n).cross(t.subVectors(i, n)).normalize();
                        return this.setFromNormalAndCoplanarPoint(a, i),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.normal.copy(e.normal),
                    this.constant = e.constant,
                    this
                },
                normalize: function() {
                    var e = 1 / this.normal.length();
                    return this.normal.multiplyScalar(e),
                    this.constant *= e,
                    this
                },
                negate: function() {
                    return this.constant *= -1,
                    this.normal.negate(),
                    this
                },
                distanceToPoint: function(e) {
                    return this.normal.dot(e) + this.constant
                },
                distanceToSphere: function(e) {
                    return this.distanceToPoint(e.center) - e.radius
                },
                projectPoint: function(e, t) {
                    var i = t || new a;
                    return i.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
                },
                intersectLine: function() {
                    var e = new a;
                    return function(t, i) {
                        var n = i || new a
                          , r = t.delta(e)
                          , o = this.normal.dot(r);
                        if (0 === o)
                            return 0 === this.distanceToPoint(t.start) ? n.copy(t.start) : void 0;
                        var s = -(t.start.dot(this.normal) + this.constant) / o;
                        return 0 > s || s > 1 ? void 0 : n.copy(r).multiplyScalar(s).add(t.start)
                    }
                }(),
                intersectsLine: function(e) {
                    var t = this.distanceToPoint(e.start)
                      , i = this.distanceToPoint(e.end);
                    return 0 > t && i > 0 || 0 > i && t > 0
                },
                intersectsBox: function(e) {
                    return e.intersectsPlane(this)
                },
                intersectsSphere: function(e) {
                    return e.intersectsPlane(this)
                },
                coplanarPoint: function(e) {
                    var t = e || new a;
                    return t.copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function() {
                    var e = new a
                      , t = new o;
                    return function(i, n) {
                        var r = n || t.getNormalMatrix(i)
                          , a = this.coplanarPoint(e).applyMatrix4(i)
                          , o = this.normal.applyMatrix3(r).normalize();
                        return this.constant = -a.dot(o),
                        this
                    }
                }(),
                translate: function(e) {
                    return this.constant -= e.dot(this.normal),
                    this
                },
                equals: function(e) {
                    return e.normal.equals(this.normal) && e.constant === this.constant
                }
            }),
            Object.assign(rt.prototype, {
                set: function(e, t, i, n, r, a) {
                    var o = this.planes;
                    return o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(i),
                    o[3].copy(n),
                    o[4].copy(r),
                    o[5].copy(a),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    for (var t = this.planes, i = 0; 6 > i; i++)
                        t[i].copy(e.planes[i]);
                    return this
                },
                setFromMatrix: function(e) {
                    var t = this.planes
                      , i = e.elements
                      , n = i[0]
                      , r = i[1]
                      , a = i[2]
                      , o = i[3]
                      , s = i[4]
                      , l = i[5]
                      , c = i[6]
                      , h = i[7]
                      , u = i[8]
                      , d = i[9]
                      , p = i[10]
                      , f = i[11]
                      , m = i[12]
                      , v = i[13]
                      , g = i[14]
                      , y = i[15];
                    return t[0].setComponents(o - n, h - s, f - u, y - m).normalize(),
                    t[1].setComponents(o + n, h + s, f + u, y + m).normalize(),
                    t[2].setComponents(o + r, h + l, f + d, y + v).normalize(),
                    t[3].setComponents(o - r, h - l, f - d, y - v).normalize(),
                    t[4].setComponents(o - a, h - c, f - p, y - g).normalize(),
                    t[5].setComponents(o + a, h + c, f + p, y + g).normalize(),
                    this
                },
                intersectsObject: function() {
                    var e = new it;
                    return function(t) {
                        var i = t.geometry;
                        return null === i.boundingSphere && i.computeBoundingSphere(),
                        e.copy(i.boundingSphere).applyMatrix4(t.matrixWorld),
                        this.intersectsSphere(e)
                    }
                }(),
                intersectsSprite: function() {
                    var e = new it;
                    return function(t) {
                        return e.center.set(0, 0, 0),
                        e.radius = .7071067811865476,
                        e.applyMatrix4(t.matrixWorld),
                        this.intersectsSphere(e)
                    }
                }(),
                intersectsSphere: function(e) {
                    for (var t = this.planes, i = e.center, n = -e.radius, r = 0; 6 > r; r++) {
                        var a = t[r].distanceToPoint(i);
                        if (n > a)
                            return !1
                    }
                    return !0
                },
                intersectsBox: function() {
                    var e = new a
                      , t = new a;
                    return function(i) {
                        for (var n = this.planes, r = 0; 6 > r; r++) {
                            var a = n[r];
                            e.x = a.normal.x > 0 ? i.min.x : i.max.x,
                            t.x = a.normal.x > 0 ? i.max.x : i.min.x,
                            e.y = a.normal.y > 0 ? i.min.y : i.max.y,
                            t.y = a.normal.y > 0 ? i.max.y : i.min.y,
                            e.z = a.normal.z > 0 ? i.min.z : i.max.z,
                            t.z = a.normal.z > 0 ? i.max.z : i.min.z;
                            var o = a.distanceToPoint(e)
                              , s = a.distanceToPoint(t);
                            if (0 > o && 0 > s)
                                return !1
                        }
                        return !0
                    }
                }(),
                containsPoint: function(e) {
                    for (var t = this.planes, i = 0; 6 > i; i++)
                        if (t[i].distanceToPoint(e) < 0)
                            return !1;
                    return !0
                }
            }),
            st.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
            st.DefaultOrder = "XYZ",
            Object.defineProperties(st.prototype, {
                x: {
                    get: function() {
                        return this._x
                    },
                    set: function(e) {
                        this._x = e,
                        this.onChangeCallback()
                    }
                },
                y: {
                    get: function() {
                        return this._y
                    },
                    set: function(e) {
                        this._y = e,
                        this.onChangeCallback()
                    }
                },
                z: {
                    get: function() {
                        return this._z
                    },
                    set: function(e) {
                        this._z = e,
                        this.onChangeCallback()
                    }
                },
                order: {
                    get: function() {
                        return this._order
                    },
                    set: function(e) {
                        this._order = e,
                        this.onChangeCallback()
                    }
                }
            }),
            Object.assign(st.prototype, {
                isEuler: !0,
                set: function(e, t, i, n) {
                    return this._x = e,
                    this._y = t,
                    this._z = i,
                    this._order = n || this._order,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._order)
                },
                copy: function(e) {
                    return this._x = e._x,
                    this._y = e._y,
                    this._z = e._z,
                    this._order = e._order,
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(e, t, i) {
                    var n = Ll.clamp
                      , r = e.elements
                      , a = r[0]
                      , o = r[4]
                      , s = r[8]
                      , l = r[1]
                      , c = r[5]
                      , h = r[9]
                      , u = r[2]
                      , d = r[6]
                      , p = r[10];
                    return t = t || this._order,
                    "XYZ" === t ? (this._y = Math.asin(n(s, -1, 1)),
                    Math.abs(s) < .99999 ? (this._x = Math.atan2(-h, p),
                    this._z = Math.atan2(-o, a)) : (this._x = Math.atan2(d, c),
                    this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-n(h, -1, 1)),
                    Math.abs(h) < .99999 ? (this._y = Math.atan2(s, p),
                    this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, a),
                    this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(n(d, -1, 1)),
                    Math.abs(d) < .99999 ? (this._y = Math.atan2(-u, p),
                    this._z = Math.atan2(-o, c)) : (this._y = 0,
                    this._z = Math.atan2(l, a))) : "ZYX" === t ? (this._y = Math.asin(-n(u, -1, 1)),
                    Math.abs(u) < .99999 ? (this._x = Math.atan2(d, p),
                    this._z = Math.atan2(l, a)) : (this._x = 0,
                    this._z = Math.atan2(-o, c))) : "YZX" === t ? (this._z = Math.asin(n(l, -1, 1)),
                    Math.abs(l) < .99999 ? (this._x = Math.atan2(-h, c),
                    this._y = Math.atan2(-u, a)) : (this._x = 0,
                    this._y = Math.atan2(s, p))) : "XZY" === t ? (this._z = Math.asin(-n(o, -1, 1)),
                    Math.abs(o) < .99999 ? (this._x = Math.atan2(d, c),
                    this._y = Math.atan2(s, a)) : (this._x = Math.atan2(-h, p),
                    this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t),
                    this._order = t,
                    i !== !1 && this.onChangeCallback(),
                    this
                },
                setFromQuaternion: function() {
                    var e = new n;
                    return function(t, i, n) {
                        return e.makeRotationFromQuaternion(t),
                        this.setFromRotationMatrix(e, i, n)
                    }
                }(),
                setFromVector3: function(e, t) {
                    return this.set(e.x, e.y, e.z, t || this._order)
                },
                reorder: function() {
                    var e = new r;
                    return function(t) {
                        return e.setFromEuler(this),
                        this.setFromQuaternion(e, t)
                    }
                }(),
                equals: function(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                },
                fromArray: function(e) {
                    return this._x = e[0],
                    this._y = e[1],
                    this._z = e[2],
                    void 0 !== e[3] && (this._order = e[3]),
                    this.onChangeCallback(),
                    this
                },
                toArray: function(e, t) {
                    return void 0 === e && (e = []),
                    void 0 === t && (t = 0),
                    e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._order,
                    e
                },
                toVector3: function(e) {
                    return e ? e.set(this._x, this._y, this._z) : new a(this._x,this._y,this._z)
                },
                onChange: function(e) {
                    return this.onChangeCallback = e,
                    this
                },
                onChangeCallback: function() {}
            }),
            Object.assign(lt.prototype, {
                set: function(e) {
                    this.mask = 1 << e | 0
                },
                enable: function(e) {
                    this.mask |= 1 << e | 0
                },
                toggle: function(e) {
                    this.mask ^= 1 << e | 0
                },
                disable: function(e) {
                    this.mask &= ~(1 << e | 0)
                },
                test: function(e) {
                    return 0 !== (this.mask & e.mask)
                }
            });
            var Xh = 0;
            ct.DefaultUp = new a(0,1,0),
            ct.DefaultMatrixAutoUpdate = !0,
            Object.assign(ct.prototype, t.prototype, {
                isObject3D: !0,
                onBeforeRender: function() {},
                onAfterRender: function() {},
                applyMatrix: function(e) {
                    this.matrix.multiplyMatrices(e, this.matrix),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                applyQuaternion: function(e) {
                    return this.quaternion.premultiply(e),
                    this
                },
                setRotationFromAxisAngle: function(e, t) {
                    this.quaternion.setFromAxisAngle(e, t)
                },
                setRotationFromEuler: function(e) {
                    this.quaternion.setFromEuler(e, !0)
                },
                setRotationFromMatrix: function(e) {
                    this.quaternion.setFromRotationMatrix(e)
                },
                setRotationFromQuaternion: function(e) {
                    this.quaternion.copy(e)
                },
                rotateOnAxis: function() {
                    var e = new r;
                    return function(t, i) {
                        return e.setFromAxisAngle(t, i),
                        this.quaternion.multiply(e),
                        this
                    }
                }(),
                rotateOnWorldAxis: function() {
                    var e = new r;
                    return function(t, i) {
                        return e.setFromAxisAngle(t, i),
                        this.quaternion.premultiply(e),
                        this
                    }
                }(),
                rotateX: function() {
                    var e = new a(1,0,0);
                    return function(t) {
                        return this.rotateOnAxis(e, t)
                    }
                }(),
                rotateY: function() {
                    var e = new a(0,1,0);
                    return function(t) {
                        return this.rotateOnAxis(e, t)
                    }
                }(),
                rotateZ: function() {
                    var e = new a(0,0,1);
                    return function(t) {
                        return this.rotateOnAxis(e, t)
                    }
                }(),
                translateOnAxis: function() {
                    var e = new a;
                    return function(t, i) {
                        return e.copy(t).applyQuaternion(this.quaternion),
                        this.position.add(e.multiplyScalar(i)),
                        this
                    }
                }(),
                translateX: function() {
                    var e = new a(1,0,0);
                    return function(t) {
                        return this.translateOnAxis(e, t)
                    }
                }(),
                translateY: function() {
                    var e = new a(0,1,0);
                    return function(t) {
                        return this.translateOnAxis(e, t)
                    }
                }(),
                translateZ: function() {
                    var e = new a(0,0,1);
                    return function(t) {
                        return this.translateOnAxis(e, t)
                    }
                }(),
                localToWorld: function(e) {
                    return e.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function() {
                    var e = new n;
                    return function(t) {
                        return t.applyMatrix4(e.getInverse(this.matrixWorld))
                    }
                }(),
                lookAt: function() {
                    var e = new n
                      , t = new a;
                    return function(i, n, r) {
                        i.isVector3 ? t.copy(i) : t.set(i, n, r),
                        this.isCamera ? e.lookAt(this.position, t, this.up) : e.lookAt(t, this.position, this.up),
                        this.quaternion.setFromRotationMatrix(e)
                    }
                }(),
                add: function(e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++)
                            this.add(arguments[t]);
                        return this
                    }
                    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e),
                    this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e),
                    e.parent = this,
                    e.dispatchEvent({
                        type: "added"
                    }),
                    this.children.push(e)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e),
                    this)
                },
                remove: function(e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++)
                            this.remove(arguments[t]);
                        return this
                    }
                    var i = this.children.indexOf(e);
                    return -1 !== i && (e.parent = null,
                    e.dispatchEvent({
                        type: "removed"
                    }),
                    this.children.splice(i, 1)),
                    this
                },
                getObjectById: function(e) {
                    return this.getObjectByProperty("id", e)
                },
                getObjectByName: function(e) {
                    return this.getObjectByProperty("name", e)
                },
                getObjectByProperty: function(e, t) {
                    if (this[e] === t)
                        return this;
                    for (var i = 0, n = this.children.length; n > i; i++) {
                        var r = this.children[i]
                          , a = r.getObjectByProperty(e, t);
                        if (void 0 !== a)
                            return a
                    }
                    return void 0
                },
                getWorldPosition: function(e) {
                    var t = e || new a;
                    return this.updateMatrixWorld(!0),
                    t.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function() {
                    var e = new a
                      , t = new a;
                    return function(i) {
                        var n = i || new r;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(e, n, t),
                        n
                    }
                }(),
                getWorldRotation: function() {
                    var e = new r;
                    return function(t) {
                        var i = t || new st;
                        return this.getWorldQuaternion(e),
                        i.setFromQuaternion(e, this.rotation.order, !1)
                    }
                }(),
                getWorldScale: function() {
                    var e = new a
                      , t = new r;
                    return function(i) {
                        var n = i || new a;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(e, t, n),
                        n
                    }
                }(),
                getWorldDirection: function() {
                    var e = new r;
                    return function(t) {
                        var i = t || new a;
                        return this.getWorldQuaternion(e),
                        i.set(0, 0, 1).applyQuaternion(e)
                    }
                }(),
                raycast: function() {},
                traverse: function(e) {
                    e(this);
                    for (var t = this.children, i = 0, n = t.length; n > i; i++)
                        t[i].traverse(e)
                },
                traverseVisible: function(e) {
                    if (this.visible !== !1) {
                        e(this);
                        for (var t = this.children, i = 0, n = t.length; n > i; i++)
                            t[i].traverseVisible(e)
                    }
                },
                traverseAncestors: function(e) {
                    var t = this.parent;
                    null !== t && (e(t),
                    t.traverseAncestors(e))
                },
                updateMatrix: function() {
                    this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function(e) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                    this.matrixWorldNeedsUpdate = !1,
                    e = !0);
                    for (var t = this.children, i = 0, n = t.length; n > i; i++)
                        t[i].updateMatrixWorld(e)
                },
                toJSON: function(e) {
                    function t(t, i) {
                        return void 0 === t[i.uuid] && (t[i.uuid] = i.toJSON(e)),
                        i.uuid
                    }
                    function i(e) {
                        var t = [];
                        for (var i in e) {
                            var n = e[i];
                            delete n.metadata,
                            t.push(n)
                        }
                        return t
                    }
                    var n = void 0 === e || "string" == typeof e
                      , r = {};
                    n && (e = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {}
                    },
                    r.metadata = {
                        version: 4.5,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var a = {};
                    if (a.uuid = this.uuid,
                    a.type = this.type,
                    "" !== this.name && (a.name = this.name),
                    this.castShadow === !0 && (a.castShadow = !0),
                    this.receiveShadow === !0 && (a.receiveShadow = !0),
                    this.visible === !1 && (a.visible = !1),
                    "{}" !== JSON.stringify(this.userData) && (a.userData = this.userData),
                    a.matrix = this.matrix.toArray(),
                    void 0 !== this.geometry && (a.geometry = t(e.geometries, this.geometry)),
                    void 0 !== this.material)
                        if (Array.isArray(this.material)) {
                            for (var o = [], s = 0, l = this.material.length; l > s; s++)
                                o.push(t(e.materials, this.material[s]));
                            a.material = o
                        } else
                            a.material = t(e.materials, this.material);
                    if (this.children.length > 0) {
                        a.children = [];
                        for (var s = 0; s < this.children.length; s++)
                            a.children.push(this.children[s].toJSON(e).object)
                    }
                    if (n) {
                        var c = i(e.geometries)
                          , h = i(e.materials)
                          , u = i(e.textures)
                          , d = i(e.images);
                        c.length > 0 && (r.geometries = c),
                        h.length > 0 && (r.materials = h),
                        u.length > 0 && (r.textures = u),
                        d.length > 0 && (r.images = d)
                    }
                    return r.object = a,
                    r
                },
                clone: function(e) {
                    return (new this.constructor).copy(this, e)
                },
                copy: function(e, t) {
                    if (void 0 === t && (t = !0),
                    this.name = e.name,
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate,
                    this.layers.mask = e.layers.mask,
                    this.visible = e.visible,
                    this.castShadow = e.castShadow,
                    this.receiveShadow = e.receiveShadow,
                    this.frustumCulled = e.frustumCulled,
                    this.renderOrder = e.renderOrder,
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    t === !0)
                        for (var i = 0; i < e.children.length; i++) {
                            var n = e.children[i];
                            this.add(n.clone())
                        }
                    return this
                }
            }),
            ht.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: ht,
                isCamera: !0,
                copy: function(e, t) {
                    return ct.prototype.copy.call(this, e, t),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this
                },
                getWorldDirection: function() {
                    var e = new r;
                    return function(t) {
                        var i = t || new a;
                        return this.getWorldQuaternion(e),
                        i.set(0, 0, -1).applyQuaternion(e)
                    }
                }(),
                updateMatrixWorld: function(e) {
                    ct.prototype.updateMatrixWorld.call(this, e),
                    this.matrixWorldInverse.getInverse(this.matrixWorld)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }),
            ut.prototype = Object.assign(Object.create(ht.prototype), {
                constructor: ut,
                isOrthographicCamera: !0,
                copy: function(e, t) {
                    return ht.prototype.copy.call(this, e, t),
                    this.left = e.left,
                    this.right = e.right,
                    this.top = e.top,
                    this.bottom = e.bottom,
                    this.near = e.near,
                    this.far = e.far,
                    this.zoom = e.zoom,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this
                },
                setViewOffset: function(e, t, i, n, r, a) {
                    null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = i,
                    this.view.offsetY = n,
                    this.view.width = r,
                    this.view.height = a,
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var e = (this.right - this.left) / (2 * this.zoom)
                      , t = (this.top - this.bottom) / (2 * this.zoom)
                      , i = (this.right + this.left) / 2
                      , n = (this.top + this.bottom) / 2
                      , r = i - e
                      , a = i + e
                      , o = n + t
                      , s = n - t;
                    if (null !== this.view && this.view.enabled) {
                        var l = this.zoom / (this.view.width / this.view.fullWidth)
                          , c = this.zoom / (this.view.height / this.view.fullHeight)
                          , h = (this.right - this.left) / this.view.width
                          , u = (this.top - this.bottom) / this.view.height;
                        r += h * (this.view.offsetX / l),
                        a = r + h * (this.view.width / l),
                        o -= u * (this.view.offsetY / c),
                        s = o - u * (this.view.height / c)
                    }
                    this.projectionMatrix.makeOrthographic(r, a, o, s, this.near, this.far)
                },
                toJSON: function(e) {
                    var t = ct.prototype.toJSON.call(this, e);
                    return t.object.zoom = this.zoom,
                    t.object.left = this.left,
                    t.object.right = this.right,
                    t.object.top = this.top,
                    t.object.bottom = this.bottom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t
                }
            }),
            Object.assign(dt.prototype, {
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    this.a = e.a,
                    this.b = e.b,
                    this.c = e.c,
                    this.normal.copy(e.normal),
                    this.color.copy(e.color),
                    this.materialIndex = e.materialIndex;
                    for (var t = 0, i = e.vertexNormals.length; i > t; t++)
                        this.vertexNormals[t] = e.vertexNormals[t].clone();
                    for (var t = 0, i = e.vertexColors.length; i > t; t++)
                        this.vertexColors[t] = e.vertexColors[t].clone();
                    return this
                }
            });
            var Yh = 0;
            Object.assign(pt.prototype, t.prototype, {
                isGeometry: !0,
                applyMatrix: function(e) {
                    for (var t = (new o).getNormalMatrix(e), i = 0, n = this.vertices.length; n > i; i++) {
                        var r = this.vertices[i];
                        r.applyMatrix4(e)
                    }
                    for (var i = 0, n = this.faces.length; n > i; i++) {
                        var a = this.faces[i];
                        a.normal.applyMatrix3(t).normalize();
                        for (var s = 0, l = a.vertexNormals.length; l > s; s++)
                            a.vertexNormals[s].applyMatrix3(t).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this.verticesNeedUpdate = !0,
                    this.normalsNeedUpdate = !0,
                    this
                },
                rotateX: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationX(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                rotateY: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationY(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                rotateZ: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationZ(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                translate: function() {
                    var e = new n;
                    return function(t, i, n) {
                        return e.makeTranslation(t, i, n),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                scale: function() {
                    var e = new n;
                    return function(t, i, n) {
                        return e.makeScale(t, i, n),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                lookAt: function() {
                    var e = new ct;
                    return function(t) {
                        e.lookAt(t),
                        e.updateMatrix(),
                        this.applyMatrix(e.matrix)
                    }
                }(),
                fromBufferGeometry: function(e) {
                    function t(e, t, i, r) {
                        var a = void 0 !== l ? [d[e].clone(), d[t].clone(), d[i].clone()] : []
                          , o = void 0 !== c ? [n.colors[e].clone(), n.colors[t].clone(), n.colors[i].clone()] : []
                          , s = new dt(e,t,i,a,o,r);
                        n.faces.push(s),
                        void 0 !== h && n.faceVertexUvs[0].push([p[e].clone(), p[t].clone(), p[i].clone()]),
                        void 0 !== u && n.faceVertexUvs[1].push([f[e].clone(), f[t].clone(), f[i].clone()])
                    }
                    var n = this
                      , r = null !== e.index ? e.index.array : void 0
                      , o = e.attributes
                      , s = o.position.array
                      , l = void 0 !== o.normal ? o.normal.array : void 0
                      , c = void 0 !== o.color ? o.color.array : void 0
                      , h = void 0 !== o.uv ? o.uv.array : void 0
                      , u = void 0 !== o.uv2 ? o.uv2.array : void 0;
                    void 0 !== u && (this.faceVertexUvs[1] = []);
                    for (var d = [], p = [], f = [], m = 0, v = 0; m < s.length; m += 3,
                    v += 2)
                        n.vertices.push(new a(s[m],s[m + 1],s[m + 2])),
                        void 0 !== l && d.push(new a(l[m],l[m + 1],l[m + 2])),
                        void 0 !== c && n.colors.push(new Y(c[m],c[m + 1],c[m + 2])),
                        void 0 !== h && p.push(new i(h[v],h[v + 1])),
                        void 0 !== u && f.push(new i(u[v],u[v + 1]));
                    var g = e.groups;
                    if (g.length > 0)
                        for (var m = 0; m < g.length; m++)
                            for (var y = g[m], _ = y.start, x = y.count, v = _, b = _ + x; b > v; v += 3)
                                void 0 !== r ? t(r[v], r[v + 1], r[v + 2], y.materialIndex) : t(v, v + 1, v + 2, y.materialIndex);
                    else if (void 0 !== r)
                        for (var m = 0; m < r.length; m += 3)
                            t(r[m], r[m + 1], r[m + 2]);
                    else
                        for (var m = 0; m < s.length / 3; m += 3)
                            t(m, m + 1, m + 2);
                    return this.computeFaceNormals(),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
                    null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    this
                },
                center: function() {
                    this.computeBoundingBox();
                    var e = this.boundingBox.getCenter().negate();
                    return this.translate(e.x, e.y, e.z),
                    e
                },
                normalize: function() {
                    this.computeBoundingSphere();
                    var e = this.boundingSphere.center
                      , t = this.boundingSphere.radius
                      , i = 0 === t ? 1 : 1 / t
                      , r = new n;
                    return r.set(i, 0, 0, -i * e.x, 0, i, 0, -i * e.y, 0, 0, i, -i * e.z, 0, 0, 0, 1),
                    this.applyMatrix(r),
                    this
                },
                computeFaceNormals: function() {
                    for (var e = new a, t = new a, i = 0, n = this.faces.length; n > i; i++) {
                        var r = this.faces[i]
                          , o = this.vertices[r.a]
                          , s = this.vertices[r.b]
                          , l = this.vertices[r.c];
                        e.subVectors(l, s),
                        t.subVectors(o, s),
                        e.cross(t),
                        e.normalize(),
                        r.normal.copy(e)
                    }
                },
                computeVertexNormals: function(e) {
                    void 0 === e && (e = !0);
                    var t, i, n, r, o, s;
                    for (s = new Array(this.vertices.length),
                    t = 0,
                    i = this.vertices.length; i > t; t++)
                        s[t] = new a;
                    if (e) {
                        var l, c, h, u = new a, d = new a;
                        for (n = 0,
                        r = this.faces.length; r > n; n++)
                            o = this.faces[n],
                            l = this.vertices[o.a],
                            c = this.vertices[o.b],
                            h = this.vertices[o.c],
                            u.subVectors(h, c),
                            d.subVectors(l, c),
                            u.cross(d),
                            s[o.a].add(u),
                            s[o.b].add(u),
                            s[o.c].add(u)
                    } else
                        for (this.computeFaceNormals(),
                        n = 0,
                        r = this.faces.length; r > n; n++)
                            o = this.faces[n],
                            s[o.a].add(o.normal),
                            s[o.b].add(o.normal),
                            s[o.c].add(o.normal);
                    for (t = 0,
                    i = this.vertices.length; i > t; t++)
                        s[t].normalize();
                    for (n = 0,
                    r = this.faces.length; r > n; n++) {
                        o = this.faces[n];
                        var p = o.vertexNormals;
                        3 === p.length ? (p[0].copy(s[o.a]),
                        p[1].copy(s[o.b]),
                        p[2].copy(s[o.c])) : (p[0] = s[o.a].clone(),
                        p[1] = s[o.b].clone(),
                        p[2] = s[o.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function() {
                    var e, t, i;
                    for (this.computeFaceNormals(),
                    e = 0,
                    t = this.faces.length; t > e; e++) {
                        i = this.faces[e];
                        var n = i.vertexNormals;
                        3 === n.length ? (n[0].copy(i.normal),
                        n[1].copy(i.normal),
                        n[2].copy(i.normal)) : (n[0] = i.normal.clone(),
                        n[1] = i.normal.clone(),
                        n[2] = i.normal.clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function() {
                    var e, t, i, n, r;
                    for (i = 0,
                    n = this.faces.length; n > i; i++)
                        for (r = this.faces[i],
                        r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(),
                        r.__originalVertexNormals || (r.__originalVertexNormals = []),
                        e = 0,
                        t = r.vertexNormals.length; t > e; e++)
                            r.__originalVertexNormals[e] ? r.__originalVertexNormals[e].copy(r.vertexNormals[e]) : r.__originalVertexNormals[e] = r.vertexNormals[e].clone();
                    var o = new pt;
                    for (o.faces = this.faces,
                    e = 0,
                    t = this.morphTargets.length; t > e; e++) {
                        if (!this.morphNormals[e]) {
                            this.morphNormals[e] = {},
                            this.morphNormals[e].faceNormals = [],
                            this.morphNormals[e].vertexNormals = [];
                            var s, l, c = this.morphNormals[e].faceNormals, h = this.morphNormals[e].vertexNormals;
                            for (i = 0,
                            n = this.faces.length; n > i; i++)
                                s = new a,
                                l = {
                                    a: new a,
                                    b: new a,
                                    c: new a
                                },
                                c.push(s),
                                h.push(l)
                        }
                        var u = this.morphNormals[e];
                        o.vertices = this.morphTargets[e].vertices,
                        o.computeFaceNormals(),
                        o.computeVertexNormals();
                        var s, l;
                        for (i = 0,
                        n = this.faces.length; n > i; i++)
                            r = this.faces[i],
                            s = u.faceNormals[i],
                            l = u.vertexNormals[i],
                            s.copy(r.normal),
                            l.a.copy(r.vertexNormals[0]),
                            l.b.copy(r.vertexNormals[1]),
                            l.c.copy(r.vertexNormals[2])
                    }
                    for (i = 0,
                    n = this.faces.length; n > i; i++)
                        r = this.faces[i],
                        r.normal = r.__originalFaceNormal,
                        r.vertexNormals = r.__originalVertexNormals
                },
                computeLineDistances: function() {
                    for (var e = 0, t = this.vertices, i = 0, n = t.length; n > i; i++)
                        i > 0 && (e += t[i].distanceTo(t[i - 1])),
                        this.lineDistances[i] = e
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new tt),
                    this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new it),
                    this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function(e, t, i) {
                    if (!e || !e.isGeometry)
                        return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e);
                    var n, r = this.vertices.length, a = this.vertices, s = e.vertices, l = this.faces, c = e.faces, h = this.faceVertexUvs[0], u = e.faceVertexUvs[0], d = this.colors, p = e.colors;
                    void 0 === i && (i = 0),
                    void 0 !== t && (n = (new o).getNormalMatrix(t));
                    for (var f = 0, m = s.length; m > f; f++) {
                        var v = s[f]
                          , g = v.clone();
                        void 0 !== t && g.applyMatrix4(t),
                        a.push(g)
                    }
                    for (var f = 0, m = p.length; m > f; f++)
                        d.push(p[f].clone());
                    for (f = 0,
                    m = c.length; m > f; f++) {
                        var y, _, x, b = c[f], w = b.vertexNormals, T = b.vertexColors;
                        y = new dt(b.a + r,b.b + r,b.c + r),
                        y.normal.copy(b.normal),
                        void 0 !== n && y.normal.applyMatrix3(n).normalize();
                        for (var M = 0, E = w.length; E > M; M++)
                            _ = w[M].clone(),
                            void 0 !== n && _.applyMatrix3(n).normalize(),
                            y.vertexNormals.push(_);
                        y.color.copy(b.color);
                        for (var M = 0, E = T.length; E > M; M++)
                            x = T[M],
                            y.vertexColors.push(x.clone());
                        y.materialIndex = b.materialIndex + i,
                        l.push(y)
                    }
                    for (f = 0,
                    m = u.length; m > f; f++) {
                        var S = u[f]
                          , A = [];
                        if (void 0 !== S) {
                            for (var M = 0, E = S.length; E > M; M++)
                                A.push(S[M].clone());
                            h.push(A)
                        }
                    }
                },
                mergeMesh: function(e) {
                    return e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(),
                    void this.merge(e.geometry, e.matrix)) : void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
                },
                mergeVertices: function() {
                    var e, t, i, n, r, a, o, s, l = {}, c = [], h = [], u = 4, d = Math.pow(10, u);
                    for (i = 0,
                    n = this.vertices.length; n > i; i++)
                        e = this.vertices[i],
                        t = Math.round(e.x * d) + "_" + Math.round(e.y * d) + "_" + Math.round(e.z * d),
                        void 0 === l[t] ? (l[t] = i,
                        c.push(this.vertices[i]),
                        h[i] = c.length - 1) : h[i] = h[l[t]];
                    var p = [];
                    for (i = 0,
                    n = this.faces.length; n > i; i++) {
                        r = this.faces[i],
                        r.a = h[r.a],
                        r.b = h[r.b],
                        r.c = h[r.c],
                        a = [r.a, r.b, r.c];
                        for (var f = 0; 3 > f; f++)
                            if (a[f] === a[(f + 1) % 3]) {
                                p.push(i);
                                break
                            }
                    }
                    for (i = p.length - 1; i >= 0; i--) {
                        var m = p[i];
                        for (this.faces.splice(m, 1),
                        o = 0,
                        s = this.faceVertexUvs.length; s > o; o++)
                            this.faceVertexUvs[o].splice(m, 1)
                    }
                    var v = this.vertices.length - c.length;
                    return this.vertices = c,
                    v
                },
                setFromPoints: function(e) {
                    this.vertices = [];
                    for (var t = 0, i = e.length; i > t; t++) {
                        var n = e[t];
                        this.vertices.push(new a(n.x,n.y,n.z || 0))
                    }
                    return this
                },
                sortFacesByMaterialIndex: function() {
                    function e(e, t) {
                        return e.materialIndex - t.materialIndex
                    }
                    for (var t = this.faces, i = t.length, n = 0; i > n; n++)
                        t[n]._id = n;
                    t.sort(e);
                    var r, a, o = this.faceVertexUvs[0], s = this.faceVertexUvs[1];
                    o && o.length === i && (r = []),
                    s && s.length === i && (a = []);
                    for (var n = 0; i > n; n++) {
                        var l = t[n]._id;
                        r && r.push(o[l]),
                        a && a.push(s[l])
                    }
                    r && (this.faceVertexUvs[0] = r),
                    a && (this.faceVertexUvs[1] = a)
                },
                toJSON: function() {
                    function e(e, t, i) {
                        return i ? e | 1 << t : e & ~(1 << t)
                    }
                    function t(e) {
                        var t = e.x.toString() + e.y.toString() + e.z.toString();
                        return void 0 !== d[t] ? d[t] : (d[t] = u.length / 3,
                        u.push(e.x, e.y, e.z),
                        d[t])
                    }
                    function i(e) {
                        var t = e.r.toString() + e.g.toString() + e.b.toString();
                        return void 0 !== f[t] ? f[t] : (f[t] = p.length,
                        p.push(e.getHex()),
                        f[t])
                    }
                    function n(e) {
                        var t = e.x.toString() + e.y.toString();
                        return void 0 !== v[t] ? v[t] : (v[t] = m.length / 2,
                        m.push(e.x, e.y),
                        v[t])
                    }
                    var r = {
                        metadata: {
                            version: 4.5,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (r.uuid = this.uuid,
                    r.type = this.type,
                    "" !== this.name && (r.name = this.name),
                    void 0 !== this.parameters) {
                        var a = this.parameters;
                        for (var o in a)
                            void 0 !== a[o] && (r[o] = a[o]);
                        return r
                    }
                    for (var s = [], l = 0; l < this.vertices.length; l++) {
                        var c = this.vertices[l];
                        s.push(c.x, c.y, c.z)
                    }
                    for (var h = [], u = [], d = {}, p = [], f = {}, m = [], v = {}, l = 0; l < this.faces.length; l++) {
                        var g = this.faces[l]
                          , y = !0
                          , _ = !1
                          , x = void 0 !== this.faceVertexUvs[0][l]
                          , b = g.normal.length() > 0
                          , w = g.vertexNormals.length > 0
                          , T = 1 !== g.color.r || 1 !== g.color.g || 1 !== g.color.b
                          , M = g.vertexColors.length > 0
                          , E = 0;
                        if (E = e(E, 0, 0),
                        E = e(E, 1, y),
                        E = e(E, 2, _),
                        E = e(E, 3, x),
                        E = e(E, 4, b),
                        E = e(E, 5, w),
                        E = e(E, 6, T),
                        E = e(E, 7, M),
                        h.push(E),
                        h.push(g.a, g.b, g.c),
                        h.push(g.materialIndex),
                        x) {
                            var S = this.faceVertexUvs[0][l];
                            h.push(n(S[0]), n(S[1]), n(S[2]))
                        }
                        if (b && h.push(t(g.normal)),
                        w) {
                            var A = g.vertexNormals;
                            h.push(t(A[0]), t(A[1]), t(A[2]))
                        }
                        if (T && h.push(i(g.color)),
                        M) {
                            var P = g.vertexColors;
                            h.push(i(P[0]), i(P[1]), i(P[2]))
                        }
                    }
                    return r.data = {},
                    r.data.vertices = s,
                    r.data.normals = u,
                    p.length > 0 && (r.data.colors = p),
                    m.length > 0 && (r.data.uvs = [m]),
                    r.data.faces = h,
                    r
                },
                clone: function() {
                    return (new pt).copy(this)
                },
                copy: function(e) {
                    var t, i, n, r, a, o;
                    this.vertices = [],
                    this.colors = [],
                    this.faces = [],
                    this.faceVertexUvs = [[]],
                    this.morphTargets = [],
                    this.morphNormals = [],
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.lineDistances = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = e.name;
                    var s = e.vertices;
                    for (t = 0,
                    i = s.length; i > t; t++)
                        this.vertices.push(s[t].clone());
                    var l = e.colors;
                    for (t = 0,
                    i = l.length; i > t; t++)
                        this.colors.push(l[t].clone());
                    var c = e.faces;
                    for (t = 0,
                    i = c.length; i > t; t++)
                        this.faces.push(c[t].clone());
                    for (t = 0,
                    i = e.faceVertexUvs.length; i > t; t++) {
                        var h = e.faceVertexUvs[t];
                        for (void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []),
                        n = 0,
                        r = h.length; r > n; n++) {
                            var u = h[n]
                              , d = [];
                            for (a = 0,
                            o = u.length; o > a; a++) {
                                var p = u[a];
                                d.push(p.clone())
                            }
                            this.faceVertexUvs[t].push(d)
                        }
                    }
                    var f = e.morphTargets;
                    for (t = 0,
                    i = f.length; i > t; t++) {
                        var m = {};
                        if (m.name = f[t].name,
                        void 0 !== f[t].vertices)
                            for (m.vertices = [],
                            n = 0,
                            r = f[t].vertices.length; r > n; n++)
                                m.vertices.push(f[t].vertices[n].clone());
                        if (void 0 !== f[t].normals)
                            for (m.normals = [],
                            n = 0,
                            r = f[t].normals.length; r > n; n++)
                                m.normals.push(f[t].normals[n].clone());
                        this.morphTargets.push(m)
                    }
                    var v = e.morphNormals;
                    for (t = 0,
                    i = v.length; i > t; t++) {
                        var g = {};
                        if (void 0 !== v[t].vertexNormals)
                            for (g.vertexNormals = [],
                            n = 0,
                            r = v[t].vertexNormals.length; r > n; n++) {
                                var y = v[t].vertexNormals[n]
                                  , _ = {};
                                _.a = y.a.clone(),
                                _.b = y.b.clone(),
                                _.c = y.c.clone(),
                                g.vertexNormals.push(_)
                            }
                        if (void 0 !== v[t].faceNormals)
                            for (g.faceNormals = [],
                            n = 0,
                            r = v[t].faceNormals.length; r > n; n++)
                                g.faceNormals.push(v[t].faceNormals[n].clone());
                        this.morphNormals.push(g)
                    }
                    var x = e.skinWeights;
                    for (t = 0,
                    i = x.length; i > t; t++)
                        this.skinWeights.push(x[t].clone());
                    var b = e.skinIndices;
                    for (t = 0,
                    i = b.length; i > t; t++)
                        this.skinIndices.push(b[t].clone());
                    var w = e.lineDistances;
                    for (t = 0,
                    i = w.length; i > t; t++)
                        this.lineDistances.push(w[t]);
                    var T = e.boundingBox;
                    null !== T && (this.boundingBox = T.clone());
                    var M = e.boundingSphere;
                    return null !== M && (this.boundingSphere = M.clone()),
                    this.elementsNeedUpdate = e.elementsNeedUpdate,
                    this.verticesNeedUpdate = e.verticesNeedUpdate,
                    this.uvsNeedUpdate = e.uvsNeedUpdate,
                    this.normalsNeedUpdate = e.normalsNeedUpdate,
                    this.colorsNeedUpdate = e.colorsNeedUpdate,
                    this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate,
                    this.groupsNeedUpdate = e.groupsNeedUpdate,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            Object.defineProperty(ft.prototype, "needsUpdate", {
                set: function(e) {
                    e === !0 && this.version++
                }
            }),
            Object.assign(ft.prototype, {
                isBufferAttribute: !0,
                setArray: function(e) {
                    if (Array.isArray(e))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== e ? e.length / this.itemSize : 0,
                    this.array = e
                },
                setDynamic: function(e) {
                    return this.dynamic = e,
                    this
                },
                copy: function(e) {
                    return this.array = new e.array.constructor(e.array),
                    this.itemSize = e.itemSize,
                    this.count = e.count,
                    this.normalized = e.normalized,
                    this.dynamic = e.dynamic,
                    this
                },
                copyAt: function(e, t, i) {
                    e *= this.itemSize,
                    i *= t.itemSize;
                    for (var n = 0, r = this.itemSize; r > n; n++)
                        this.array[e + n] = t.array[i + n];
                    return this
                },
                copyArray: function(e) {
                    return this.array.set(e),
                    this
                },
                copyColorsArray: function(e) {
                    for (var t = this.array, i = 0, n = 0, r = e.length; r > n; n++) {
                        var a = e[n];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", n),
                        a = new Y),
                        t[i++] = a.r,
                        t[i++] = a.g,
                        t[i++] = a.b
                    }
                    return this
                },
                copyIndicesArray: function(e) {
                    for (var t = this.array, i = 0, n = 0, r = e.length; r > n; n++) {
                        var a = e[n];
                        t[i++] = a.a,
                        t[i++] = a.b,
                        t[i++] = a.c
                    }
                    return this
                },
                copyVector2sArray: function(e) {
                    for (var t = this.array, n = 0, r = 0, a = e.length; a > r; r++) {
                        var o = e[r];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r),
                        o = new i),
                        t[n++] = o.x,
                        t[n++] = o.y
                    }
                    return this
                },
                copyVector3sArray: function(e) {
                    for (var t = this.array, i = 0, n = 0, r = e.length; r > n; n++) {
                        var o = e[n];
                        void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", n),
                        o = new a),
                        t[i++] = o.x,
                        t[i++] = o.y,
                        t[i++] = o.z
                    }
                    return this
                },
                copyVector4sArray: function(e) {
                    for (var t = this.array, i = 0, n = 0, r = e.length; r > n; n++) {
                        var a = e[n];
                        void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", n),
                        a = new l),
                        t[i++] = a.x,
                        t[i++] = a.y,
                        t[i++] = a.z,
                        t[i++] = a.w
                    }
                    return this
                },
                set: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.array.set(e, t),
                    this
                },
                getX: function(e) {
                    return this.array[e * this.itemSize]
                },
                setX: function(e, t) {
                    return this.array[e * this.itemSize] = t,
                    this
                },
                getY: function(e) {
                    return this.array[e * this.itemSize + 1]
                },
                setY: function(e, t) {
                    return this.array[e * this.itemSize + 1] = t,
                    this
                },
                getZ: function(e) {
                    return this.array[e * this.itemSize + 2]
                },
                setZ: function(e, t) {
                    return this.array[e * this.itemSize + 2] = t,
                    this
                },
                getW: function(e) {
                    return this.array[e * this.itemSize + 3]
                },
                setW: function(e, t) {
                    return this.array[e * this.itemSize + 3] = t,
                    this
                },
                setXY: function(e, t, i) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = i,
                    this
                },
                setXYZ: function(e, t, i, n) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = i,
                    this.array[e + 2] = n,
                    this
                },
                setXYZW: function(e, t, i, n, r) {
                    return e *= this.itemSize,
                    this.array[e + 0] = t,
                    this.array[e + 1] = i,
                    this.array[e + 2] = n,
                    this.array[e + 3] = r,
                    this
                },
                onUpload: function(e) {
                    return this.onUploadCallback = e,
                    this
                },
                clone: function() {
                    return new this.constructor(this.array,this.itemSize).copy(this)
                }
            }),
            mt.prototype = Object.create(ft.prototype),
            mt.prototype.constructor = mt,
            vt.prototype = Object.create(ft.prototype),
            vt.prototype.constructor = vt,
            gt.prototype = Object.create(ft.prototype),
            gt.prototype.constructor = gt,
            yt.prototype = Object.create(ft.prototype),
            yt.prototype.constructor = yt,
            _t.prototype = Object.create(ft.prototype),
            _t.prototype.constructor = _t,
            xt.prototype = Object.create(ft.prototype),
            xt.prototype.constructor = xt,
            bt.prototype = Object.create(ft.prototype),
            bt.prototype.constructor = bt,
            wt.prototype = Object.create(ft.prototype),
            wt.prototype.constructor = wt,
            Tt.prototype = Object.create(ft.prototype),
            Tt.prototype.constructor = Tt,
            Object.assign(Mt.prototype, {
                computeGroups: function(e) {
                    for (var t, i = [], n = void 0, r = e.faces, a = 0; a < r.length; a++) {
                        var o = r[a];
                        o.materialIndex !== n && (n = o.materialIndex,
                        void 0 !== t && (t.count = 3 * a - t.start,
                        i.push(t)),
                        t = {
                            start: 3 * a,
                            materialIndex: n
                        })
                    }
                    void 0 !== t && (t.count = 3 * a - t.start,
                    i.push(t)),
                    this.groups = i
                },
                fromGeometry: function(e) {
                    var t, n = e.faces, r = e.vertices, a = e.faceVertexUvs, o = a[0] && a[0].length > 0, s = a[1] && a[1].length > 0, l = e.morphTargets, c = l.length;
                    if (c > 0) {
                        t = [];
                        for (var h = 0; c > h; h++)
                            t[h] = [];
                        this.morphTargets.position = t
                    }
                    var u, d = e.morphNormals, p = d.length;
                    if (p > 0) {
                        u = [];
                        for (var h = 0; p > h; h++)
                            u[h] = [];
                        this.morphTargets.normal = u
                    }
                    for (var f = e.skinIndices, m = e.skinWeights, v = f.length === r.length, g = m.length === r.length, h = 0; h < n.length; h++) {
                        var y = n[h];
                        this.vertices.push(r[y.a], r[y.b], r[y.c]);
                        var _ = y.vertexNormals;
                        if (3 === _.length)
                            this.normals.push(_[0], _[1], _[2]);
                        else {
                            var x = y.normal;
                            this.normals.push(x, x, x)
                        }
                        var b = y.vertexColors;
                        if (3 === b.length)
                            this.colors.push(b[0], b[1], b[2]);
                        else {
                            var w = y.color;
                            this.colors.push(w, w, w)
                        }
                        if (o === !0) {
                            var T = a[0][h];
                            void 0 !== T ? this.uvs.push(T[0], T[1], T[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", h),
                            this.uvs.push(new i, new i, new i))
                        }
                        if (s === !0) {
                            var T = a[1][h];
                            void 0 !== T ? this.uvs2.push(T[0], T[1], T[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", h),
                            this.uvs2.push(new i, new i, new i))
                        }
                        for (var M = 0; c > M; M++) {
                            var E = l[M].vertices;
                            t[M].push(E[y.a], E[y.b], E[y.c])
                        }
                        for (var M = 0; p > M; M++) {
                            var S = d[M].vertexNormals[h];
                            u[M].push(S.a, S.b, S.c)
                        }
                        v && this.skinIndices.push(f[y.a], f[y.b], f[y.c]),
                        g && this.skinWeights.push(m[y.a], m[y.b], m[y.c])
                    }
                    return this.computeGroups(e),
                    this.verticesNeedUpdate = e.verticesNeedUpdate,
                    this.normalsNeedUpdate = e.normalsNeedUpdate,
                    this.colorsNeedUpdate = e.colorsNeedUpdate,
                    this.uvsNeedUpdate = e.uvsNeedUpdate,
                    this.groupsNeedUpdate = e.groupsNeedUpdate,
                    this
                }
            });
            var qh = 1;
            Object.assign(St.prototype, t.prototype, {
                isBufferGeometry: !0,
                getIndex: function() {
                    return this.index
                },
                setIndex: function(e) {
                    this.index = Array.isArray(e) ? new (Et(e) > 65535 ? bt : _t)(e,1) : e
                },
                addAttribute: function(e, t) {
                    return t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
                    void this.setIndex(t)) : (this.attributes[e] = t,
                    this) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
                    void this.addAttribute(e, new ft(arguments[1],arguments[2])))
                },
                getAttribute: function(e) {
                    return this.attributes[e]
                },
                removeAttribute: function(e) {
                    return delete this.attributes[e],
                    this
                },
                addGroup: function(e, t, i) {
                    this.groups.push({
                        start: e,
                        count: t,
                        materialIndex: void 0 !== i ? i : 0
                    })
                },
                clearGroups: function() {
                    this.groups = []
                },
                setDrawRange: function(e, t) {
                    this.drawRange.start = e,
                    this.drawRange.count = t
                },
                applyMatrix: function(e) {
                    var t = this.attributes.position;
                    void 0 !== t && (e.applyToBufferAttribute(t),
                    t.needsUpdate = !0);
                    var i = this.attributes.normal;
                    if (void 0 !== i) {
                        var n = (new o).getNormalMatrix(e);
                        n.applyToBufferAttribute(i),
                        i.needsUpdate = !0
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
                },
                rotateX: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationX(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                rotateY: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationY(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                rotateZ: function() {
                    var e = new n;
                    return function(t) {
                        return e.makeRotationZ(t),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                translate: function() {
                    var e = new n;
                    return function(t, i, n) {
                        return e.makeTranslation(t, i, n),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                scale: function() {
                    var e = new n;
                    return function(t, i, n) {
                        return e.makeScale(t, i, n),
                        this.applyMatrix(e),
                        this
                    }
                }(),
                lookAt: function() {
                    var e = new ct;
                    return function(t) {
                        e.lookAt(t),
                        e.updateMatrix(),
                        this.applyMatrix(e.matrix)
                    }
                }(),
                center: function() {
                    this.computeBoundingBox();
                    var e = this.boundingBox.getCenter().negate();
                    return this.translate(e.x, e.y, e.z),
                    e
                },
                setFromObject: function(e) {
                    var t = e.geometry;
                    if (e.isPoints || e.isLine) {
                        var i = new wt(3 * t.vertices.length,3)
                          , n = new wt(3 * t.colors.length,3);
                        if (this.addAttribute("position", i.copyVector3sArray(t.vertices)),
                        this.addAttribute("color", n.copyColorsArray(t.colors)),
                        t.lineDistances && t.lineDistances.length === t.vertices.length) {
                            var r = new wt(t.lineDistances.length,1);
                            this.addAttribute("lineDistance", r.copyArray(t.lineDistances))
                        }
                        null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                        null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
                    } else
                        e.isMesh && t && t.isGeometry && this.fromGeometry(t);
                    return this
                },
                setFromPoints: function(e) {
                    for (var t = [], i = 0, n = e.length; n > i; i++) {
                        var r = e[i];
                        t.push(r.x, r.y, r.z || 0)
                    }
                    return this.addAttribute("position", new wt(t,3)),
                    this
                },
                updateFromObject: function(e) {
                    var t = e.geometry;
                    if (e.isMesh) {
                        var i = t.__directGeometry;
                        if (t.elementsNeedUpdate === !0 && (i = void 0,
                        t.elementsNeedUpdate = !1),
                        void 0 === i)
                            return this.fromGeometry(t);
                        i.verticesNeedUpdate = t.verticesNeedUpdate,
                        i.normalsNeedUpdate = t.normalsNeedUpdate,
                        i.colorsNeedUpdate = t.colorsNeedUpdate,
                        i.uvsNeedUpdate = t.uvsNeedUpdate,
                        i.groupsNeedUpdate = t.groupsNeedUpdate,
                        t.verticesNeedUpdate = !1,
                        t.normalsNeedUpdate = !1,
                        t.colorsNeedUpdate = !1,
                        t.uvsNeedUpdate = !1,
                        t.groupsNeedUpdate = !1,
                        t = i
                    }
                    var n;
                    return t.verticesNeedUpdate === !0 && (n = this.attributes.position,
                    void 0 !== n && (n.copyVector3sArray(t.vertices),
                    n.needsUpdate = !0),
                    t.verticesNeedUpdate = !1),
                    t.normalsNeedUpdate === !0 && (n = this.attributes.normal,
                    void 0 !== n && (n.copyVector3sArray(t.normals),
                    n.needsUpdate = !0),
                    t.normalsNeedUpdate = !1),
                    t.colorsNeedUpdate === !0 && (n = this.attributes.color,
                    void 0 !== n && (n.copyColorsArray(t.colors),
                    n.needsUpdate = !0),
                    t.colorsNeedUpdate = !1),
                    t.uvsNeedUpdate && (n = this.attributes.uv,
                    void 0 !== n && (n.copyVector2sArray(t.uvs),
                    n.needsUpdate = !0),
                    t.uvsNeedUpdate = !1),
                    t.lineDistancesNeedUpdate && (n = this.attributes.lineDistance,
                    void 0 !== n && (n.copyArray(t.lineDistances),
                    n.needsUpdate = !0),
                    t.lineDistancesNeedUpdate = !1),
                    t.groupsNeedUpdate && (t.computeGroups(e.geometry),
                    this.groups = t.groups,
                    t.groupsNeedUpdate = !1),
                    this
                },
                fromGeometry: function(e) {
                    return e.__directGeometry = (new Mt).fromGeometry(e),
                    this.fromDirectGeometry(e.__directGeometry)
                },
                fromDirectGeometry: function(e) {
                    var t = new Float32Array(3 * e.vertices.length);
                    if (this.addAttribute("position", new ft(t,3).copyVector3sArray(e.vertices)),
                    e.normals.length > 0) {
                        var i = new Float32Array(3 * e.normals.length);
                        this.addAttribute("normal", new ft(i,3).copyVector3sArray(e.normals))
                    }
                    if (e.colors.length > 0) {
                        var n = new Float32Array(3 * e.colors.length);
                        this.addAttribute("color", new ft(n,3).copyColorsArray(e.colors))
                    }
                    if (e.uvs.length > 0) {
                        var r = new Float32Array(2 * e.uvs.length);
                        this.addAttribute("uv", new ft(r,2).copyVector2sArray(e.uvs))
                    }
                    if (e.uvs2.length > 0) {
                        var a = new Float32Array(2 * e.uvs2.length);
                        this.addAttribute("uv2", new ft(a,2).copyVector2sArray(e.uvs2))
                    }
                    if (e.indices.length > 0) {
                        var o = Et(e.indices) > 65535 ? Uint32Array : Uint16Array
                          , s = new o(3 * e.indices.length);
                        this.setIndex(new ft(s,1).copyIndicesArray(e.indices))
                    }
                    this.groups = e.groups;
                    for (var l in e.morphTargets) {
                        for (var c = [], h = e.morphTargets[l], u = 0, d = h.length; d > u; u++) {
                            var p = h[u]
                              , f = new wt(3 * p.length,3);
                            c.push(f.copyVector3sArray(p))
                        }
                        this.morphAttributes[l] = c
                    }
                    if (e.skinIndices.length > 0) {
                        var m = new wt(4 * e.skinIndices.length,4);
                        this.addAttribute("skinIndex", m.copyVector4sArray(e.skinIndices))
                    }
                    if (e.skinWeights.length > 0) {
                        var v = new wt(4 * e.skinWeights.length,4);
                        this.addAttribute("skinWeight", v.copyVector4sArray(e.skinWeights))
                    }
                    return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
                    null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
                    this
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new tt);
                    var e = this.attributes.position;
                    void 0 !== e ? this.boundingBox.setFromBufferAttribute(e) : this.boundingBox.makeEmpty(),
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                },
                computeBoundingSphere: function() {
                    var e = new tt
                      , t = new a;
                    return function() {
                        null === this.boundingSphere && (this.boundingSphere = new it);
                        var i = this.attributes.position;
                        if (i) {
                            var n = this.boundingSphere.center;
                            e.setFromBufferAttribute(i),
                            e.getCenter(n);
                            for (var r = 0, a = 0, o = i.count; o > a; a++)
                                t.x = i.getX(a),
                                t.y = i.getY(a),
                                t.z = i.getZ(a),
                                r = Math.max(r, n.distanceToSquared(t));
                            this.boundingSphere.radius = Math.sqrt(r),
                            isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                        }
                    }
                }(),
                computeFaceNormals: function() {},
                computeVertexNormals: function() {
                    var e = this.index
                      , t = this.attributes
                      , i = this.groups;
                    if (t.position) {
                        var n = t.position.array;
                        if (void 0 === t.normal)
                            this.addAttribute("normal", new ft(new Float32Array(n.length),3));
                        else
                            for (var r = t.normal.array, o = 0, s = r.length; s > o; o++)
                                r[o] = 0;
                        var l, c, h, u = t.normal.array, d = new a, p = new a, f = new a, m = new a, v = new a;
                        if (e) {
                            var g = e.array;
                            0 === i.length && this.addGroup(0, g.length);
                            for (var y = 0, _ = i.length; _ > y; ++y)
                                for (var x = i[y], b = x.start, w = x.count, o = b, s = b + w; s > o; o += 3)
                                    l = 3 * g[o + 0],
                                    c = 3 * g[o + 1],
                                    h = 3 * g[o + 2],
                                    d.fromArray(n, l),
                                    p.fromArray(n, c),
                                    f.fromArray(n, h),
                                    m.subVectors(f, p),
                                    v.subVectors(d, p),
                                    m.cross(v),
                                    u[l] += m.x,
                                    u[l + 1] += m.y,
                                    u[l + 2] += m.z,
                                    u[c] += m.x,
                                    u[c + 1] += m.y,
                                    u[c + 2] += m.z,
                                    u[h] += m.x,
                                    u[h + 1] += m.y,
                                    u[h + 2] += m.z
                        } else
                            for (var o = 0, s = n.length; s > o; o += 9)
                                d.fromArray(n, o),
                                p.fromArray(n, o + 3),
                                f.fromArray(n, o + 6),
                                m.subVectors(f, p),
                                v.subVectors(d, p),
                                m.cross(v),
                                u[o] = m.x,
                                u[o + 1] = m.y,
                                u[o + 2] = m.z,
                                u[o + 3] = m.x,
                                u[o + 4] = m.y,
                                u[o + 5] = m.z,
                                u[o + 6] = m.x,
                                u[o + 7] = m.y,
                                u[o + 8] = m.z;
                        this.normalizeNormals(),
                        t.normal.needsUpdate = !0
                    }
                },
                merge: function(e, t) {
                    if (!e || !e.isBufferGeometry)
                        return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
                    void 0 === t && (t = 0);
                    var i = this.attributes;
                    for (var n in i)
                        if (void 0 !== e.attributes[n])
                            for (var r = i[n], a = r.array, o = e.attributes[n], s = o.array, l = o.itemSize, c = 0, h = l * t; c < s.length; c++,
                            h++)
                                a[h] = s[c];
                    return this
                },
                normalizeNormals: function() {
                    var e = new a;
                    return function() {
                        for (var t = this.attributes.normal, i = 0, n = t.count; n > i; i++)
                            e.x = t.getX(i),
                            e.y = t.getY(i),
                            e.z = t.getZ(i),
                            e.normalize(),
                            t.setXYZ(i, e.x, e.y, e.z)
                    }
                }(),
                toNonIndexed: function() {
                    if (null === this.index)
                        return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                        this;
                    var e = new St
                      , t = this.index.array
                      , i = this.attributes;
                    for (var n in i) {
                        for (var r = i[n], a = r.array, o = r.itemSize, s = new a.constructor(t.length * o), l = 0, c = 0, h = 0, u = t.length; u > h; h++) {
                            l = t[h] * o;
                            for (var d = 0; o > d; d++)
                                s[c++] = a[l++]
                        }
                        e.addAttribute(n, new ft(s,o))
                    }
                    return e
                },
                toJSON: function() {
                    var e = {
                        metadata: {
                            version: 4.5,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid,
                    e.type = this.type,
                    "" !== this.name && (e.name = this.name),
                    void 0 !== this.parameters) {
                        var t = this.parameters;
                        for (var i in t)
                            void 0 !== t[i] && (e[i] = t[i]);
                        return e
                    }
                    e.data = {
                        attributes: {}
                    };
                    var n = this.index;
                    if (null !== n) {
                        var r = Array.prototype.slice.call(n.array);
                        e.data.index = {
                            type: n.array.constructor.name,
                            array: r
                        }
                    }
                    var a = this.attributes;
                    for (var i in a) {
                        var o = a[i]
                          , r = Array.prototype.slice.call(o.array);
                        e.data.attributes[i] = {
                            itemSize: o.itemSize,
                            type: o.array.constructor.name,
                            array: r,
                            normalized: o.normalized
                        }
                    }
                    var s = this.groups;
                    s.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(s)));
                    var l = this.boundingSphere;
                    return null !== l && (e.data.boundingSphere = {
                        center: l.center.toArray(),
                        radius: l.radius
                    }),
                    e
                },
                clone: function() {
                    return (new St).copy(this)
                },
                copy: function(e) {
                    var t, i, n;
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = e.name;
                    var r = e.index;
                    null !== r && this.setIndex(r.clone());
                    var a = e.attributes;
                    for (t in a) {
                        var o = a[t];
                        this.addAttribute(t, o.clone())
                    }
                    var s = e.morphAttributes;
                    for (t in s) {
                        var l = []
                          , c = s[t];
                        for (i = 0,
                        n = c.length; n > i; i++)
                            l.push(c[i].clone());
                        this.morphAttributes[t] = l
                    }
                    var h = e.groups;
                    for (i = 0,
                    n = h.length; n > i; i++) {
                        var u = h[i];
                        this.addGroup(u.start, u.count, u.materialIndex)
                    }
                    var d = e.boundingBox;
                    null !== d && (this.boundingBox = d.clone());
                    var p = e.boundingSphere;
                    return null !== p && (this.boundingSphere = p.clone()),
                    this.drawRange.start = e.drawRange.start,
                    this.drawRange.count = e.drawRange.count,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }),
            At.prototype = Object.create(pt.prototype),
            At.prototype.constructor = At,
            Pt.prototype = Object.create(St.prototype),
            Pt.prototype.constructor = Pt,
            Ct.prototype = Object.create(pt.prototype),
            Ct.prototype.constructor = Ct,
            Lt.prototype = Object.create(St.prototype),
            Lt.prototype.constructor = Lt,
            Rt.prototype = Object.create(K.prototype),
            Rt.prototype.constructor = Rt,
            Rt.prototype.isMeshBasicMaterial = !0,
            Rt.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this
            }
            ,
            Ot.prototype = Object.create(K.prototype),
            Ot.prototype.constructor = Ot,
            Ot.prototype.isShaderMaterial = !0,
            Ot.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.fragmentShader = e.fragmentShader,
                this.vertexShader = e.vertexShader,
                this.uniforms = Gl.clone(e.uniforms),
                this.defines = e.defines,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.lights = e.lights,
                this.clipping = e.clipping,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this.extensions = e.extensions,
                this
            }
            ,
            Ot.prototype.toJSON = function(e) {
                var t = K.prototype.toJSON.call(this, e);
                return t.uniforms = this.uniforms,
                t.vertexShader = this.vertexShader,
                t.fragmentShader = this.fragmentShader,
                t
            }
            ,
            Object.assign(It.prototype, {
                set: function(e, t) {
                    return this.origin.copy(e),
                    this.direction.copy(t),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                },
                at: function(e, t) {
                    var i = t || new a;
                    return i.copy(this.direction).multiplyScalar(e).add(this.origin)
                },
                lookAt: function(e) {
                    return this.direction.copy(e).sub(this.origin).normalize(),
                    this
                },
                recast: function() {
                    var e = new a;
                    return function(t) {
                        return this.origin.copy(this.at(t, e)),
                        this
                    }
                }(),
                closestPointToPoint: function(e, t) {
                    var i = t || new a;
                    i.subVectors(e, this.origin);
                    var n = i.dot(this.direction);
                    return 0 > n ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(n).add(this.origin)
                },
                distanceToPoint: function(e) {
                    return Math.sqrt(this.distanceSqToPoint(e))
                },
                distanceSqToPoint: function() {
                    var e = new a;
                    return function(t) {
                        var i = e.subVectors(t, this.origin).dot(this.direction);
                        return 0 > i ? this.origin.distanceToSquared(t) : (e.copy(this.direction).multiplyScalar(i).add(this.origin),
                        e.distanceToSquared(t))
                    }
                }(),
                distanceSqToSegment: function() {
                    var e = new a
                      , t = new a
                      , i = new a;
                    return function(n, r, a, o) {
                        e.copy(n).add(r).multiplyScalar(.5),
                        t.copy(r).sub(n).normalize(),
                        i.copy(this.origin).sub(e);
                        var s, l, c, h, u = .5 * n.distanceTo(r), d = -this.direction.dot(t), p = i.dot(this.direction), f = -i.dot(t), m = i.lengthSq(), v = Math.abs(1 - d * d);
                        if (v > 0)
                            if (s = d * f - p,
                            l = d * p - f,
                            h = u * v,
                            s >= 0)
                                if (l >= -h)
                                    if (h >= l) {
                                        var g = 1 / v;
                                        s *= g,
                                        l *= g,
                                        c = s * (s + d * l + 2 * p) + l * (d * s + l + 2 * f) + m
                                    } else
                                        l = u,
                                        s = Math.max(0, -(d * l + p)),
                                        c = -s * s + l * (l + 2 * f) + m;
                                else
                                    l = -u,
                                    s = Math.max(0, -(d * l + p)),
                                    c = -s * s + l * (l + 2 * f) + m;
                            else
                                -h >= l ? (s = Math.max(0, -(-d * u + p)),
                                l = s > 0 ? -u : Math.min(Math.max(-u, -f), u),
                                c = -s * s + l * (l + 2 * f) + m) : h >= l ? (s = 0,
                                l = Math.min(Math.max(-u, -f), u),
                                c = l * (l + 2 * f) + m) : (s = Math.max(0, -(d * u + p)),
                                l = s > 0 ? u : Math.min(Math.max(-u, -f), u),
                                c = -s * s + l * (l + 2 * f) + m);
                        else
                            l = d > 0 ? -u : u,
                            s = Math.max(0, -(d * l + p)),
                            c = -s * s + l * (l + 2 * f) + m;
                        return a && a.copy(this.direction).multiplyScalar(s).add(this.origin),
                        o && o.copy(t).multiplyScalar(l).add(e),
                        c
                    }
                }(),
                intersectSphere: function() {
                    var e = new a;
                    return function(t, i) {
                        e.subVectors(t.center, this.origin);
                        var n = e.dot(this.direction)
                          , r = e.dot(e) - n * n
                          , a = t.radius * t.radius;
                        if (r > a)
                            return null;
                        var o = Math.sqrt(a - r)
                          , s = n - o
                          , l = n + o;
                        return 0 > s && 0 > l ? null : 0 > s ? this.at(l, i) : this.at(s, i)
                    }
                }(),
                intersectsSphere: function(e) {
                    return this.distanceToPoint(e.center) <= e.radius
                },
                distanceToPlane: function(e) {
                    var t = e.normal.dot(this.direction);
                    if (0 === t)
                        return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                    var i = -(this.origin.dot(e.normal) + e.constant) / t;
                    return i >= 0 ? i : null
                },
                intersectPlane: function(e, t) {
                    var i = this.distanceToPlane(e);
                    return null === i ? null : this.at(i, t)
                },
                intersectsPlane: function(e) {
                    var t = e.distanceToPoint(this.origin);
                    if (0 === t)
                        return !0;
                    var i = e.normal.dot(this.direction);
                    return 0 > i * t ? !0 : !1
                },
                intersectBox: function(e, t) {
                    var i, n, r, a, o, s, l = 1 / this.direction.x, c = 1 / this.direction.y, h = 1 / this.direction.z, u = this.origin;
                    return l >= 0 ? (i = (e.min.x - u.x) * l,
                    n = (e.max.x - u.x) * l) : (i = (e.max.x - u.x) * l,
                    n = (e.min.x - u.x) * l),
                    c >= 0 ? (r = (e.min.y - u.y) * c,
                    a = (e.max.y - u.y) * c) : (r = (e.max.y - u.y) * c,
                    a = (e.min.y - u.y) * c),
                    i > a || r > n ? null : ((r > i || i !== i) && (i = r),
                    (n > a || n !== n) && (n = a),
                    h >= 0 ? (o = (e.min.z - u.z) * h,
                    s = (e.max.z - u.z) * h) : (o = (e.max.z - u.z) * h,
                    s = (e.min.z - u.z) * h),
                    i > s || o > n ? null : ((o > i || i !== i) && (i = o),
                    (n > s || n !== n) && (n = s),
                    0 > n ? null : this.at(i >= 0 ? i : n, t)))
                },
                intersectsBox: function() {
                    var e = new a;
                    return function(t) {
                        return null !== this.intersectBox(t, e)
                    }
                }(),
                intersectTriangle: function() {
                    var e = new a
                      , t = new a
                      , i = new a
                      , n = new a;
                    return function(r, a, o, s, l) {
                        t.subVectors(a, r),
                        i.subVectors(o, r),
                        n.crossVectors(t, i);
                        var c, h = this.direction.dot(n);
                        if (h > 0) {
                            if (s)
                                return null;
                            c = 1
                        } else {
                            if (!(0 > h))
                                return null;
                            c = -1,
                            h = -h
                        }
                        e.subVectors(this.origin, r);
                        var u = c * this.direction.dot(i.crossVectors(e, i));
                        if (0 > u)
                            return null;
                        var d = c * this.direction.dot(t.cross(e));
                        if (0 > d)
                            return null;
                        if (u + d > h)
                            return null;
                        var p = -c * e.dot(n);
                        return 0 > p ? null : this.at(p / h, l)
                    }
                }(),
                applyMatrix4: function(e) {
                    return this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                },
                equals: function(e) {
                    return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                }
            }),
            Object.assign(Dt.prototype, {
                set: function(e, t) {
                    return this.start.copy(e),
                    this.end.copy(t),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.start.copy(e.start),
                    this.end.copy(e.end),
                    this
                },
                getCenter: function(e) {
                    var t = e || new a;
                    return t.addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function(e) {
                    var t = e || new a;
                    return t.subVectors(this.end, this.start)
                },
                distanceSq: function() {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function() {
                    return this.start.distanceTo(this.end)
                },
                at: function(e, t) {
                    var i = t || new a;
                    return this.delta(i).multiplyScalar(e).add(this.start)
                },
                closestPointToPointParameter: function() {
                    var e = new a
                      , t = new a;
                    return function(i, n) {
                        e.subVectors(i, this.start),
                        t.subVectors(this.end, this.start);
                        var r = t.dot(t)
                          , a = t.dot(e)
                          , o = a / r;
                        return n && (o = Ll.clamp(o, 0, 1)),
                        o
                    }
                }(),
                closestPointToPoint: function(e, t, i) {
                    var n = this.closestPointToPointParameter(e, t)
                      , r = i || new a;
                    return this.delta(r).multiplyScalar(n).add(this.start)
                },
                applyMatrix4: function(e) {
                    return this.start.applyMatrix4(e),
                    this.end.applyMatrix4(e),
                    this
                },
                equals: function(e) {
                    return e.start.equals(this.start) && e.end.equals(this.end)
                }
            }),
            Object.assign(Ut, {
                normal: function() {
                    var e = new a;
                    return function(t, i, n, r) {
                        var o = r || new a;
                        o.subVectors(n, i),
                        e.subVectors(t, i),
                        o.cross(e);
                        var s = o.lengthSq();
                        return s > 0 ? o.multiplyScalar(1 / Math.sqrt(s)) : o.set(0, 0, 0)
                    }
                }(),
                barycoordFromPoint: function() {
                    var e = new a
                      , t = new a
                      , i = new a;
                    return function(n, r, o, s, l) {
                        e.subVectors(s, r),
                        t.subVectors(o, r),
                        i.subVectors(n, r);
                        var c = e.dot(e)
                          , h = e.dot(t)
                          , u = e.dot(i)
                          , d = t.dot(t)
                          , p = t.dot(i)
                          , f = c * d - h * h
                          , m = l || new a;
                        if (0 === f)
                            return m.set(-2, -1, -1);
                        var v = 1 / f
                          , g = (d * u - h * p) * v
                          , y = (c * p - h * u) * v;
                        return m.set(1 - g - y, y, g)
                    }
                }(),
                containsPoint: function() {
                    var e = new a;
                    return function(t, i, n, r) {
                        var a = Ut.barycoordFromPoint(t, i, n, r, e);
                        return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
                    }
                }()
            }),
            Object.assign(Ut.prototype, {
                set: function(e, t, i) {
                    return this.a.copy(e),
                    this.b.copy(t),
                    this.c.copy(i),
                    this
                },
                setFromPointsAndIndices: function(e, t, i, n) {
                    return this.a.copy(e[t]),
                    this.b.copy(e[i]),
                    this.c.copy(e[n]),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.a.copy(e.a),
                    this.b.copy(e.b),
                    this.c.copy(e.c),
                    this
                },
                area: function() {
                    var e = new a
                      , t = new a;
                    return function() {
                        return e.subVectors(this.c, this.b),
                        t.subVectors(this.a, this.b),
                        .5 * e.cross(t).length()
                    }
                }(),
                midpoint: function(e) {
                    var t = e || new a;
                    return t.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                },
                normal: function(e) {
                    return Ut.normal(this.a, this.b, this.c, e)
                },
                plane: function(e) {
                    var t = e || new nt;
                    return t.setFromCoplanarPoints(this.a, this.b, this.c)
                },
                barycoordFromPoint: function(e, t) {
                    return Ut.barycoordFromPoint(e, this.a, this.b, this.c, t)
                },
                containsPoint: function(e) {
                    return Ut.containsPoint(e, this.a, this.b, this.c)
                },
                closestPointToPoint: function() {
                    var e = new nt
                      , t = [new Dt, new Dt, new Dt]
                      , i = new a
                      , n = new a;
                    return function(r, o) {
                        var s = o || new a
                          , l = 1 / 0;
                        if (e.setFromCoplanarPoints(this.a, this.b, this.c),
                        e.projectPoint(r, i),
                        this.containsPoint(i) === !0)
                            s.copy(i);
                        else {
                            t[0].set(this.a, this.b),
                            t[1].set(this.b, this.c),
                            t[2].set(this.c, this.a);
                            for (var c = 0; c < t.length; c++) {
                                t[c].closestPointToPoint(i, !0, n);
                                var h = i.distanceToSquared(n);
                                l > h && (l = h,
                                s.copy(n))
                            }
                        }
                        return s
                    }
                }(),
                equals: function(e) {
                    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                }
            }),
            Ft.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Ft,
                isMesh: !0,
                setDrawMode: function(e) {
                    this.drawMode = e
                },
                copy: function(e) {
                    return ct.prototype.copy.call(this, e),
                    this.drawMode = e.drawMode,
                    void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)),
                    this
                },
                updateMorphTargets: function() {
                    var e, t, i, n = this.geometry;
                    if (n.isBufferGeometry) {
                        var r = n.morphAttributes
                          , a = Object.keys(r);
                        if (a.length > 0) {
                            var o = r[a[0]];
                            if (void 0 !== o)
                                for (this.morphTargetInfluences = [],
                                this.morphTargetDictionary = {},
                                e = 0,
                                t = o.length; t > e; e++)
                                    i = o[e].name || String(e),
                                    this.morphTargetInfluences.push(0),
                                    this.morphTargetDictionary[i] = e
                        }
                    } else {
                        var s = n.morphTargets;
                        if (void 0 !== s && s.length > 0)
                            for (this.morphTargetInfluences = [],
                            this.morphTargetDictionary = {},
                            e = 0,
                            t = s.length; t > e; e++)
                                i = s[e].name || String(e),
                                this.morphTargetInfluences.push(0),
                                this.morphTargetDictionary[i] = e
                    }
                },
                raycast: function() {
                    function e(e, t, i, n, r, a, o) {
                        return Ut.barycoordFromPoint(e, t, i, n, y),
                        r.multiplyScalar(y.x),
                        a.multiplyScalar(y.y),
                        o.multiplyScalar(y.z),
                        r.add(a).add(o),
                        r.clone()
                    }
                    function t(e, t, i, n, r, a, o, s) {
                        var l;
                        if (l = t.side === Eo ? n.intersectTriangle(o, a, r, !0, s) : n.intersectTriangle(r, a, o, t.side !== So, s),
                        null === l)
                            return null;
                        x.copy(s),
                        x.applyMatrix4(e.matrixWorld);
                        var c = i.ray.origin.distanceTo(x);
                        return c < i.near || c > i.far ? null : {
                            distance: c,
                            point: x.clone(),
                            object: e
                        }
                    }
                    function r(i, n, r, a, o, s, l, d) {
                        c.fromBufferAttribute(a, s),
                        h.fromBufferAttribute(a, l),
                        u.fromBufferAttribute(a, d);
                        var p = t(i, i.material, n, r, c, h, u, _);
                        return p && (o && (m.fromBufferAttribute(o, s),
                        v.fromBufferAttribute(o, l),
                        g.fromBufferAttribute(o, d),
                        p.uv = e(_, c, h, u, m, v, g)),
                        p.face = new dt(s,l,d,Ut.normal(c, h, u)),
                        p.faceIndex = s),
                        p
                    }
                    var o = new n
                      , s = new It
                      , l = new it
                      , c = new a
                      , h = new a
                      , u = new a
                      , d = new a
                      , p = new a
                      , f = new a
                      , m = new i
                      , v = new i
                      , g = new i
                      , y = new a
                      , _ = new a
                      , x = new a;
                    return function(i, n) {
                        var a = this.geometry
                          , y = this.material
                          , x = this.matrixWorld;
                        if (void 0 !== y && (null === a.boundingSphere && a.computeBoundingSphere(),
                        l.copy(a.boundingSphere),
                        l.applyMatrix4(x),
                        i.ray.intersectsSphere(l) !== !1 && (o.getInverse(x),
                        s.copy(i.ray).applyMatrix4(o),
                        null === a.boundingBox || s.intersectsBox(a.boundingBox) !== !1))) {
                            var b;
                            if (a.isBufferGeometry) {
                                var w, T, M, E, S, A = a.index, P = a.attributes.position, C = a.attributes.uv;
                                if (null !== A)
                                    for (E = 0,
                                    S = A.count; S > E; E += 3)
                                        w = A.getX(E),
                                        T = A.getX(E + 1),
                                        M = A.getX(E + 2),
                                        b = r(this, i, s, P, C, w, T, M),
                                        b && (b.faceIndex = Math.floor(E / 3),
                                        n.push(b));
                                else if (void 0 !== P)
                                    for (E = 0,
                                    S = P.count; S > E; E += 3)
                                        w = E,
                                        T = E + 1,
                                        M = E + 2,
                                        b = r(this, i, s, P, C, w, T, M),
                                        b && (b.index = w,
                                        n.push(b))
                            } else if (a.isGeometry) {
                                var L, R, O, I, D = Array.isArray(y), U = a.vertices, F = a.faces, k = a.faceVertexUvs[0];
                                k.length > 0 && (I = k);
                                for (var N = 0, z = F.length; z > N; N++) {
                                    var B = F[N]
                                      , G = D ? y[B.materialIndex] : y;
                                    if (void 0 !== G) {
                                        if (L = U[B.a],
                                        R = U[B.b],
                                        O = U[B.c],
                                        G.morphTargets === !0) {
                                            var H = a.morphTargets
                                              , j = this.morphTargetInfluences;
                                            c.set(0, 0, 0),
                                            h.set(0, 0, 0),
                                            u.set(0, 0, 0);
                                            for (var V = 0, W = H.length; W > V; V++) {
                                                var X = j[V];
                                                if (0 !== X) {
                                                    var Y = H[V].vertices;
                                                    c.addScaledVector(d.subVectors(Y[B.a], L), X),
                                                    h.addScaledVector(p.subVectors(Y[B.b], R), X),
                                                    u.addScaledVector(f.subVectors(Y[B.c], O), X)
                                                }
                                            }
                                            c.add(L),
                                            h.add(R),
                                            u.add(O),
                                            L = c,
                                            R = h,
                                            O = u
                                        }
                                        if (b = t(this, G, i, s, L, R, O, _)) {
                                            if (I && I[N]) {
                                                var q = I[N];
                                                m.copy(q[0]),
                                                v.copy(q[1]),
                                                g.copy(q[2]),
                                                b.uv = e(_, L, R, O, m, v, g)
                                            }
                                            b.face = B,
                                            b.faceIndex = N,
                                            n.push(b)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            });
            var Zh = 0;
            mi.prototype = Object.assign(Object.create(ht.prototype), {
                constructor: mi,
                isPerspectiveCamera: !0,
                copy: function(e, t) {
                    return ht.prototype.copy.call(this, e, t),
                    this.fov = e.fov,
                    this.zoom = e.zoom,
                    this.near = e.near,
                    this.far = e.far,
                    this.focus = e.focus,
                    this.aspect = e.aspect,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this.filmGauge = e.filmGauge,
                    this.filmOffset = e.filmOffset,
                    this
                },
                setFocalLength: function(e) {
                    var t = .5 * this.getFilmHeight() / e;
                    this.fov = 2 * Ll.RAD2DEG * Math.atan(t),
                    this.updateProjectionMatrix()
                },
                getFocalLength: function() {
                    var e = Math.tan(.5 * Ll.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / e
                },
                getEffectiveFOV: function() {
                    return 2 * Ll.RAD2DEG * Math.atan(Math.tan(.5 * Ll.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function() {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function() {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function(e, t, i, n, r, a) {
                    this.aspect = e / t,
                    null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = i,
                    this.view.offsetY = n,
                    this.view.width = r,
                    this.view.height = a,
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var e = this.near
                      , t = e * Math.tan(.5 * Ll.DEG2RAD * this.fov) / this.zoom
                      , i = 2 * t
                      , n = this.aspect * i
                      , r = -.5 * n
                      , a = this.view;
                    if (null !== this.view && this.view.enabled) {
                        var o = a.fullWidth
                          , s = a.fullHeight;
                        r += a.offsetX * n / o,
                        t -= a.offsetY * i / s,
                        n *= a.width / o,
                        i *= a.height / s
                    }
                    var l = this.filmOffset;
                    0 !== l && (r += e * l / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(r, r + n, t, t - i, e, this.far)
                },
                toJSON: function(e) {
                    var t = ct.prototype.toJSON.call(this, e);
                    return t.object.fov = this.fov,
                    t.object.zoom = this.zoom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    t.object.focus = this.focus,
                    t.object.aspect = this.aspect,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t.object.filmGauge = this.filmGauge,
                    t.object.filmOffset = this.filmOffset,
                    t
                }
            }),
            vi.prototype = Object.assign(Object.create(mi.prototype), {
                constructor: vi,
                isArrayCamera: !0
            }),
            wi.prototype.isFogExp2 = !0,
            wi.prototype.clone = function() {
                return new wi(this.color.getHex(),this.density)
            }
            ,
            wi.prototype.toJSON = function() {
                return {
                    type: "FogExp2",
                    color: this.color.getHex(),
                    density: this.density
                }
            }
            ,
            Ti.prototype.isFog = !0,
            Ti.prototype.clone = function() {
                return new Ti(this.color.getHex(),this.near,this.far)
            }
            ,
            Ti.prototype.toJSON = function() {
                return {
                    type: "Fog",
                    color: this.color.getHex(),
                    near: this.near,
                    far: this.far
                }
            }
            ,
            Mi.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Mi,
                copy: function(e, t) {
                    return ct.prototype.copy.call(this, e, t),
                    null !== e.background && (this.background = e.background.clone()),
                    null !== e.fog && (this.fog = e.fog.clone()),
                    null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
                    this.autoUpdate = e.autoUpdate,
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this
                },
                toJSON: function(e) {
                    var t = ct.prototype.toJSON.call(this, e);
                    return null !== this.background && (t.object.background = this.background.toJSON(e)),
                    null !== this.fog && (t.object.fog = this.fog.toJSON()),
                    t
                }
            }),
            Ei.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Ei,
                isLensFlare: !0,
                copy: function(e) {
                    ct.prototype.copy.call(this, e),
                    this.positionScreen.copy(e.positionScreen),
                    this.customUpdateCallback = e.customUpdateCallback;
                    for (var t = 0, i = e.lensFlares.length; i > t; t++)
                        this.lensFlares.push(e.lensFlares[t]);
                    return this
                },
                add: function(e, t, i, n, r, a) {
                    void 0 === t && (t = -1),
                    void 0 === i && (i = 0),
                    void 0 === a && (a = 1),
                    void 0 === r && (r = new Y(16777215)),
                    void 0 === n && (n = Io),
                    i = Math.min(i, Math.max(0, i)),
                    this.lensFlares.push({
                        texture: e,
                        size: t,
                        distance: i,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 0,
                        opacity: a,
                        color: r,
                        blending: n
                    })
                },
                updateLensFlares: function() {
                    var e, t, i = this.lensFlares.length, n = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
                    for (e = 0; i > e; e++)
                        t = this.lensFlares[e],
                        t.x = this.positionScreen.x + n * t.distance,
                        t.y = this.positionScreen.y + r * t.distance,
                        t.wantedRotation = t.x * Math.PI * .25,
                        t.rotation += .25 * (t.wantedRotation - t.rotation)
                }
            }),
            Si.prototype = Object.create(K.prototype),
            Si.prototype.constructor = Si,
            Si.prototype.isSpriteMaterial = !0,
            Si.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.rotation = e.rotation,
                this
            }
            ,
            Ai.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Ai,
                isSprite: !0,
                raycast: function() {
                    var e = new a
                      , t = new a
                      , i = new a;
                    return function(n, r) {
                        t.setFromMatrixPosition(this.matrixWorld),
                        n.ray.closestPointToPoint(t, e),
                        i.setFromMatrixScale(this.matrixWorld);
                        var a = i.x * i.y / 4;
                        if (!(t.distanceToSquared(e) > a)) {
                            var o = n.ray.origin.distanceTo(e);
                            o < n.near || o > n.far || r.push({
                                distance: o,
                                point: e.clone(),
                                face: null,
                                object: this
                            })
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.material).copy(this)
                }
            }),
            Pi.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Pi,
                copy: function(e) {
                    ct.prototype.copy.call(this, e, !1);
                    for (var t = e.levels, i = 0, n = t.length; n > i; i++) {
                        var r = t[i];
                        this.addLevel(r.object.clone(), r.distance)
                    }
                    return this
                },
                addLevel: function(e, t) {
                    void 0 === t && (t = 0),
                    t = Math.abs(t);
                    for (var i = this.levels, n = 0; n < i.length && !(t < i[n].distance); n++)
                        ;
                    i.splice(n, 0, {
                        distance: t,
                        object: e
                    }),
                    this.add(e)
                },
                getObjectForDistance: function(e) {
                    for (var t = this.levels, i = 1, n = t.length; n > i && !(e < t[i].distance); i++)
                        ;
                    return t[i - 1].object
                },
                raycast: function() {
                    var e = new a;
                    return function(t, i) {
                        e.setFromMatrixPosition(this.matrixWorld);
                        var n = t.ray.origin.distanceTo(e);
                        this.getObjectForDistance(n).raycast(t, i)
                    }
                }(),
                update: function() {
                    var e = new a
                      , t = new a;
                    return function(i) {
                        var n = this.levels;
                        if (n.length > 1) {
                            e.setFromMatrixPosition(i.matrixWorld),
                            t.setFromMatrixPosition(this.matrixWorld);
                            var r = e.distanceTo(t);
                            n[0].object.visible = !0;
                            for (var a = 1, o = n.length; o > a && r >= n[a].distance; a++)
                                n[a - 1].object.visible = !1,
                                n[a].object.visible = !0;
                            for (; o > a; a++)
                                n[a].object.visible = !1
                        }
                    }
                }(),
                toJSON: function(e) {
                    var t = ct.prototype.toJSON.call(this, e);
                    t.object.levels = [];
                    for (var i = this.levels, n = 0, r = i.length; r > n; n++) {
                        var a = i[n];
                        t.object.levels.push({
                            object: a.object.uuid,
                            distance: a.distance
                        })
                    }
                    return t
                }
            }),
            Object.assign(Ci.prototype, {
                calculateInverses: function() {
                    this.boneInverses = [];
                    for (var e = 0, t = this.bones.length; t > e; e++) {
                        var i = new n;
                        this.bones[e] && i.getInverse(this.bones[e].matrixWorld),
                        this.boneInverses.push(i)
                    }
                },
                pose: function() {
                    var e, t, i;
                    for (t = 0,
                    i = this.bones.length; i > t; t++)
                        e = this.bones[t],
                        e && e.matrixWorld.getInverse(this.boneInverses[t]);
                    for (t = 0,
                    i = this.bones.length; i > t; t++)
                        e = this.bones[t],
                        e && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld),
                        e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld),
                        e.matrix.decompose(e.position, e.quaternion, e.scale))
                },
                update: function() {
                    var e = new n
                      , t = new n;
                    return function() {
                        for (var i = this.bones, n = this.boneInverses, r = this.boneMatrices, a = this.boneTexture, o = 0, s = i.length; s > o; o++) {
                            var l = i[o] ? i[o].matrixWorld : t;
                            e.multiplyMatrices(l, n[o]),
                            e.toArray(r, 16 * o)
                        }
                        void 0 !== a && (a.needsUpdate = !0)
                    }
                }(),
                clone: function() {
                    return new Ci(this.bones,this.boneInverses)
                }
            }),
            Li.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Li,
                isBone: !0
            }),
            Ri.prototype = Object.assign(Object.create(Ft.prototype), {
                constructor: Ri,
                isSkinnedMesh: !0,
                initBones: function() {
                    var e, t, i, n, r = [];
                    if (this.geometry && void 0 !== this.geometry.bones) {
                        for (i = 0,
                        n = this.geometry.bones.length; n > i; i++)
                            t = this.geometry.bones[i],
                            e = new Li,
                            r.push(e),
                            e.name = t.name,
                            e.position.fromArray(t.pos),
                            e.quaternion.fromArray(t.rotq),
                            void 0 !== t.scl && e.scale.fromArray(t.scl);
                        for (i = 0,
                        n = this.geometry.bones.length; n > i; i++)
                            t = this.geometry.bones[i],
                            -1 !== t.parent && null !== t.parent && void 0 !== r[t.parent] ? r[t.parent].add(r[i]) : this.add(r[i])
                    }
                    return this.updateMatrixWorld(!0),
                    r
                },
                bind: function(e, t) {
                    this.skeleton = e,
                    void 0 === t && (this.updateMatrixWorld(!0),
                    this.skeleton.calculateInverses(),
                    t = this.matrixWorld),
                    this.bindMatrix.copy(t),
                    this.bindMatrixInverse.getInverse(t)
                },
                pose: function() {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function() {
                    var e, t;
                    if (this.geometry && this.geometry.isGeometry)
                        for (t = 0; t < this.geometry.skinWeights.length; t++) {
                            var i = this.geometry.skinWeights[t];
                            e = 1 / i.manhattanLength(),
                            1 / 0 !== e ? i.multiplyScalar(e) : i.set(1, 0, 0, 0)
                        }
                    else if (this.geometry && this.geometry.isBufferGeometry) {
                        var n = new l
                          , r = this.geometry.attributes.skinWeight;
                        for (t = 0; t < r.count; t++)
                            n.x = r.getX(t),
                            n.y = r.getY(t),
                            n.z = r.getZ(t),
                            n.w = r.getW(t),
                            e = 1 / n.manhattanLength(),
                            1 / 0 !== e ? n.multiplyScalar(e) : n.set(1, 0, 0, 0),
                            r.setXYZW(t, n.x, n.y, n.z, n.w)
                    }
                },
                updateMatrixWorld: function(e) {
                    Ft.prototype.updateMatrixWorld.call(this, e),
                    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Oi.prototype = Object.create(K.prototype),
            Oi.prototype.constructor = Oi,
            Oi.prototype.isLineBasicMaterial = !0,
            Oi.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.linewidth = e.linewidth,
                this.linecap = e.linecap,
                this.linejoin = e.linejoin,
                this
            }
            ,
            Ii.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Ii,
                isLine: !0,
                raycast: function() {
                    var e = new n
                      , t = new It
                      , i = new it;
                    return function(n, r) {
                        var o = n.linePrecision
                          , s = o * o
                          , l = this.geometry
                          , c = this.matrixWorld;
                        if (null === l.boundingSphere && l.computeBoundingSphere(),
                        i.copy(l.boundingSphere),
                        i.applyMatrix4(c),
                        n.ray.intersectsSphere(i) !== !1) {
                            e.getInverse(c),
                            t.copy(n.ray).applyMatrix4(e);
                            var h = new a
                              , u = new a
                              , d = new a
                              , p = new a
                              , f = this && this.isLineSegments ? 2 : 1;
                            if (l.isBufferGeometry) {
                                var m = l.index
                                  , v = l.attributes
                                  , g = v.position.array;
                                if (null !== m)
                                    for (var y = m.array, _ = 0, x = y.length - 1; x > _; _ += f) {
                                        var b = y[_]
                                          , w = y[_ + 1];
                                        h.fromArray(g, 3 * b),
                                        u.fromArray(g, 3 * w);
                                        var T = t.distanceSqToSegment(h, u, p, d);
                                        if (!(T > s)) {
                                            p.applyMatrix4(this.matrixWorld);
                                            var M = n.ray.origin.distanceTo(p);
                                            M < n.near || M > n.far || r.push({
                                                distance: M,
                                                point: d.clone().applyMatrix4(this.matrixWorld),
                                                index: _,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                                else
                                    for (var _ = 0, x = g.length / 3 - 1; x > _; _ += f) {
                                        h.fromArray(g, 3 * _),
                                        u.fromArray(g, 3 * _ + 3);
                                        var T = t.distanceSqToSegment(h, u, p, d);
                                        if (!(T > s)) {
                                            p.applyMatrix4(this.matrixWorld);
                                            var M = n.ray.origin.distanceTo(p);
                                            M < n.near || M > n.far || r.push({
                                                distance: M,
                                                point: d.clone().applyMatrix4(this.matrixWorld),
                                                index: _,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                            } else if (l.isGeometry)
                                for (var E = l.vertices, S = E.length, _ = 0; S - 1 > _; _ += f) {
                                    var T = t.distanceSqToSegment(E[_], E[_ + 1], p, d);
                                    if (!(T > s)) {
                                        p.applyMatrix4(this.matrixWorld);
                                        var M = n.ray.origin.distanceTo(p);
                                        M < n.near || M > n.far || r.push({
                                            distance: M,
                                            point: d.clone().applyMatrix4(this.matrixWorld),
                                            index: _,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Di.prototype = Object.assign(Object.create(Ii.prototype), {
                constructor: Di,
                isLineSegments: !0
            }),
            Ui.prototype = Object.assign(Object.create(Ii.prototype), {
                constructor: Ui,
                isLineLoop: !0
            }),
            Fi.prototype = Object.create(K.prototype),
            Fi.prototype.constructor = Fi,
            Fi.prototype.isPointsMaterial = !0,
            Fi.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.size = e.size,
                this.sizeAttenuation = e.sizeAttenuation,
                this
            }
            ,
            ki.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: ki,
                isPoints: !0,
                raycast: function() {
                    var e = new n
                      , t = new It
                      , i = new it;
                    return function(n, r) {
                        function o(e, i) {
                            var a = t.distanceSqToPoint(e);
                            if (d > a) {
                                var o = t.closestPointToPoint(e);
                                o.applyMatrix4(c);
                                var l = n.ray.origin.distanceTo(o);
                                if (l < n.near || l > n.far)
                                    return;
                                r.push({
                                    distance: l,
                                    distanceToRay: Math.sqrt(a),
                                    point: o.clone(),
                                    index: i,
                                    face: null,
                                    object: s
                                })
                            }
                        }
                        var s = this
                          , l = this.geometry
                          , c = this.matrixWorld
                          , h = n.params.Points.threshold;
                        if (null === l.boundingSphere && l.computeBoundingSphere(),
                        i.copy(l.boundingSphere),
                        i.applyMatrix4(c),
                        i.radius += h,
                        n.ray.intersectsSphere(i) !== !1) {
                            e.getInverse(c),
                            t.copy(n.ray).applyMatrix4(e);
                            var u = h / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                              , d = u * u
                              , p = new a;
                            if (l.isBufferGeometry) {
                                var f = l.index
                                  , m = l.attributes
                                  , v = m.position.array;
                                if (null !== f)
                                    for (var g = f.array, y = 0, _ = g.length; _ > y; y++) {
                                        var x = g[y];
                                        p.fromArray(v, 3 * x),
                                        o(p, x)
                                    }
                                else
                                    for (var y = 0, b = v.length / 3; b > y; y++)
                                        p.fromArray(v, 3 * y),
                                        o(p, y)
                            } else
                                for (var w = l.vertices, y = 0, b = w.length; b > y; y++)
                                    o(w[y], y)
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Ni.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Ni
            }),
            zi.prototype = Object.create(s.prototype),
            zi.prototype.constructor = zi,
            Bi.prototype = Object.create(s.prototype),
            Bi.prototype.constructor = Bi,
            Bi.prototype.isCompressedTexture = !0,
            Gi.prototype = Object.create(s.prototype),
            Gi.prototype.constructor = Gi,
            Gi.prototype.isDepthTexture = !0,
            Hi.prototype = Object.create(St.prototype),
            Hi.prototype.constructor = Hi,
            ji.prototype = Object.create(pt.prototype),
            ji.prototype.constructor = ji,
            Vi.prototype = Object.create(St.prototype),
            Vi.prototype.constructor = Vi,
            Wi.prototype = Object.create(pt.prototype),
            Wi.prototype.constructor = Wi,
            Xi.prototype = Object.create(St.prototype),
            Xi.prototype.constructor = Xi,
            Yi.prototype = Object.create(pt.prototype),
            Yi.prototype.constructor = Yi,
            qi.prototype = Object.create(Xi.prototype),
            qi.prototype.constructor = qi,
            Zi.prototype = Object.create(pt.prototype),
            Zi.prototype.constructor = Zi,
            Qi.prototype = Object.create(Xi.prototype),
            Qi.prototype.constructor = Qi,
            Ji.prototype = Object.create(pt.prototype),
            Ji.prototype.constructor = Ji,
            Ki.prototype = Object.create(Xi.prototype),
            Ki.prototype.constructor = Ki,
            $i.prototype = Object.create(pt.prototype),
            $i.prototype.constructor = $i,
            en.prototype = Object.create(Xi.prototype),
            en.prototype.constructor = en,
            tn.prototype = Object.create(pt.prototype),
            tn.prototype.constructor = tn,
            nn.prototype = Object.create(St.prototype),
            nn.prototype.constructor = nn,
            rn.prototype = Object.create(pt.prototype),
            rn.prototype.constructor = rn,
            an.prototype = Object.create(St.prototype),
            an.prototype.constructor = an,
            on.prototype = Object.create(pt.prototype),
            on.prototype.constructor = on,
            sn.prototype = Object.create(St.prototype),
            sn.prototype.constructor = sn;
            var Qh = {
                area: function(e) {
                    for (var t = e.length, i = 0, n = t - 1, r = 0; t > r; n = r++)
                        i += e[n].x * e[r].y - e[r].x * e[n].y;
                    return .5 * i
                },
                triangulate: function() {
                    function e(e, t, i, n, r, a) {
                        var o, s, l, c, h, u, d, p, f;
                        if (s = e[a[t]].x,
                        l = e[a[t]].y,
                        c = e[a[i]].x,
                        h = e[a[i]].y,
                        u = e[a[n]].x,
                        d = e[a[n]].y,
                        0 >= (c - s) * (d - l) - (h - l) * (u - s))
                            return !1;
                        var m, v, g, y, _, x, b, w, T, M, E, S, A, P, C;
                        for (m = u - c,
                        v = d - h,
                        g = s - u,
                        y = l - d,
                        _ = c - s,
                        x = h - l,
                        o = 0; r > o; o++)
                            if (p = e[a[o]].x,
                            f = e[a[o]].y,
                            !(p === s && f === l || p === c && f === h || p === u && f === d) && (b = p - s,
                            w = f - l,
                            T = p - c,
                            M = f - h,
                            E = p - u,
                            S = f - d,
                            C = m * M - v * T,
                            A = _ * w - x * b,
                            P = g * S - y * E,
                            C >= -Number.EPSILON && P >= -Number.EPSILON && A >= -Number.EPSILON))
                                return !1;
                        return !0
                    }
                    return function(t, i) {
                        var n = t.length;
                        if (3 > n)
                            return null;
                        var r, a, o, s = [], l = [], c = [];
                        if (Qh.area(t) > 0)
                            for (a = 0; n > a; a++)
                                l[a] = a;
                        else
                            for (a = 0; n > a; a++)
                                l[a] = n - 1 - a;
                        var h = n
                          , u = 2 * h;
                        for (a = h - 1; h > 2; ) {
                            if (u-- <= 0)
                                return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),
                                i ? c : s;
                            if (r = a,
                            r >= h && (r = 0),
                            a = r + 1,
                            a >= h && (a = 0),
                            o = a + 1,
                            o >= h && (o = 0),
                            e(t, r, a, o, h, l)) {
                                var d, p, f, m, v;
                                for (d = l[r],
                                p = l[a],
                                f = l[o],
                                s.push([t[d], t[p], t[f]]),
                                c.push([l[r], l[a], l[o]]),
                                m = a,
                                v = a + 1; h > v; m++,
                                v++)
                                    l[m] = l[v];
                                h--,
                                u = 2 * h
                            }
                        }
                        return i ? c : s
                    }
                }(),
                triangulateShape: function(e, t) {
                    function i(e) {
                        var t = e.length;
                        t > 2 && e[t - 1].equals(e[0]) && e.pop()
                    }
                    function n(e, t, i) {
                        return e.x !== t.x ? e.x < t.x ? e.x <= i.x && i.x <= t.x : t.x <= i.x && i.x <= e.x : e.y < t.y ? e.y <= i.y && i.y <= t.y : t.y <= i.y && i.y <= e.y
                    }
                    function r(e, t, i, r, a) {
                        var o = t.x - e.x
                          , s = t.y - e.y
                          , l = r.x - i.x
                          , c = r.y - i.y
                          , h = e.x - i.x
                          , u = e.y - i.y
                          , d = s * l - o * c
                          , p = s * h - o * u;
                        if (Math.abs(d) > Number.EPSILON) {
                            var f;
                            if (d > 0) {
                                if (0 > p || p > d)
                                    return [];
                                if (f = c * h - l * u,
                                0 > f || f > d)
                                    return []
                            } else {
                                if (p > 0 || d > p)
                                    return [];
                                if (f = c * h - l * u,
                                f > 0 || d > f)
                                    return []
                            }
                            if (0 === f)
                                return !a || 0 !== p && p !== d ? [e] : [];
                            if (f === d)
                                return !a || 0 !== p && p !== d ? [t] : [];
                            if (0 === p)
                                return [i];
                            if (p === d)
                                return [r];
                            var m = f / d;
                            return [{
                                x: e.x + m * o,
                                y: e.y + m * s
                            }]
                        }
                        if (0 !== p || c * h !== l * u)
                            return [];
                        var v = 0 === o && 0 === s
                          , g = 0 === l && 0 === c;
                        if (v && g)
                            return e.x !== i.x || e.y !== i.y ? [] : [e];
                        if (v)
                            return n(i, r, e) ? [e] : [];
                        if (g)
                            return n(e, t, i) ? [i] : [];
                        var y, _, x, b, w, T, M, E;
                        return 0 !== o ? (e.x < t.x ? (y = e,
                        x = e.x,
                        _ = t,
                        b = t.x) : (y = t,
                        x = t.x,
                        _ = e,
                        b = e.x),
                        i.x < r.x ? (w = i,
                        M = i.x,
                        T = r,
                        E = r.x) : (w = r,
                        M = r.x,
                        T = i,
                        E = i.x)) : (e.y < t.y ? (y = e,
                        x = e.y,
                        _ = t,
                        b = t.y) : (y = t,
                        x = t.y,
                        _ = e,
                        b = e.y),
                        i.y < r.y ? (w = i,
                        M = i.y,
                        T = r,
                        E = r.y) : (w = r,
                        M = r.y,
                        T = i,
                        E = i.y)),
                        M >= x ? M > b ? [] : b === M ? a ? [] : [w] : E >= b ? [w, _] : [w, T] : x > E ? [] : x === E ? a ? [] : [y] : E >= b ? [y, _] : [y, T]
                    }
                    function a(e, t, i, n) {
                        var r = t.x - e.x
                          , a = t.y - e.y
                          , o = i.x - e.x
                          , s = i.y - e.y
                          , l = n.x - e.x
                          , c = n.y - e.y
                          , h = r * s - a * o
                          , u = r * c - a * l;
                        if (Math.abs(h) > Number.EPSILON) {
                            var d = l * s - c * o;
                            return h > 0 ? u >= 0 && d >= 0 : u >= 0 || d >= 0
                        }
                        return u > 0
                    }
                    function o(e, t) {
                        function i(e, t) {
                            var i = y.length - 1
                              , n = e - 1;
                            0 > n && (n = i);
                            var r = e + 1;
                            r > i && (r = 0);
                            var o = a(y[e], y[n], y[r], s[t]);
                            if (!o)
                                return !1;
                            var l = s.length - 1
                              , c = t - 1;
                            0 > c && (c = l);
                            var h = t + 1;
                            return h > l && (h = 0),
                            o = a(s[t], s[c], s[h], y[e]),
                            o ? !0 : !1
                        }
                        function n(e, t) {
                            var i, n, a;
                            for (i = 0; i < y.length; i++)
                                if (n = i + 1,
                                n %= y.length,
                                a = r(e, t, y[i], y[n], !0),
                                a.length > 0)
                                    return !0;
                            return !1
                        }
                        function o(e, i) {
                            var n, a, o, s, l;
                            for (n = 0; n < _.length; n++)
                                for (a = t[_[n]],
                                o = 0; o < a.length; o++)
                                    if (s = o + 1,
                                    s %= a.length,
                                    l = r(e, i, a[o], a[s], !0),
                                    l.length > 0)
                                        return !0;
                            return !1
                        }
                        for (var s, l, c, h, u, d, p, f, m, v, g, y = e.concat(), _ = [], x = [], b = 0, w = t.length; w > b; b++)
                            _.push(b);
                        for (var T = 0, M = 2 * _.length; _.length > 0; ) {
                            if (M--,
                            0 > M) {
                                console.log('THREE.ShapeUtils: Infinite Loop! Holes left:" + indepHoles.length + ", Probably Hole outside Shape!');
                                break
                            }
                            for (c = T; c < y.length; c++) {
                                h = y[c],
                                l = -1;
                                for (var b = 0; b < _.length; b++)
                                    if (d = _[b],
                                    p = h.x + ":" + h.y + ":" + d,
                                    void 0 === x[p]) {
                                        s = t[d];
                                        for (var E = 0; E < s.length; E++)
                                            if (u = s[E],
                                            i(c, E) && !n(h, u) && !o(h, u)) {
                                                l = E,
                                                _.splice(b, 1),
                                                f = y.slice(0, c + 1),
                                                m = y.slice(c),
                                                v = s.slice(l),
                                                g = s.slice(0, l + 1),
                                                y = f.concat(v).concat(g).concat(m),
                                                T = c;
                                                break
                                            }
                                        if (l >= 0)
                                            break;
                                        x[p] = !0
                                    }
                                if (l >= 0)
                                    break
                            }
                        }
                        return y
                    }
                    i(e),
                    t.forEach(i);
                    for (var s, l, c, h, u, d, p = {}, f = e.concat(), m = 0, v = t.length; v > m; m++)
                        Array.prototype.push.apply(f, t[m]);
                    for (s = 0,
                    l = f.length; l > s; s++)
                        u = f[s].x + ":" + f[s].y,
                        void 0 !== p[u] && console.warn("THREE.ShapeUtils: Duplicate point", u, s),
                        p[u] = s;
                    var g = o(e, t)
                      , y = Qh.triangulate(g, !1);
                    for (s = 0,
                    l = y.length; l > s; s++)
                        for (h = y[s],
                        c = 0; 3 > c; c++)
                            u = h[c].x + ":" + h[c].y,
                            d = p[u],
                            void 0 !== d && (h[c] = d);
                    return y.concat()
                },
                isClockWise: function(e) {
                    return Qh.area(e) < 0
                }
            };
            ln.prototype = Object.create(pt.prototype),
            ln.prototype.constructor = ln,
            cn.prototype = Object.create(St.prototype),
            cn.prototype.constructor = cn,
            cn.prototype.getArrays = function() {
                var e = this.getAttribute("position")
                  , t = e ? Array.prototype.slice.call(e.array) : []
                  , i = this.getAttribute("uv")
                  , n = i ? Array.prototype.slice.call(i.array) : []
                  , r = this.index
                  , a = r ? Array.prototype.slice.call(r.array) : [];
                return {
                    position: t,
                    uv: n,
                    index: a
                }
            }
            ,
            cn.prototype.addShapeList = function(e, t) {
                var i = e.length;
                t.arrays = this.getArrays();
                for (var n = 0; i > n; n++) {
                    var r = e[n];
                    this.addShape(r, t)
                }
                this.setIndex(t.arrays.index),
                this.addAttribute("position", new wt(t.arrays.position,3)),
                this.addAttribute("uv", new wt(t.arrays.uv,2))
            }
            ,
            cn.prototype.addShape = function(e, t) {
                function n(e, t, i) {
                    return t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                    t.clone().multiplyScalar(i).add(e)
                }
                function r(e, t, n) {
                    var r, a, o, s = e.x - t.x, l = e.y - t.y, c = n.x - e.x, h = n.y - e.y, u = s * s + l * l, d = s * h - l * c;
                    if (Math.abs(d) > Number.EPSILON) {
                        var p = Math.sqrt(u)
                          , f = Math.sqrt(c * c + h * h)
                          , m = t.x - l / p
                          , v = t.y + s / p
                          , g = n.x - h / f
                          , y = n.y + c / f
                          , _ = ((g - m) * h - (y - v) * c) / (s * h - l * c);
                        r = m + s * _ - e.x,
                        a = v + l * _ - e.y;
                        var x = r * r + a * a;
                        if (2 >= x)
                            return new i(r,a);
                        o = Math.sqrt(x / 2)
                    } else {
                        var b = !1;
                        s > Number.EPSILON ? c > Number.EPSILON && (b = !0) : s < -Number.EPSILON ? c < -Number.EPSILON && (b = !0) : Math.sign(l) === Math.sign(h) && (b = !0),
                        b ? (r = -l,
                        a = s,
                        o = Math.sqrt(u)) : (r = s,
                        a = l,
                        o = Math.sqrt(u / 2))
                    }
                    return new i(r / o,a / o)
                }
                function o() {
                    var e = x.length / 3;
                    if (P) {
                        var i = 0
                          , n = Q * i;
                        for ($ = 0; J > $; $++)
                            Z = H[$],
                            h(Z[2] + n, Z[1] + n, Z[0] + n);
                        for (i = L + 2 * A,
                        n = Q * i,
                        $ = 0; J > $; $++)
                            Z = H[$],
                            h(Z[0] + n, Z[1] + n, Z[2] + n)
                    } else {
                        for ($ = 0; J > $; $++)
                            Z = H[$],
                            h(Z[2], Z[1], Z[0]);
                        for ($ = 0; J > $; $++)
                            Z = H[$],
                            h(Z[0] + Q * L, Z[1] + Q * L, Z[2] + Q * L)
                    }
                    k.addGroup(e, x.length / 3 - e, void 0 !== t.material ? t.material : 0)
                }
                function s() {
                    var e = x.length / 3
                      , i = 0;
                    for (l(j, i),
                    i += j.length,
                    U = 0,
                    F = B.length; F > U; U++)
                        D = B[U],
                        l(D, i),
                        i += D.length;
                    k.addGroup(e, x.length / 3 - e, void 0 !== t.extrudeMaterial ? t.extrudeMaterial : 1)
                }
                function l(e, t) {
                    var i, n;
                    for ($ = e.length; --$ >= 0; ) {
                        i = $,
                        n = $ - 1,
                        0 > n && (n = e.length - 1);
                        var r = 0
                          , a = L + 2 * A;
                        for (r = 0; a > r; r++) {
                            var o = Q * r
                              , s = Q * (r + 1)
                              , l = t + i + o
                              , c = t + n + o
                              , h = t + n + s
                              , d = t + i + s;
                            u(l, c, h, d)
                        }
                    }
                }
                function c(e, t, i) {
                    T.push(e),
                    T.push(t),
                    T.push(i)
                }
                function h(e, t, i) {
                    d(e),
                    d(t),
                    d(i);
                    var n = x.length / 3
                      , r = I.generateTopUV(k, x, n - 3, n - 2, n - 1);
                    p(r[0]),
                    p(r[1]),
                    p(r[2])
                }
                function u(e, t, i, n) {
                    d(e),
                    d(t),
                    d(n),
                    d(t),
                    d(i),
                    d(n);
                    var r = x.length / 3
                      , a = I.generateSideWallUV(k, x, r - 6, r - 3, r - 2, r - 1);
                    p(a[0]),
                    p(a[1]),
                    p(a[3]),
                    p(a[1]),
                    p(a[2]),
                    p(a[3])
                }
                function d(e) {
                    b.push(x.length / 3),
                    x.push(T[3 * e + 0]),
                    x.push(T[3 * e + 1]),
                    x.push(T[3 * e + 2])
                }
                function p(e) {
                    w.push(e.x),
                    w.push(e.y)
                }
                var f, m, v, g, y, _ = t.arrays ? t.arrays : this.getArrays(), x = _.position, b = _.index, w = _.uv, T = [], M = void 0 !== t.amount ? t.amount : 100, E = void 0 !== t.bevelThickness ? t.bevelThickness : 6, S = void 0 !== t.bevelSize ? t.bevelSize : E - 2, A = void 0 !== t.bevelSegments ? t.bevelSegments : 3, P = void 0 !== t.bevelEnabled ? t.bevelEnabled : !0, C = void 0 !== t.curveSegments ? t.curveSegments : 12, L = void 0 !== t.steps ? t.steps : 1, R = t.extrudePath, O = !1, I = void 0 !== t.UVGenerator ? t.UVGenerator : ln.WorldUVGenerator;
                R && (f = R.getSpacedPoints(L),
                O = !0,
                P = !1,
                m = void 0 !== t.frames ? t.frames : R.computeFrenetFrames(L, !1),
                v = new a,
                g = new a,
                y = new a),
                P || (A = 0,
                E = 0,
                S = 0);
                var D, U, F, k = this, N = e.extractPoints(C), z = N.shape, B = N.holes, G = !Qh.isClockWise(z);
                if (G)
                    for (z = z.reverse(),
                    U = 0,
                    F = B.length; F > U; U++)
                        D = B[U],
                        Qh.isClockWise(D) && (B[U] = D.reverse());
                var H = Qh.triangulateShape(z, B)
                  , j = z;
                for (U = 0,
                F = B.length; F > U; U++)
                    D = B[U],
                    z = z.concat(D);
                for (var V, W, X, Y, q, Z, Q = z.length, J = H.length, K = [], $ = 0, et = j.length, tt = et - 1, it = $ + 1; et > $; $++,
                tt++,
                it++)
                    tt === et && (tt = 0),
                    it === et && (it = 0),
                    K[$] = r(j[$], j[tt], j[it]);
                var nt, rt = [], at = K.concat();
                for (U = 0,
                F = B.length; F > U; U++) {
                    for (D = B[U],
                    nt = [],
                    $ = 0,
                    et = D.length,
                    tt = et - 1,
                    it = $ + 1; et > $; $++,
                    tt++,
                    it++)
                        tt === et && (tt = 0),
                        it === et && (it = 0),
                        nt[$] = r(D[$], D[tt], D[it]);
                    rt.push(nt),
                    at = at.concat(nt)
                }
                for (V = 0; A > V; V++) {
                    for (X = V / A,
                    Y = E * Math.cos(X * Math.PI / 2),
                    W = S * Math.sin(X * Math.PI / 2),
                    $ = 0,
                    et = j.length; et > $; $++)
                        q = n(j[$], K[$], W),
                        c(q.x, q.y, -Y);
                    for (U = 0,
                    F = B.length; F > U; U++)
                        for (D = B[U],
                        nt = rt[U],
                        $ = 0,
                        et = D.length; et > $; $++)
                            q = n(D[$], nt[$], W),
                            c(q.x, q.y, -Y)
                }
                for (W = S,
                $ = 0; Q > $; $++)
                    q = P ? n(z[$], at[$], W) : z[$],
                    O ? (g.copy(m.normals[0]).multiplyScalar(q.x),
                    v.copy(m.binormals[0]).multiplyScalar(q.y),
                    y.copy(f[0]).add(g).add(v),
                    c(y.x, y.y, y.z)) : c(q.x, q.y, 0);
                var ot;
                for (ot = 1; L >= ot; ot++)
                    for ($ = 0; Q > $; $++)
                        q = P ? n(z[$], at[$], W) : z[$],
                        O ? (g.copy(m.normals[ot]).multiplyScalar(q.x),
                        v.copy(m.binormals[ot]).multiplyScalar(q.y),
                        y.copy(f[ot]).add(g).add(v),
                        c(y.x, y.y, y.z)) : c(q.x, q.y, M / L * ot);
                for (V = A - 1; V >= 0; V--) {
                    for (X = V / A,
                    Y = E * Math.cos(X * Math.PI / 2),
                    W = S * Math.sin(X * Math.PI / 2),
                    $ = 0,
                    et = j.length; et > $; $++)
                        q = n(j[$], K[$], W),
                        c(q.x, q.y, M + Y);
                    for (U = 0,
                    F = B.length; F > U; U++)
                        for (D = B[U],
                        nt = rt[U],
                        $ = 0,
                        et = D.length; et > $; $++)
                            q = n(D[$], nt[$], W),
                            O ? c(q.x, q.y + f[L - 1].y, f[L - 1].x + Y) : c(q.x, q.y, M + Y)
                }
                o(),
                s(),
                t.arrays || (this.setIndex(b),
                this.addAttribute("position", new wt(x,3)),
                this.addAttribute("uv", new wt(t.arrays.uv,2)))
            }
            ,
            ln.WorldUVGenerator = {
                generateTopUV: function(e, t, n, r, a) {
                    var o = t[3 * n]
                      , s = t[3 * n + 1]
                      , l = t[3 * r]
                      , c = t[3 * r + 1]
                      , h = t[3 * a]
                      , u = t[3 * a + 1];
                    return [new i(o,s), new i(l,c), new i(h,u)]
                },
                generateSideWallUV: function(e, t, n, r, a, o) {
                    var s = t[3 * n]
                      , l = t[3 * n + 1]
                      , c = t[3 * n + 2]
                      , h = t[3 * r]
                      , u = t[3 * r + 1]
                      , d = t[3 * r + 2]
                      , p = t[3 * a]
                      , f = t[3 * a + 1]
                      , m = t[3 * a + 2]
                      , v = t[3 * o]
                      , g = t[3 * o + 1]
                      , y = t[3 * o + 2];
                    return Math.abs(l - u) < .01 ? [new i(s,1 - c), new i(h,1 - d), new i(p,1 - m), new i(v,1 - y)] : [new i(l,1 - c), new i(u,1 - d), new i(f,1 - m), new i(g,1 - y)]
                }
            },
            hn.prototype = Object.create(pt.prototype),
            hn.prototype.constructor = hn,
            un.prototype = Object.create(cn.prototype),
            un.prototype.constructor = un,
            dn.prototype = Object.create(pt.prototype),
            dn.prototype.constructor = dn,
            pn.prototype = Object.create(St.prototype),
            pn.prototype.constructor = pn,
            fn.prototype = Object.create(pt.prototype),
            fn.prototype.constructor = fn,
            mn.prototype = Object.create(St.prototype),
            mn.prototype.constructor = mn,
            vn.prototype = Object.create(pt.prototype),
            vn.prototype.constructor = vn,
            gn.prototype = Object.create(St.prototype),
            gn.prototype.constructor = gn,
            yn.prototype = Object.create(pt.prototype),
            yn.prototype.constructor = yn,
            _n.prototype = Object.create(St.prototype),
            _n.prototype.constructor = _n,
            xn.prototype = Object.create(St.prototype),
            xn.prototype.constructor = xn,
            bn.prototype = Object.create(pt.prototype),
            bn.prototype.constructor = bn,
            wn.prototype = Object.create(St.prototype),
            wn.prototype.constructor = wn,
            Tn.prototype = Object.create(bn.prototype),
            Tn.prototype.constructor = Tn,
            Mn.prototype = Object.create(wn.prototype),
            Mn.prototype.constructor = Mn,
            En.prototype = Object.create(pt.prototype),
            En.prototype.constructor = En,
            Sn.prototype = Object.create(St.prototype),
            Sn.prototype.constructor = Sn;
            var Jh = Object.freeze({
                WireframeGeometry: Hi,
                ParametricGeometry: ji,
                ParametricBufferGeometry: Vi,
                TetrahedronGeometry: Yi,
                TetrahedronBufferGeometry: qi,
                OctahedronGeometry: Zi,
                OctahedronBufferGeometry: Qi,
                IcosahedronGeometry: Ji,
                IcosahedronBufferGeometry: Ki,
                DodecahedronGeometry: $i,
                DodecahedronBufferGeometry: en,
                PolyhedronGeometry: Wi,
                PolyhedronBufferGeometry: Xi,
                TubeGeometry: tn,
                TubeBufferGeometry: nn,
                TorusKnotGeometry: rn,
                TorusKnotBufferGeometry: an,
                TorusGeometry: on,
                TorusBufferGeometry: sn,
                TextGeometry: hn,
                TextBufferGeometry: un,
                SphereGeometry: dn,
                SphereBufferGeometry: pn,
                RingGeometry: fn,
                RingBufferGeometry: mn,
                PlaneGeometry: Ct,
                PlaneBufferGeometry: Lt,
                LatheGeometry: vn,
                LatheBufferGeometry: gn,
                ShapeGeometry: yn,
                ShapeBufferGeometry: _n,
                ExtrudeGeometry: ln,
                ExtrudeBufferGeometry: cn,
                EdgesGeometry: xn,
                ConeGeometry: Tn,
                ConeBufferGeometry: Mn,
                CylinderGeometry: bn,
                CylinderBufferGeometry: wn,
                CircleGeometry: En,
                CircleBufferGeometry: Sn,
                BoxGeometry: At,
                BoxBufferGeometry: Pt
            });
            An.prototype = Object.create(K.prototype),
            An.prototype.constructor = An,
            An.prototype.isShadowMaterial = !0,
            Pn.prototype = Object.create(Ot.prototype),
            Pn.prototype.constructor = Pn,
            Pn.prototype.isRawShaderMaterial = !0,
            Cn.prototype = Object.create(K.prototype),
            Cn.prototype.constructor = Cn,
            Cn.prototype.isMeshStandardMaterial = !0,
            Cn.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.defines = {
                    STANDARD: ""
                },
                this.color.copy(e.color),
                this.roughness = e.roughness,
                this.metalness = e.metalness,
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.roughnessMap = e.roughnessMap,
                this.metalnessMap = e.metalnessMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.envMapIntensity = e.envMapIntensity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            }
            ,
            Ln.prototype = Object.create(Cn.prototype),
            Ln.prototype.constructor = Ln,
            Ln.prototype.isMeshPhysicalMaterial = !0,
            Ln.prototype.copy = function(e) {
                return Cn.prototype.copy.call(this, e),
                this.defines = {
                    PHYSICAL: ""
                },
                this.reflectivity = e.reflectivity,
                this.clearCoat = e.clearCoat,
                this.clearCoatRoughness = e.clearCoatRoughness,
                this
            }
            ,
            Rn.prototype = Object.create(K.prototype),
            Rn.prototype.constructor = Rn,
            Rn.prototype.isMeshPhongMaterial = !0,
            Rn.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.specular.copy(e.specular),
                this.shininess = e.shininess,
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            }
            ,
            On.prototype = Object.create(Rn.prototype),
            On.prototype.constructor = On,
            On.prototype.isMeshToonMaterial = !0,
            On.prototype.copy = function(e) {
                return Rn.prototype.copy.call(this, e),
                this.gradientMap = e.gradientMap,
                this
            }
            ,
            In.prototype = Object.create(K.prototype),
            In.prototype.constructor = In,
            In.prototype.isMeshNormalMaterial = !0,
            In.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.bumpMap = e.bumpMap,
                this.bumpScale = e.bumpScale,
                this.normalMap = e.normalMap,
                this.normalScale.copy(e.normalScale),
                this.displacementMap = e.displacementMap,
                this.displacementScale = e.displacementScale,
                this.displacementBias = e.displacementBias,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            }
            ,
            Dn.prototype = Object.create(K.prototype),
            Dn.prototype.constructor = Dn,
            Dn.prototype.isMeshLambertMaterial = !0,
            Dn.prototype.copy = function(e) {
                return K.prototype.copy.call(this, e),
                this.color.copy(e.color),
                this.map = e.map,
                this.lightMap = e.lightMap,
                this.lightMapIntensity = e.lightMapIntensity,
                this.aoMap = e.aoMap,
                this.aoMapIntensity = e.aoMapIntensity,
                this.emissive.copy(e.emissive),
                this.emissiveMap = e.emissiveMap,
                this.emissiveIntensity = e.emissiveIntensity,
                this.specularMap = e.specularMap,
                this.alphaMap = e.alphaMap,
                this.envMap = e.envMap,
                this.combine = e.combine,
                this.reflectivity = e.reflectivity,
                this.refractionRatio = e.refractionRatio,
                this.wireframe = e.wireframe,
                this.wireframeLinewidth = e.wireframeLinewidth,
                this.wireframeLinecap = e.wireframeLinecap,
                this.wireframeLinejoin = e.wireframeLinejoin,
                this.skinning = e.skinning,
                this.morphTargets = e.morphTargets,
                this.morphNormals = e.morphNormals,
                this
            }
            ,
            Un.prototype = Object.create(Oi.prototype),
            Un.prototype.constructor = Un,
            Un.prototype.isLineDashedMaterial = !0,
            Un.prototype.copy = function(e) {
                return Oi.prototype.copy.call(this, e),
                this.scale = e.scale,
                this.dashSize = e.dashSize,
                this.gapSize = e.gapSize,
                this
            }
            ;
            var Kh = Object.freeze({
                ShadowMaterial: An,
                SpriteMaterial: Si,
                RawShaderMaterial: Pn,
                ShaderMaterial: Ot,
                PointsMaterial: Fi,
                MeshPhysicalMaterial: Ln,
                MeshStandardMaterial: Cn,
                MeshPhongMaterial: Rn,
                MeshToonMaterial: On,
                MeshNormalMaterial: In,
                MeshLambertMaterial: Dn,
                MeshDepthMaterial: $,
                MeshDistanceMaterial: et,
                MeshBasicMaterial: Rt,
                LineDashedMaterial: Un,
                LineBasicMaterial: Oi,
                Material: K
            })
              , $h = {
                enabled: !1,
                files: {},
                add: function(e, t) {
                    this.enabled !== !1 && (this.files[e] = t)
                },
                get: function(e) {
                    return this.enabled !== !1 ? this.files[e] : void 0
                },
                remove: function(e) {
                    delete this.files[e]
                },
                clear: function() {
                    this.files = {}
                }
            }
              , eu = new Fn
              , tu = {};
            Object.assign(kn.prototype, {
                load: function(e, t, i, n) {
                    void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    e = this.manager.resolveURL(e);
                    var r = this
                      , a = $h.get(e);
                    if (void 0 !== a)
                        return r.manager.itemStart(e),
                        setTimeout(function() {
                            t && t(a),
                            r.manager.itemEnd(e)
                        }, 0),
                        a;
                    if (void 0 !== tu[e])
                        return void tu[e].push({
                            onLoad: t,
                            onProgress: i,
                            onError: n
                        });
                    var o = /^data:(.*?)(;base64)?,(.*)$/
                      , s = e.match(o);
                    if (s) {
                        var l = s[1]
                          , c = !!s[2]
                          , h = s[3];
                        h = window.decodeURIComponent(h),
                        c && (h = window.atob(h));
                        try {
                            var u, d = (this.responseType || "").toLowerCase();
                            switch (d) {
                            case "arraybuffer":
                            case "blob":
                                for (var p = new Uint8Array(h.length), f = 0; f < h.length; f++)
                                    p[f] = h.charCodeAt(f);
                                u = "blob" === d ? new Blob([p.buffer],{
                                    type: l
                                }) : p.buffer;
                                break;
                            case "document":
                                var m = new DOMParser;
                                u = m.parseFromString(h, l);
                                break;
                            case "json":
                                u = JSON.parse(h);
                                break;
                            default:
                                u = h
                            }
                            window.setTimeout(function() {
                                t && t(u),
                                r.manager.itemEnd(e)
                            }, 0)
                        } catch (v) {
                            window.setTimeout(function() {
                                n && n(v),
                                r.manager.itemEnd(e),
                                r.manager.itemError(e)
                            }, 0)
                        }
                    } else {
                        tu[e] = [],
                        tu[e].push({
                            onLoad: t,
                            onProgress: i,
                            onError: n
                        });
                        var g = new XMLHttpRequest;
                        g.open("GET", e, !0),
                        g.addEventListener("load", function(t) {
                            var i = t.target.response;
                            $h.add(e, i);
                            var n = tu[e];
                            if (delete tu[e],
                            200 === this.status) {
                                for (var a = 0, o = n.length; o > a; a++) {
                                    var s = n[a];
                                    s.onLoad && s.onLoad(i)
                                }
                                r.manager.itemEnd(e)
                            } else if (0 === this.status) {
                                console.warn("THREE.FileLoader: HTTP Status 0 received.");
                                for (var a = 0, o = n.length; o > a; a++) {
                                    var s = n[a];
                                    s.onLoad && s.onLoad(i)
                                }
                                r.manager.itemEnd(e)
                            } else {
                                for (var a = 0, o = n.length; o > a; a++) {
                                    var s = n[a];
                                    s.onError && s.onError(t)
                                }
                                r.manager.itemEnd(e),
                                r.manager.itemError(e)
                            }
                        }, !1),
                        g.addEventListener("progress", function(t) {
                            for (var i = tu[e], n = 0, r = i.length; r > n; n++) {
                                var a = i[n];
                                a.onProgress && a.onProgress(t)
                            }
                        }, !1),
                        g.addEventListener("error", function(t) {
                            var i = tu[e];
                            delete tu[e];
                            for (var n = 0, a = i.length; a > n; n++) {
                                var o = i[n];
                                o.onError && o.onError(t)
                            }
                            r.manager.itemEnd(e),
                            r.manager.itemError(e)
                        }, !1),
                        void 0 !== this.responseType && (g.responseType = this.responseType),
                        void 0 !== this.withCredentials && (g.withCredentials = this.withCredentials),
                        g.overrideMimeType && g.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain");
                        for (var y in this.requestHeader)
                            g.setRequestHeader(y, this.requestHeader[y]);
                        g.send(null)
                    }
                    return r.manager.itemStart(e),
                    g
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                },
                setResponseType: function(e) {
                    return this.responseType = e,
                    this
                },
                setWithCredentials: function(e) {
                    return this.withCredentials = e,
                    this
                },
                setMimeType: function(e) {
                    return this.mimeType = e,
                    this
                },
                setRequestHeader: function(e) {
                    return this.requestHeader = e,
                    this
                }
            }),
            Object.assign(Nn.prototype, {
                load: function(e, t, i, n) {
                    function r(r) {
                        l.load(e[r], function(e) {
                            var i = a._parser(e, !0);
                            o[r] = {
                                width: i.width,
                                height: i.height,
                                format: i.format,
                                mipmaps: i.mipmaps
                            },
                            c += 1,
                            6 === c && (1 === i.mipmapCount && (s.minFilter = Ls),
                            s.format = i.format,
                            s.needsUpdate = !0,
                            t && t(s))
                        }, i, n)
                    }
                    var a = this
                      , o = []
                      , s = new Bi;
                    s.image = o;
                    var l = new kn(this.manager);
                    if (l.setPath(this.path),
                    l.setResponseType("arraybuffer"),
                    Array.isArray(e))
                        for (var c = 0, h = 0, u = e.length; u > h; ++h)
                            r(h);
                    else
                        l.load(e, function(e) {
                            var i = a._parser(e, !0);
                            if (i.isCubemap)
                                for (var n = i.mipmaps.length / i.mipmapCount, r = 0; n > r; r++) {
                                    o[r] = {
                                        mipmaps: []
                                    };
                                    for (var l = 0; l < i.mipmapCount; l++)
                                        o[r].mipmaps.push(i.mipmaps[r * i.mipmapCount + l]),
                                        o[r].format = i.format,
                                        o[r].width = i.width,
                                        o[r].height = i.height
                                }
                            else
                                s.image.width = i.width,
                                s.image.height = i.height,
                                s.mipmaps = i.mipmaps;
                            1 === i.mipmapCount && (s.minFilter = Ls),
                            s.format = i.format,
                            s.needsUpdate = !0,
                            t && t(s)
                        }, i, n);
                    return s
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                }
            }),
            Object.assign(zn.prototype, {
                load: function(e, t, i, n) {
                    var r = this
                      , a = new u
                      , o = new kn(this.manager);
                    return o.setResponseType("arraybuffer"),
                    o.load(e, function(e) {
                        var i = r._parser(e);
                        i && (void 0 !== i.image ? a.image = i.image : void 0 !== i.data && (a.image.width = i.width,
                        a.image.height = i.height,
                        a.image.data = i.data),
                        a.wrapS = void 0 !== i.wrapS ? i.wrapS : Es,
                        a.wrapT = void 0 !== i.wrapT ? i.wrapT : Es,
                        a.magFilter = void 0 !== i.magFilter ? i.magFilter : Ls,
                        a.minFilter = void 0 !== i.minFilter ? i.minFilter : Os,
                        a.anisotropy = void 0 !== i.anisotropy ? i.anisotropy : 1,
                        void 0 !== i.format && (a.format = i.format),
                        void 0 !== i.type && (a.type = i.type),
                        void 0 !== i.mipmaps && (a.mipmaps = i.mipmaps),
                        1 === i.mipmapCount && (a.minFilter = Ls),
                        a.needsUpdate = !0,
                        t && t(a, i))
                    }, i, n),
                    a
                }
            }),
            Object.assign(Bn.prototype, {
                crossOrigin: "Anonymous",
                load: function(e, t, i, n) {
                    void 0 === e && (e = ""),
                    void 0 !== this.path && (e = this.path + e),
                    e = this.manager.resolveURL(e);
                    var r = this
                      , a = $h.get(e);
                    if (void 0 !== a)
                        return r.manager.itemStart(e),
                        setTimeout(function() {
                            t && t(a),
                            r.manager.itemEnd(e)
                        }, 0),
                        a;
                    var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                    return o.addEventListener("load", function() {
                        $h.add(e, this),
                        t && t(this),
                        r.manager.itemEnd(e)
                    }, !1),
                    o.addEventListener("error", function(t) {
                        n && n(t),
                        r.manager.itemEnd(e),
                        r.manager.itemError(e)
                    }, !1),
                    "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
                    r.manager.itemStart(e),
                    o.src = e,
                    o
                },
                setCrossOrigin: function(e) {
                    return this.crossOrigin = e,
                    this
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                }
            }),
            Object.assign(Gn.prototype, {
                crossOrigin: "Anonymous",
                load: function(e, t, i, n) {
                    function r(i) {
                        o.load(e[i], function(e) {
                            a.images[i] = e,
                            s++,
                            6 === s && (a.needsUpdate = !0,
                            t && t(a))
                        }, void 0, n)
                    }
                    var a = new d
                      , o = new Bn(this.manager);
                    o.setCrossOrigin(this.crossOrigin),
                    o.setPath(this.path);
                    for (var s = 0, l = 0; l < e.length; ++l)
                        r(l);
                    return a
                },
                setCrossOrigin: function(e) {
                    return this.crossOrigin = e,
                    this
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                }
            }),
            Object.assign(Hn.prototype, {
                crossOrigin: "Anonymous",
                load: function(e, t, i, n) {
                    var r = new Bn(this.manager);
                    r.setCrossOrigin(this.crossOrigin),
                    r.setPath(this.path);
                    var a = new s;
                    return a.image = r.load(e, function() {
                        var i = e.search(/\.(jpg|jpeg)$/) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                        a.format = i ? Xs : Ys,
                        a.needsUpdate = !0,
                        void 0 !== t && t(a)
                    }, i, n),
                    a
                },
                setCrossOrigin: function(e) {
                    return this.crossOrigin = e,
                    this
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                }
            }),
            jn.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: jn,
                isLight: !0,
                copy: function(e) {
                    return ct.prototype.copy.call(this, e),
                    this.color.copy(e.color),
                    this.intensity = e.intensity,
                    this
                },
                toJSON: function(e) {
                    var t = ct.prototype.toJSON.call(this, e);
                    return t.object.color = this.color.getHex(),
                    t.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (t.object.distance = this.distance),
                    void 0 !== this.angle && (t.object.angle = this.angle),
                    void 0 !== this.decay && (t.object.decay = this.decay),
                    void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
                    t
                }
            }),
            Vn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: Vn,
                isHemisphereLight: !0,
                copy: function(e) {
                    return jn.prototype.copy.call(this, e),
                    this.groundColor.copy(e.groundColor),
                    this
                }
            }),
            Object.assign(Wn.prototype, {
                copy: function(e) {
                    return this.camera = e.camera.clone(),
                    this.bias = e.bias,
                    this.radius = e.radius,
                    this.mapSize.copy(e.mapSize),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                toJSON: function() {
                    var e = {};
                    return 0 !== this.bias && (e.bias = this.bias),
                    1 !== this.radius && (e.radius = this.radius),
                    (512 !== this.mapSize.x || 512 !== this.mapSize.y) && (e.mapSize = this.mapSize.toArray()),
                    e.camera = this.camera.toJSON(!1).object,
                    delete e.camera.matrix,
                    e
                }
            }),
            Xn.prototype = Object.assign(Object.create(Wn.prototype), {
                constructor: Xn,
                isSpotLightShadow: !0,
                update: function(e) {
                    var t = this.camera
                      , i = 2 * Ll.RAD2DEG * e.angle
                      , n = this.mapSize.width / this.mapSize.height
                      , r = e.distance || t.far;
                    (i !== t.fov || n !== t.aspect || r !== t.far) && (t.fov = i,
                    t.aspect = n,
                    t.far = r,
                    t.updateProjectionMatrix())
                }
            }),
            Yn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: Yn,
                isSpotLight: !0,
                copy: function(e) {
                    return jn.prototype.copy.call(this, e),
                    this.distance = e.distance,
                    this.angle = e.angle,
                    this.penumbra = e.penumbra,
                    this.decay = e.decay,
                    this.target = e.target.clone(),
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            qn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: qn,
                isPointLight: !0,
                copy: function(e) {
                    return jn.prototype.copy.call(this, e),
                    this.distance = e.distance,
                    this.decay = e.decay,
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            Zn.prototype = Object.assign(Object.create(Wn.prototype), {
                constructor: Zn
            }),
            Qn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: Qn,
                isDirectionalLight: !0,
                copy: function(e) {
                    return jn.prototype.copy.call(this, e),
                    this.target = e.target.clone(),
                    this.shadow = e.shadow.clone(),
                    this
                }
            }),
            Jn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: Jn,
                isAmbientLight: !0
            }),
            Kn.prototype = Object.assign(Object.create(jn.prototype), {
                constructor: Kn,
                isRectAreaLight: !0,
                copy: function(e) {
                    return jn.prototype.copy.call(this, e),
                    this.width = e.width,
                    this.height = e.height,
                    this
                },
                toJSON: function(e) {
                    var t = jn.prototype.toJSON.call(this, e);
                    return t.object.width = this.width,
                    t.object.height = this.height,
                    t
                }
            });
            var iu = {
                arraySlice: function(e, t, i) {
                    return iu.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== i ? i : e.length)) : e.slice(t, i)
                },
                convertArray: function(e, t, i) {
                    return !e || !i && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
                },
                isTypedArray: function(e) {
                    return ArrayBuffer.isView(e) && !(e instanceof DataView)
                },
                getKeyframeOrder: function(e) {
                    function t(t, i) {
                        return e[t] - e[i]
                    }
                    for (var i = e.length, n = new Array(i), r = 0; r !== i; ++r)
                        n[r] = r;
                    return n.sort(t),
                    n
                },
                sortedArray: function(e, t, i) {
                    for (var n = e.length, r = new e.constructor(n), a = 0, o = 0; o !== n; ++a)
                        for (var s = i[a] * t, l = 0; l !== t; ++l)
                            r[o++] = e[s + l];
                    return r
                },
                flattenJSON: function(e, t, i, n) {
                    for (var r = 1, a = e[0]; void 0 !== a && void 0 === a[n]; )
                        a = e[r++];
                    if (void 0 !== a) {
                        var o = a[n];
                        if (void 0 !== o)
                            if (Array.isArray(o)) {
                                do
                                    o = a[n],
                                    void 0 !== o && (t.push(a.time),
                                    i.push.apply(i, o)),
                                    a = e[r++];
                                while (void 0 !== a)
                            } else if (void 0 !== o.toArray) {
                                do
                                    o = a[n],
                                    void 0 !== o && (t.push(a.time),
                                    o.toArray(i, i.length)),
                                    a = e[r++];
                                while (void 0 !== a)
                            } else
                                do
                                    o = a[n],
                                    void 0 !== o && (t.push(a.time),
                                    i.push(o)),
                                    a = e[r++];
                                while (void 0 !== a)
                    }
                }
            };
            Object.assign($n.prototype, {
                evaluate: function(e) {
                    var t = this.parameterPositions
                      , i = this._cachedIndex
                      , n = t[i]
                      , r = t[i - 1];
                    e: {
                        t: {
                            var a;
                            i: {
                                n: if (!(n > e)) {
                                    for (var o = i + 2; ; ) {
                                        if (void 0 === n) {
                                            if (r > e)
                                                break n;
                                            return i = t.length,
                                            this._cachedIndex = i,
                                            this.afterEnd_(i - 1, e, r)
                                        }
                                        if (i === o)
                                            break;
                                        if (r = n,
                                        n = t[++i],
                                        n > e)
                                            break t
                                    }
                                    a = t.length;
                                    break i
                                }
                                {
                                    if (e >= r)
                                        break e;
                                    var s = t[1];
                                    s > e && (i = 2,
                                    r = s);
                                    for (var o = i - 2; ; ) {
                                        if (void 0 === r)
                                            return this._cachedIndex = 0,
                                            this.beforeStart_(0, e, n);
                                        if (i === o)
                                            break;
                                        if (n = r,
                                        r = t[--i - 1],
                                        e >= r)
                                            break t
                                    }
                                    a = i,
                                    i = 0
                                }
                            }
                            for (; a > i; ) {
                                var l = i + a >>> 1;
                                e < t[l] ? a = l : i = l + 1
                            }
                            if (n = t[i],
                            r = t[i - 1],
                            void 0 === r)
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, e, n);
                            if (void 0 === n)
                                return i = t.length,
                                this._cachedIndex = i,
                                this.afterEnd_(i - 1, r, e)
                        }
                        this._cachedIndex = i,
                        this.intervalChanged_(i, r, n)
                    }
                    return this.interpolate_(i, r, e, n)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function() {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function(e) {
                    for (var t = this.resultBuffer, i = this.sampleValues, n = this.valueSize, r = e * n, a = 0; a !== n; ++a)
                        t[a] = i[r + a];
                    return t
                },
                interpolate_: function() {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function() {}
            }),
            Object.assign($n.prototype, {
                beforeStart_: $n.prototype.copySampleValue_,
                afterEnd_: $n.prototype.copySampleValue_
            }),
            er.prototype = Object.assign(Object.create($n.prototype), {
                constructor: er,
                DefaultSettings_: {
                    endingStart: fl,
                    endingEnd: fl
                },
                intervalChanged_: function(e, t, i) {
                    var n = this.parameterPositions
                      , r = e - 2
                      , a = e + 1
                      , o = n[r]
                      , s = n[a];
                    if (void 0 === o)
                        switch (this.getSettings_().endingStart) {
                        case ml:
                            r = e,
                            o = 2 * t - i;
                            break;
                        case vl:
                            r = n.length - 2,
                            o = t + n[r] - n[r + 1];
                            break;
                        default:
                            r = e,
                            o = i
                        }
                    if (void 0 === s)
                        switch (this.getSettings_().endingEnd) {
                        case ml:
                            a = e,
                            s = 2 * i - t;
                            break;
                        case vl:
                            a = 1,
                            s = i + n[1] - n[0];
                            break;
                        default:
                            a = e - 1,
                            s = t
                        }
                    var l = .5 * (i - t)
                      , c = this.valueSize;
                    this._weightPrev = l / (t - o),
                    this._weightNext = l / (s - i),
                    this._offsetPrev = r * c,
                    this._offsetNext = a * c
                },
                interpolate_: function(e, t, i, n) {
                    for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, c = this._offsetPrev, h = this._offsetNext, u = this._weightPrev, d = this._weightNext, p = (i - t) / (n - t), f = p * p, m = f * p, v = -u * m + 2 * u * f - u * p, g = (1 + u) * m + (-1.5 - 2 * u) * f + (-.5 + u) * p + 1, y = (-1 - d) * m + (1.5 + d) * f + .5 * p, _ = d * m - d * f, x = 0; x !== o; ++x)
                        r[x] = v * a[c + x] + g * a[l + x] + y * a[s + x] + _ * a[h + x];
                    return r
                }
            }),
            tr.prototype = Object.assign(Object.create($n.prototype), {
                constructor: tr,
                interpolate_: function(e, t, i, n) {
                    for (var r = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, c = (i - t) / (n - t), h = 1 - c, u = 0; u !== o; ++u)
                        r[u] = a[l + u] * h + a[s + u] * c;
                    return r
                }
            }),
            ir.prototype = Object.assign(Object.create($n.prototype), {
                constructor: ir,
                interpolate_: function(e) {
                    return this.copySampleValue_(e - 1)
                }
            });
            var nu;
            nu = {
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: dl,
                InterpolantFactoryMethodDiscrete: function(e) {
                    return new ir(this.times,this.values,this.getValueSize(),e)
                },
                InterpolantFactoryMethodLinear: function(e) {
                    return new tr(this.times,this.values,this.getValueSize(),e)
                },
                InterpolantFactoryMethodSmooth: function(e) {
                    return new er(this.times,this.values,this.getValueSize(),e)
                },
                setInterpolation: function(e) {
                    var t;
                    switch (e) {
                    case ul:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case dl:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                    case pl:
                        t = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 === t) {
                        var i = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (e === this.DefaultInterpolation)
                                throw new Error(i);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        return void console.warn("THREE.KeyframeTrackPrototype:", i)
                    }
                    this.createInterpolant = t
                },
                getInterpolation: function() {
                    switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return ul;
                    case this.InterpolantFactoryMethodLinear:
                        return dl;
                    case this.InterpolantFactoryMethodSmooth:
                        return pl
                    }
                },
                getValueSize: function() {
                    return this.values.length / this.times.length
                },
                shift: function(e) {
                    if (0 !== e)
                        for (var t = this.times, i = 0, n = t.length; i !== n; ++i)
                            t[i] += e;
                    return this
                },
                scale: function(e) {
                    if (1 !== e)
                        for (var t = this.times, i = 0, n = t.length; i !== n; ++i)
                            t[i] *= e;
                    return this
                },
                trim: function(e, t) {
                    for (var i = this.times, n = i.length, r = 0, a = n - 1; r !== n && i[r] < e; )
                        ++r;
                    for (; -1 !== a && i[a] > t; )
                        --a;
                    if (++a,
                    0 !== r || a !== n) {
                        r >= a && (a = Math.max(a, 1),
                        r = a - 1);
                        var o = this.getValueSize();
                        this.times = iu.arraySlice(i, r, a),
                        this.values = iu.arraySlice(this.values, r * o, a * o)
                    }
                    return this
                },
                validate: function() {
                    var e = !0
                      , t = this.getValueSize();
                    t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrackPrototype: Invalid value size in track.", this),
                    e = !1);
                    var i = this.times
                      , n = this.values
                      , r = i.length;
                    0 === r && (console.error("THREE.KeyframeTrackPrototype: Track is empty.", this),
                    e = !1);
                    for (var a = null, o = 0; o !== r; o++) {
                        var s = i[o];
                        if ("number" == typeof s && isNaN(s)) {
                            console.error("THREE.KeyframeTrackPrototype: Time is not a valid number.", this, o, s),
                            e = !1;
                            break
                        }
                        if (null !== a && a > s) {
                            console.error("THREE.KeyframeTrackPrototype: Out of order keys.", this, o, s, a),
                            e = !1;
                            break
                        }
                        a = s
                    }
                    if (void 0 !== n && iu.isTypedArray(n))
                        for (var o = 0, l = n.length; o !== l; ++o) {
                            var c = n[o];
                            if (isNaN(c)) {
                                console.error("THREE.KeyframeTrackPrototype: Value is not a valid number.", this, o, c),
                                e = !1;
                                break
                            }
                        }
                    return e
                },
                optimize: function() {
                    for (var e = this.times, t = this.values, i = this.getValueSize(), n = this.getInterpolation() === pl, r = 1, a = e.length - 1, o = 1; a > o; ++o) {
                        var s = !1
                          , l = e[o]
                          , c = e[o + 1];
                        if (l !== c && (1 !== o || l !== l[0]))
                            if (n)
                                s = !0;
                            else
                                for (var h = o * i, u = h - i, d = h + i, p = 0; p !== i; ++p) {
                                    var f = t[h + p];
                                    if (f !== t[u + p] || f !== t[d + p]) {
                                        s = !0;
                                        break
                                    }
                                }
                        if (s) {
                            if (o !== r) {
                                e[r] = e[o];
                                for (var m = o * i, v = r * i, p = 0; p !== i; ++p)
                                    t[v + p] = t[m + p]
                            }
                            ++r
                        }
                    }
                    if (a > 0) {
                        e[r] = e[a];
                        for (var m = a * i, v = r * i, p = 0; p !== i; ++p)
                            t[v + p] = t[m + p];
                        ++r
                    }
                    return r !== e.length && (this.times = iu.arraySlice(e, 0, r),
                    this.values = iu.arraySlice(t, 0, r * i)),
                    this
                }
            },
            rr.prototype = Object.assign(Object.create(nu), {
                constructor: rr,
                ValueTypeName: "vector"
            }),
            ar.prototype = Object.assign(Object.create($n.prototype), {
                constructor: ar,
                interpolate_: function(e, t, i, n) {
                    for (var a = this.resultBuffer, o = this.sampleValues, s = this.valueSize, l = e * s, c = (i - t) / (n - t), h = l + s; l !== h; l += 4)
                        r.slerpFlat(a, 0, o, l - s, o, l, c);
                    return a
                }
            }),
            or.prototype = Object.assign(Object.create(nu), {
                constructor: or,
                ValueTypeName: "quaternion",
                DefaultInterpolation: dl,
                InterpolantFactoryMethodLinear: function(e) {
                    return new ar(this.times,this.values,this.getValueSize(),e)
                },
                InterpolantFactoryMethodSmooth: void 0
            }),
            sr.prototype = Object.assign(Object.create(nu), {
                constructor: sr,
                ValueTypeName: "number"
            }),
            lr.prototype = Object.assign(Object.create(nu), {
                constructor: lr,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: ul,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            cr.prototype = Object.assign(Object.create(nu), {
                constructor: cr,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: ul,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            hr.prototype = Object.assign(Object.create(nu), {
                constructor: hr,
                ValueTypeName: "color"
            }),
            ur.prototype = nu,
            nu.constructor = ur,
            Object.assign(ur, {
                parse: function(e) {
                    if (void 0 === e.type)
                        throw new Error("track type undefined, can not parse");
                    var t = ur._getTrackTypeForValueTypeName(e.type);
                    if (void 0 === e.times) {
                        var i = []
                          , n = [];
                        iu.flattenJSON(e.keys, i, n, "value"),
                        e.times = i,
                        e.values = n
                    }
                    return void 0 !== t.parse ? t.parse(e) : new t(e.name,e.times,e.values,e.interpolation)
                },
                toJSON: function(e) {
                    var t, i = e.constructor;
                    if (void 0 !== i.toJSON)
                        t = i.toJSON(e);
                    else {
                        t = {
                            name: e.name,
                            times: iu.convertArray(e.times, Array),
                            values: iu.convertArray(e.values, Array)
                        };
                        var n = e.getInterpolation();
                        n !== e.DefaultInterpolation && (t.interpolation = n)
                    }
                    return t.type = e.ValueTypeName,
                    t
                },
                _getTrackTypeForValueTypeName: function(e) {
                    switch (e.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                        return sr;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                        return rr;
                    case "color":
                        return hr;
                    case "quaternion":
                        return or;
                    case "bool":
                    case "boolean":
                        return cr;
                    case "string":
                        return lr
                    }
                    throw new Error("Unsupported typeName: " + e)
                }
            }),
            Object.assign(dr, {
                parse: function(e) {
                    for (var t = [], i = e.tracks, n = 1 / (e.fps || 1), r = 0, a = i.length; r !== a; ++r)
                        t.push(ur.parse(i[r]).scale(n));
                    return new dr(e.name,e.duration,t)
                },
                toJSON: function(e) {
                    for (var t = [], i = e.tracks, n = {
                        name: e.name,
                        duration: e.duration,
                        tracks: t
                    }, r = 0, a = i.length; r !== a; ++r)
                        t.push(ur.toJSON(i[r]));
                    return n
                },
                CreateFromMorphTargetSequence: function(e, t, i, n) {
                    for (var r = t.length, a = [], o = 0; r > o; o++) {
                        var s = []
                          , l = [];
                        s.push((o + r - 1) % r, o, (o + 1) % r),
                        l.push(0, 1, 0);
                        var c = iu.getKeyframeOrder(s);
                        s = iu.sortedArray(s, 1, c),
                        l = iu.sortedArray(l, 1, c),
                        n || 0 !== s[0] || (s.push(r),
                        l.push(l[0])),
                        a.push(new sr(".morphTargetInfluences[" + t[o].name + "]",s,l).scale(1 / i))
                    }
                    return new dr(e,-1,a)
                },
                findByName: function(e, t) {
                    var i = e;
                    if (!Array.isArray(e)) {
                        var n = e;
                        i = n.geometry && n.geometry.animations || n.animations
                    }
                    for (var r = 0; r < i.length; r++)
                        if (i[r].name === t)
                            return i[r];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function(e, t, i) {
                    for (var n = {}, r = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length; o > a; a++) {
                        var s = e[a]
                          , l = s.name.match(r);
                        if (l && l.length > 1) {
                            var c = l[1]
                              , h = n[c];
                            h || (n[c] = h = []),
                            h.push(s)
                        }
                    }
                    var u = [];
                    for (var c in n)
                        u.push(dr.CreateFromMorphTargetSequence(c, n[c], t, i));
                    return u
                },
                parseAnimation: function(e, t) {
                    if (!e)
                        return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                        null;
                    for (var i = function(e, t, i, n, r) {
                        if (0 !== i.length) {
                            var a = []
                              , o = [];
                            iu.flattenJSON(i, a, o, n),
                            0 !== a.length && r.push(new e(t,a,o))
                        }
                    }, n = [], r = e.name || "default", a = e.length || -1, o = e.fps || 30, s = e.hierarchy || [], l = 0; l < s.length; l++) {
                        var c = s[l].keys;
                        if (c && 0 !== c.length)
                            if (c[0].morphTargets) {
                                for (var h = {}, u = 0; u < c.length; u++)
                                    if (c[u].morphTargets)
                                        for (var d = 0; d < c[u].morphTargets.length; d++)
                                            h[c[u].morphTargets[d]] = -1;
                                for (var p in h) {
                                    for (var f = [], m = [], d = 0; d !== c[u].morphTargets.length; ++d) {
                                        var v = c[u];
                                        f.push(v.time),
                                        m.push(v.morphTarget === p ? 1 : 0)
                                    }
                                    n.push(new sr(".morphTargetInfluence[" + p + "]",f,m))
                                }
                                a = h.length * (o || 1)
                            } else {
                                var g = ".bones[" + t[l].name + "]";
                                i(rr, g + ".position", c, "pos", n),
                                i(or, g + ".quaternion", c, "rot", n),
                                i(rr, g + ".scale", c, "scl", n)
                            }
                    }
                    if (0 === n.length)
                        return null;
                    var y = new dr(r,a,n);
                    return y
                }
            }),
            Object.assign(dr.prototype, {
                resetDuration: function() {
                    for (var e = this.tracks, t = 0, i = 0, n = e.length; i !== n; ++i) {
                        var r = this.tracks[i];
                        t = Math.max(t, r.times[r.times.length - 1])
                    }
                    this.duration = t
                },
                trim: function() {
                    for (var e = 0; e < this.tracks.length; e++)
                        this.tracks[e].trim(0, this.duration);
                    return this
                },
                optimize: function() {
                    for (var e = 0; e < this.tracks.length; e++)
                        this.tracks[e].optimize();
                    return this
                }
            }),
            Object.assign(pr.prototype, {
                load: function(e, t, i, n) {
                    var r = this
                      , a = new kn(r.manager);
                    a.load(e, function(e) {
                        t(r.parse(JSON.parse(e)))
                    }, i, n)
                },
                setTextures: function(e) {
                    this.textures = e
                },
                parse: function(e) {
                    function t(e) {
                        return void 0 === n[e] && console.warn("THREE.MaterialLoader: Undefined texture", e),
                        n[e]
                    }
                    var n = this.textures
                      , r = new Kh[e.type];
                    if (void 0 !== e.uuid && (r.uuid = e.uuid),
                    void 0 !== e.name && (r.name = e.name),
                    void 0 !== e.color && r.color.setHex(e.color),
                    void 0 !== e.roughness && (r.roughness = e.roughness),
                    void 0 !== e.metalness && (r.metalness = e.metalness),
                    void 0 !== e.emissive && r.emissive.setHex(e.emissive),
                    void 0 !== e.specular && r.specular.setHex(e.specular),
                    void 0 !== e.shininess && (r.shininess = e.shininess),
                    void 0 !== e.clearCoat && (r.clearCoat = e.clearCoat),
                    void 0 !== e.clearCoatRoughness && (r.clearCoatRoughness = e.clearCoatRoughness),
                    void 0 !== e.uniforms && (r.uniforms = e.uniforms),
                    void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader),
                    void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader),
                    void 0 !== e.vertexColors && (r.vertexColors = e.vertexColors),
                    void 0 !== e.fog && (r.fog = e.fog),
                    void 0 !== e.flatShading && (r.flatShading = e.flatShading),
                    void 0 !== e.blending && (r.blending = e.blending),
                    void 0 !== e.side && (r.side = e.side),
                    void 0 !== e.opacity && (r.opacity = e.opacity),
                    void 0 !== e.transparent && (r.transparent = e.transparent),
                    void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
                    void 0 !== e.depthTest && (r.depthTest = e.depthTest),
                    void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
                    void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
                    void 0 !== e.wireframe && (r.wireframe = e.wireframe),
                    void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth),
                    void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap),
                    void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin),
                    void 0 !== e.rotation && (r.rotation = e.rotation),
                    1 !== e.linewidth && (r.linewidth = e.linewidth),
                    void 0 !== e.dashSize && (r.dashSize = e.dashSize),
                    void 0 !== e.gapSize && (r.gapSize = e.gapSize),
                    void 0 !== e.scale && (r.scale = e.scale),
                    void 0 !== e.skinning && (r.skinning = e.skinning),
                    void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets),
                    void 0 !== e.dithering && (r.dithering = e.dithering),
                    void 0 !== e.visible && (r.visible = e.visible),
                    void 0 !== e.userData && (r.userData = e.userData),
                    void 0 !== e.shading && (r.flatShading = 1 === e.shading),
                    void 0 !== e.size && (r.size = e.size),
                    void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation),
                    void 0 !== e.map && (r.map = t(e.map)),
                    void 0 !== e.alphaMap && (r.alphaMap = t(e.alphaMap),
                    r.transparent = !0),
                    void 0 !== e.bumpMap && (r.bumpMap = t(e.bumpMap)),
                    void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
                    void 0 !== e.normalMap && (r.normalMap = t(e.normalMap)),
                    void 0 !== e.normalScale) {
                        var a = e.normalScale;
                        Array.isArray(a) === !1 && (a = [a, a]),
                        r.normalScale = (new i).fromArray(a)
                    }
                    return void 0 !== e.displacementMap && (r.displacementMap = t(e.displacementMap)),
                    void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale),
                    void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias),
                    void 0 !== e.roughnessMap && (r.roughnessMap = t(e.roughnessMap)),
                    void 0 !== e.metalnessMap && (r.metalnessMap = t(e.metalnessMap)),
                    void 0 !== e.emissiveMap && (r.emissiveMap = t(e.emissiveMap)),
                    void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity),
                    void 0 !== e.specularMap && (r.specularMap = t(e.specularMap)),
                    void 0 !== e.envMap && (r.envMap = t(e.envMap)),
                    void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity),
                    void 0 !== e.lightMap && (r.lightMap = t(e.lightMap)),
                    void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity),
                    void 0 !== e.aoMap && (r.aoMap = t(e.aoMap)),
                    void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity),
                    void 0 !== e.gradientMap && (r.gradientMap = t(e.gradientMap)),
                    r
                }
            }),
            Object.assign(fr.prototype, {
                load: function(e, t, i, n) {
                    var r = this
                      , a = new kn(r.manager);
                    a.load(e, function(e) {
                        t(r.parse(JSON.parse(e)))
                    }, i, n)
                },
                parse: function(e) {
                    var t = new St
                      , i = e.data.index;
                    if (void 0 !== i) {
                        var n = new ru[i.type](i.array);
                        t.setIndex(new ft(n,1))
                    }
                    var r = e.data.attributes;
                    for (var o in r) {
                        var s = r[o]
                          , n = new ru[s.type](s.array);
                        t.addAttribute(o, new ft(n,s.itemSize,s.normalized))
                    }
                    var l = e.data.groups || e.data.drawcalls || e.data.offsets;
                    if (void 0 !== l)
                        for (var c = 0, h = l.length; c !== h; ++c) {
                            var u = l[c];
                            t.addGroup(u.start, u.count, u.materialIndex)
                        }
                    var d = e.data.boundingSphere;
                    if (void 0 !== d) {
                        var p = new a;
                        void 0 !== d.center && p.fromArray(d.center),
                        t.boundingSphere = new it(p,d.radius)
                    }
                    return t
                }
            });
            var ru = {
                Int8Array: Int8Array,
                Uint8Array: Uint8Array,
                Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
                Int16Array: Int16Array,
                Uint16Array: Uint16Array,
                Int32Array: Int32Array,
                Uint32Array: Uint32Array,
                Float32Array: Float32Array,
                Float64Array: Float64Array
            };
            mr.Handlers = {
                handlers: [],
                add: function(e, t) {
                    this.handlers.push(e, t)
                },
                get: function(e) {
                    for (var t = this.handlers, i = 0, n = t.length; n > i; i += 2) {
                        var r = t[i]
                          , a = t[i + 1];
                        if (r.test(e))
                            return a
                    }
                    return null
                }
            },
            Object.assign(mr.prototype, {
                crossOrigin: void 0,
                extractUrlBase: function(e) {
                    var t = e.split("/");
                    return 1 === t.length ? "./" : (t.pop(),
                    t.join("/") + "/")
                },
                initMaterials: function(e, t, i) {
                    for (var n = [], r = 0; r < e.length; ++r)
                        n[r] = this.createMaterial(e[r], t, i);
                    return n
                },
                createMaterial: function() {
                    var e = {
                        NoBlending: Oo,
                        NormalBlending: Io,
                        AdditiveBlending: Do,
                        SubtractiveBlending: Uo,
                        MultiplyBlending: Fo,
                        CustomBlending: ko
                    }
                      , t = new Y
                      , i = new Hn
                      , n = new pr;
                    return function(r, a, o) {
                        function s(e, t, n, r, s) {
                            var c, h = a + e, u = mr.Handlers.get(h);
                            null !== u ? c = u.load(h) : (i.setCrossOrigin(o),
                            c = i.load(h)),
                            void 0 !== t && (c.repeat.fromArray(t),
                            1 !== t[0] && (c.wrapS = Ms),
                            1 !== t[1] && (c.wrapT = Ms)),
                            void 0 !== n && c.offset.fromArray(n),
                            void 0 !== r && ("repeat" === r[0] && (c.wrapS = Ms),
                            "mirror" === r[0] && (c.wrapS = Ss),
                            "repeat" === r[1] && (c.wrapT = Ms),
                            "mirror" === r[1] && (c.wrapT = Ss)),
                            void 0 !== s && (c.anisotropy = s);
                            var d = Ll.generateUUID();
                            return l[d] = c,
                            d
                        }
                        var l = {}
                          , c = {
                            uuid: Ll.generateUUID(),
                            type: "MeshLambertMaterial"
                        };
                        for (var h in r) {
                            var u = r[h];
                            switch (h) {
                            case "DbgColor":
                            case "DbgIndex":
                            case "opticalDensity":
                            case "illumination":
                                break;
                            case "DbgName":
                                c.name = u;
                                break;
                            case "blending":
                                c.blending = e[u];
                                break;
                            case "colorAmbient":
                            case "mapAmbient":
                                console.warn("THREE.Loader.createMaterial:", h, "is no longer supported.");
                                break;
                            case "colorDiffuse":
                                c.color = t.fromArray(u).getHex();
                                break;
                            case "colorSpecular":
                                c.specular = t.fromArray(u).getHex();
                                break;
                            case "colorEmissive":
                                c.emissive = t.fromArray(u).getHex();
                                break;
                            case "specularCoef":
                                c.shininess = u;
                                break;
                            case "shading":
                                "basic" === u.toLowerCase() && (c.type = "MeshBasicMaterial"),
                                "phong" === u.toLowerCase() && (c.type = "MeshPhongMaterial"),
                                "standard" === u.toLowerCase() && (c.type = "MeshStandardMaterial");
                                break;
                            case "mapDiffuse":
                                c.map = s(u, r.mapDiffuseRepeat, r.mapDiffuseOffset, r.mapDiffuseWrap, r.mapDiffuseAnisotropy);
                                break;
                            case "mapDiffuseRepeat":
                            case "mapDiffuseOffset":
                            case "mapDiffuseWrap":
                            case "mapDiffuseAnisotropy":
                                break;
                            case "mapEmissive":
                                c.emissiveMap = s(u, r.mapEmissiveRepeat, r.mapEmissiveOffset, r.mapEmissiveWrap, r.mapEmissiveAnisotropy);
                                break;
                            case "mapEmissiveRepeat":
                            case "mapEmissiveOffset":
                            case "mapEmissiveWrap":
                            case "mapEmissiveAnisotropy":
                                break;
                            case "mapLight":
                                c.lightMap = s(u, r.mapLightRepeat, r.mapLightOffset, r.mapLightWrap, r.mapLightAnisotropy);
                                break;
                            case "mapLightRepeat":
                            case "mapLightOffset":
                            case "mapLightWrap":
                            case "mapLightAnisotropy":
                                break;
                            case "mapAO":
                                c.aoMap = s(u, r.mapAORepeat, r.mapAOOffset, r.mapAOWrap, r.mapAOAnisotropy);
                                break;
                            case "mapAORepeat":
                            case "mapAOOffset":
                            case "mapAOWrap":
                            case "mapAOAnisotropy":
                                break;
                            case "mapBump":
                                c.bumpMap = s(u, r.mapBumpRepeat, r.mapBumpOffset, r.mapBumpWrap, r.mapBumpAnisotropy);
                                break;
                            case "mapBumpScale":
                                c.bumpScale = u;
                                break;
                            case "mapBumpRepeat":
                            case "mapBumpOffset":
                            case "mapBumpWrap":
                            case "mapBumpAnisotropy":
                                break;
                            case "mapNormal":
                                c.normalMap = s(u, r.mapNormalRepeat, r.mapNormalOffset, r.mapNormalWrap, r.mapNormalAnisotropy);
                                break;
                            case "mapNormalFactor":
                                c.normalScale = [u, u];
                                break;
                            case "mapNormalRepeat":
                            case "mapNormalOffset":
                            case "mapNormalWrap":
                            case "mapNormalAnisotropy":
                                break;
                            case "mapSpecular":
                                c.specularMap = s(u, r.mapSpecularRepeat, r.mapSpecularOffset, r.mapSpecularWrap, r.mapSpecularAnisotropy);
                                break;
                            case "mapSpecularRepeat":
                            case "mapSpecularOffset":
                            case "mapSpecularWrap":
                            case "mapSpecularAnisotropy":
                                break;
                            case "mapMetalness":
                                c.metalnessMap = s(u, r.mapMetalnessRepeat, r.mapMetalnessOffset, r.mapMetalnessWrap, r.mapMetalnessAnisotropy);
                                break;
                            case "mapMetalnessRepeat":
                            case "mapMetalnessOffset":
                            case "mapMetalnessWrap":
                            case "mapMetalnessAnisotropy":
                                break;
                            case "mapRoughness":
                                c.roughnessMap = s(u, r.mapRoughnessRepeat, r.mapRoughnessOffset, r.mapRoughnessWrap, r.mapRoughnessAnisotropy);
                                break;
                            case "mapRoughnessRepeat":
                            case "mapRoughnessOffset":
                            case "mapRoughnessWrap":
                            case "mapRoughnessAnisotropy":
                                break;
                            case "mapAlpha":
                                c.alphaMap = s(u, r.mapAlphaRepeat, r.mapAlphaOffset, r.mapAlphaWrap, r.mapAlphaAnisotropy);
                                break;
                            case "mapAlphaRepeat":
                            case "mapAlphaOffset":
                            case "mapAlphaWrap":
                            case "mapAlphaAnisotropy":
                                break;
                            case "flipSided":
                                c.side = Eo;
                                break;
                            case "doubleSided":
                                c.side = So;
                                break;
                            case "transparency":
                                console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),
                                c.opacity = u;
                                break;
                            case "depthTest":
                            case "depthWrite":
                            case "colorWrite":
                            case "opacity":
                            case "reflectivity":
                            case "transparent":
                            case "visible":
                            case "wireframe":
                                c[h] = u;
                                break;
                            case "vertexColors":
                                u === !0 && (c.vertexColors = Ro),
                                "face" === u && (c.vertexColors = Lo);
                                break;
                            default:
                                console.error("THREE.Loader.createMaterial: Unsupported", h, u)
                            }
                        }
                        return "MeshBasicMaterial" === c.type && delete c.emissive,
                        "MeshPhongMaterial" !== c.type && delete c.specular,
                        c.opacity < 1 && (c.transparent = !0),
                        n.setTextures(l),
                        n.parse(c)
                    }
                }()
            }),
            Object.assign(vr.prototype, {
                load: function(e, t, i, n) {
                    var r = this
                      , a = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : mr.prototype.extractUrlBase(e)
                      , o = new kn(this.manager);
                    o.setWithCredentials(this.withCredentials),
                    o.load(e, function(i) {
                        var n = JSON.parse(i)
                          , o = n.metadata;
                        if (void 0 !== o) {
                            var s = o.type;
                            if (void 0 !== s) {
                                if ("object" === s.toLowerCase())
                                    return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.ObjectLoader instead.");
                                if ("scene" === s.toLowerCase())
                                    return void console.error("THREE.JSONLoader: " + e + " should be loaded with THREE.SceneLoader instead.")
                            }
                        }
                        var l = r.parse(n, a);
                        t(l.geometry, l.materials)
                    }, i, n)
                },
                setTexturePath: function(e) {
                    this.texturePath = e
                },
                parse: function() {
                    function e(e, t) {
                        function n(e, t) {
                            return e & 1 << t
                        }
                        var r, o, s, l, c, h, u, d, p, f, m, v, g, y, _, x, b, w, T, M, E, S, A, P, C, L, R, O = e.faces, I = e.vertices, D = e.normals, U = e.colors, F = e.scale, k = 0;
                        if (void 0 !== e.uvs) {
                            for (r = 0; r < e.uvs.length; r++)
                                e.uvs[r].length && k++;
                            for (r = 0; k > r; r++)
                                t.faceVertexUvs[r] = []
                        }
                        for (l = 0,
                        c = I.length; c > l; )
                            w = new a,
                            w.x = I[l++] * F,
                            w.y = I[l++] * F,
                            w.z = I[l++] * F,
                            t.vertices.push(w);
                        for (l = 0,
                        c = O.length; c > l; )
                            if (f = O[l++],
                            m = n(f, 0),
                            v = n(f, 1),
                            g = n(f, 3),
                            y = n(f, 4),
                            _ = n(f, 5),
                            x = n(f, 6),
                            b = n(f, 7),
                            m) {
                                if (M = new dt,
                                M.a = O[l],
                                M.b = O[l + 1],
                                M.c = O[l + 3],
                                E = new dt,
                                E.a = O[l + 1],
                                E.b = O[l + 2],
                                E.c = O[l + 3],
                                l += 4,
                                v && (p = O[l++],
                                M.materialIndex = p,
                                E.materialIndex = p),
                                s = t.faces.length,
                                g)
                                    for (r = 0; k > r; r++)
                                        for (P = e.uvs[r],
                                        t.faceVertexUvs[r][s] = [],
                                        t.faceVertexUvs[r][s + 1] = [],
                                        o = 0; 4 > o; o++)
                                            d = O[l++],
                                            L = P[2 * d],
                                            R = P[2 * d + 1],
                                            C = new i(L,R),
                                            2 !== o && t.faceVertexUvs[r][s].push(C),
                                            0 !== o && t.faceVertexUvs[r][s + 1].push(C);
                                if (y && (u = 3 * O[l++],
                                M.normal.set(D[u++], D[u++], D[u]),
                                E.normal.copy(M.normal)),
                                _)
                                    for (r = 0; 4 > r; r++)
                                        u = 3 * O[l++],
                                        A = new a(D[u++],D[u++],D[u]),
                                        2 !== r && M.vertexNormals.push(A),
                                        0 !== r && E.vertexNormals.push(A);
                                if (x && (h = O[l++],
                                S = U[h],
                                M.color.setHex(S),
                                E.color.setHex(S)),
                                b)
                                    for (r = 0; 4 > r; r++)
                                        h = O[l++],
                                        S = U[h],
                                        2 !== r && M.vertexColors.push(new Y(S)),
                                        0 !== r && E.vertexColors.push(new Y(S));
                                t.faces.push(M),
                                t.faces.push(E)
                            } else {
                                if (T = new dt,
                                T.a = O[l++],
                                T.b = O[l++],
                                T.c = O[l++],
                                v && (p = O[l++],
                                T.materialIndex = p),
                                s = t.faces.length,
                                g)
                                    for (r = 0; k > r; r++)
                                        for (P = e.uvs[r],
                                        t.faceVertexUvs[r][s] = [],
                                        o = 0; 3 > o; o++)
                                            d = O[l++],
                                            L = P[2 * d],
                                            R = P[2 * d + 1],
                                            C = new i(L,R),
                                            t.faceVertexUvs[r][s].push(C);
                                if (y && (u = 3 * O[l++],
                                T.normal.set(D[u++], D[u++], D[u])),
                                _)
                                    for (r = 0; 3 > r; r++)
                                        u = 3 * O[l++],
                                        A = new a(D[u++],D[u++],D[u]),
                                        T.vertexNormals.push(A);
                                if (x && (h = O[l++],
                                T.color.setHex(U[h])),
                                b)
                                    for (r = 0; 3 > r; r++)
                                        h = O[l++],
                                        T.vertexColors.push(new Y(U[h]));
                                t.faces.push(T)
                            }
                    }
                    function t(e, t) {
                        var i = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
                        if (e.skinWeights)
                            for (var n = 0, r = e.skinWeights.length; r > n; n += i) {
                                var a = e.skinWeights[n]
                                  , o = i > 1 ? e.skinWeights[n + 1] : 0
                                  , s = i > 2 ? e.skinWeights[n + 2] : 0
                                  , c = i > 3 ? e.skinWeights[n + 3] : 0;
                                t.skinWeights.push(new l(a,o,s,c))
                            }
                        if (e.skinIndices)
                            for (var n = 0, r = e.skinIndices.length; r > n; n += i) {
                                var h = e.skinIndices[n]
                                  , u = i > 1 ? e.skinIndices[n + 1] : 0
                                  , d = i > 2 ? e.skinIndices[n + 2] : 0
                                  , p = i > 3 ? e.skinIndices[n + 3] : 0;
                                t.skinIndices.push(new l(h,u,d,p))
                            }
                        t.bones = e.bones,
                        t.bones && t.bones.length > 0 && (t.skinWeights.length !== t.skinIndices.length || t.skinIndices.length !== t.vertices.length) && console.warn("When skinning, number of vertices (" + t.vertices.length + "), skinIndices (" + t.skinIndices.length + "), and skinWeights (" + t.skinWeights.length + ") should match.")
                    }
                    function n(e, t) {
                        var i = e.scale;
                        if (void 0 !== e.morphTargets)
                            for (var n = 0, r = e.morphTargets.length; r > n; n++) {
                                t.morphTargets[n] = {},
                                t.morphTargets[n].name = e.morphTargets[n].name,
                                t.morphTargets[n].vertices = [];
                                for (var o = t.morphTargets[n].vertices, s = e.morphTargets[n].vertices, l = 0, c = s.length; c > l; l += 3) {
                                    var h = new a;
                                    h.x = s[l] * i,
                                    h.y = s[l + 1] * i,
                                    h.z = s[l + 2] * i,
                                    o.push(h)
                                }
                            }
                        if (void 0 !== e.morphColors && e.morphColors.length > 0) {
                            console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');
                            for (var u = t.faces, d = e.morphColors[0].colors, n = 0, r = u.length; r > n; n++)
                                u[n].color.fromArray(d, 3 * n)
                        }
                    }
                    function r(e, t) {
                        var i = []
                          , n = [];
                        void 0 !== e.animation && n.push(e.animation),
                        void 0 !== e.animations && (e.animations.length ? n = n.concat(e.animations) : n.push(e.animations));
                        for (var r = 0; r < n.length; r++) {
                            var a = dr.parseAnimation(n[r], t.bones);
                            a && i.push(a)
                        }
                        if (t.morphTargets) {
                            var o = dr.CreateClipsFromMorphTargetSequences(t.morphTargets, 10);
                            i = i.concat(o)
                        }
                        i.length > 0 && (t.animations = i)
                    }
                    return function(i, a) {
                        void 0 !== i.data && (i = i.data),
                        i.scale = void 0 !== i.scale ? 1 / i.scale : 1;
                        var o = new pt;
                        if (e(i, o),
                        t(i, o),
                        n(i, o),
                        r(i, o),
                        o.computeFaceNormals(),
                        o.computeBoundingSphere(),
                        void 0 === i.materials || 0 === i.materials.length)
                            return {
                                geometry: o
                            };
                        var s = mr.prototype.initMaterials(i.materials, a, this.crossOrigin);
                        return {
                            geometry: o,
                            materials: s
                        }
                    }
                }()
            }),
            Object.assign(gr.prototype, {
                load: function(e, t, i, n) {
                    "" === this.texturePath && (this.texturePath = e.substring(0, e.lastIndexOf("/") + 1));
                    var r = this
                      , a = new kn(r.manager);
                    a.load(e, function(i) {
                        var a = null;
                        try {
                            a = JSON.parse(i)
                        } catch (o) {
                            return void 0 !== n && n(o),
                            void console.error("THREE:ObjectLoader: Can't parse " + e + ".", o.message)
                        }
                        var s = a.metadata;
                        return void 0 === s || void 0 === s.type || "geometry" === s.type.toLowerCase() ? void console.error("THREE.ObjectLoader: Can't load " + e + ". Use THREE.JSONLoader instead.") : void r.parse(a, t)
                    }, i, n)
                },
                setTexturePath: function(e) {
                    this.texturePath = e
                },
                setCrossOrigin: function(e) {
                    this.crossOrigin = e
                },
                parse: function(e, t) {
                    var i = this.parseGeometries(e.geometries)
                      , n = this.parseImages(e.images, function() {
                        void 0 !== t && t(o)
                    })
                      , r = this.parseTextures(e.textures, n)
                      , a = this.parseMaterials(e.materials, r)
                      , o = this.parseObject(e.object, i, a);
                    return e.animations && (o.animations = this.parseAnimations(e.animations)),
                    (void 0 === e.images || 0 === e.images.length) && void 0 !== t && t(o),
                    o
                },
                parseGeometries: function(e) {
                    var t = {};
                    if (void 0 !== e)
                        for (var i = new vr, n = new fr, r = 0, a = e.length; a > r; r++) {
                            var o, s = e[r];
                            switch (s.type) {
                            case "PlaneGeometry":
                            case "PlaneBufferGeometry":
                                o = new Jh[s.type](s.width,s.height,s.widthSegments,s.heightSegments);
                                break;
                            case "BoxGeometry":
                            case "BoxBufferGeometry":
                            case "CubeGeometry":
                                o = new Jh[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);
                                break;
                            case "CircleGeometry":
                            case "CircleBufferGeometry":
                                o = new Jh[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);
                                break;
                            case "CylinderGeometry":
                            case "CylinderBufferGeometry":
                                o = new Jh[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                                break;
                            case "ConeGeometry":
                            case "ConeBufferGeometry":
                                o = new Jh[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);
                                break;
                            case "SphereGeometry":
                            case "SphereBufferGeometry":
                                o = new Jh[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);
                                break;
                            case "DodecahedronGeometry":
                            case "DodecahedronBufferGeometry":
                            case "IcosahedronGeometry":
                            case "IcosahedronBufferGeometry":
                            case "OctahedronGeometry":
                            case "OctahedronBufferGeometry":
                            case "TetrahedronGeometry":
                            case "TetrahedronBufferGeometry":
                                o = new Jh[s.type](s.radius,s.detail);
                                break;
                            case "RingGeometry":
                            case "RingBufferGeometry":
                                o = new Jh[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);
                                break;
                            case "TorusGeometry":
                            case "TorusBufferGeometry":
                                o = new Jh[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);
                                break;
                            case "TorusKnotGeometry":
                            case "TorusKnotBufferGeometry":
                                o = new Jh[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);
                                break;
                            case "LatheGeometry":
                            case "LatheBufferGeometry":
                                o = new Jh[s.type](s.points,s.segments,s.phiStart,s.phiLength);
                                break;
                            case "PolyhedronGeometry":
                            case "PolyhedronBufferGeometry":
                                o = new Jh[s.type](s.vertices,s.indices,s.radius,s.details);
                                break;
                            case "BufferGeometry":
                                o = n.parse(s);
                                break;
                            case "Geometry":
                                o = i.parse(s, this.texturePath).geometry;
                                break;
                            default:
                                console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                                continue
                            }
                            o.uuid = s.uuid,
                            void 0 !== s.name && (o.name = s.name),
                            t[s.uuid] = o
                        }
                    return t
                },
                parseMaterials: function(e, t) {
                    var i = {};
                    if (void 0 !== e) {
                        var n = new pr;
                        n.setTextures(t);
                        for (var r = 0, a = e.length; a > r; r++) {
                            var o = e[r];
                            if ("MultiMaterial" === o.type) {
                                for (var s = [], l = 0; l < o.materials.length; l++)
                                    s.push(n.parse(o.materials[l]));
                                i[o.uuid] = s
                            } else
                                i[o.uuid] = n.parse(o)
                        }
                    }
                    return i
                },
                parseAnimations: function(e) {
                    for (var t = [], i = 0; i < e.length; i++) {
                        var n = dr.parse(e[i]);
                        t.push(n)
                    }
                    return t
                },
                parseImages: function(e, t) {
                    function i(e) {
                        return n.manager.itemStart(e),
                        o.load(e, function() {
                            n.manager.itemEnd(e)
                        }, void 0, function() {
                            n.manager.itemEnd(e),
                            n.manager.itemError(e)
                        })
                    }
                    var n = this
                      , r = {};
                    if (void 0 !== e && e.length > 0) {
                        var a = new Fn(t)
                          , o = new Bn(a);
                        o.setCrossOrigin(this.crossOrigin);
                        for (var s = 0, l = e.length; l > s; s++) {
                            var c = e[s]
                              , h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.texturePath + c.url;
                            r[c.uuid] = i(h)
                        }
                    }
                    return r
                },
                parseTextures: function(e, t) {
                    function i(e, t) {
                        return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e),
                        t[e])
                    }
                    var n = {};
                    if (void 0 !== e)
                        for (var r = 0, a = e.length; a > r; r++) {
                            var o = e[r];
                            void 0 === o.image && console.warn('THREE.ObjectLoader: No "image" specified for', o.uuid),
                            void 0 === t[o.image] && console.warn("THREE.ObjectLoader: Undefined image", o.image);
                            var l = new s(t[o.image]);
                            l.needsUpdate = !0,
                            l.uuid = o.uuid,
                            void 0 !== o.name && (l.name = o.name),
                            void 0 !== o.mapping && (l.mapping = i(o.mapping, au)),
                            void 0 !== o.offset && l.offset.fromArray(o.offset),
                            void 0 !== o.repeat && l.repeat.fromArray(o.repeat),
                            void 0 !== o.center && l.center.fromArray(o.center),
                            void 0 !== o.rotation && (l.rotation = o.rotation),
                            void 0 !== o.wrap && (l.wrapS = i(o.wrap[0], ou),
                            l.wrapT = i(o.wrap[1], ou)),
                            void 0 !== o.minFilter && (l.minFilter = i(o.minFilter, su)),
                            void 0 !== o.magFilter && (l.magFilter = i(o.magFilter, su)),
                            void 0 !== o.anisotropy && (l.anisotropy = o.anisotropy),
                            void 0 !== o.flipY && (l.flipY = o.flipY),
                            n[o.uuid] = l
                        }
                    return n
                },
                parseObject: function() {
                    var e = new n;
                    return function(t, i, n) {
                        function r(e) {
                            return void 0 === i[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e),
                            i[e]
                        }
                        function a(e) {
                            if (void 0 === e)
                                return void 0;
                            if (Array.isArray(e)) {
                                for (var t = [], i = 0, r = e.length; r > i; i++) {
                                    var a = e[i];
                                    void 0 === n[a] && console.warn("THREE.ObjectLoader: Undefined material", a),
                                    t.push(n[a])
                                }
                                return t
                            }
                            return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e),
                            n[e]
                        }
                        var o;
                        switch (t.type) {
                        case "Scene":
                            o = new Mi,
                            void 0 !== t.background && Number.isInteger(t.background) && (o.background = new Y(t.background)),
                            void 0 !== t.fog && ("Fog" === t.fog.type ? o.fog = new Ti(t.fog.color,t.fog.near,t.fog.far) : "FogExp2" === t.fog.type && (o.fog = new wi(t.fog.color,t.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            o = new mi(t.fov,t.aspect,t.near,t.far),
                            void 0 !== t.focus && (o.focus = t.focus),
                            void 0 !== t.zoom && (o.zoom = t.zoom),
                            void 0 !== t.filmGauge && (o.filmGauge = t.filmGauge),
                            void 0 !== t.filmOffset && (o.filmOffset = t.filmOffset),
                            void 0 !== t.view && (o.view = Object.assign({}, t.view));
                            break;
                        case "OrthographicCamera":
                            o = new ut(t.left,t.right,t.top,t.bottom,t.near,t.far);
                            break;
                        case "AmbientLight":
                            o = new Jn(t.color,t.intensity);
                            break;
                        case "DirectionalLight":
                            o = new Qn(t.color,t.intensity);
                            break;
                        case "PointLight":
                            o = new qn(t.color,t.intensity,t.distance,t.decay);
                            break;
                        case "RectAreaLight":
                            o = new Kn(t.color,t.intensity,t.width,t.height);
                            break;
                        case "SpotLight":
                            o = new Yn(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);
                            break;
                        case "HemisphereLight":
                            o = new Vn(t.color,t.groundColor,t.intensity);
                            break;
                        case "SkinnedMesh":
                            console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
                        case "Mesh":
                            var s = r(t.geometry)
                              , l = a(t.material);
                            o = s.bones && s.bones.length > 0 ? new Ri(s,l) : new Ft(s,l);
                            break;
                        case "LOD":
                            o = new Pi;
                            break;
                        case "Line":
                            o = new Ii(r(t.geometry),a(t.material),t.mode);
                            break;
                        case "LineLoop":
                            o = new Ui(r(t.geometry),a(t.material));
                            break;
                        case "LineSegments":
                            o = new Di(r(t.geometry),a(t.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            o = new ki(r(t.geometry),a(t.material));
                            break;
                        case "Sprite":
                            o = new Ai(a(t.material));
                            break;
                        case "Group":
                            o = new Ni;
                            break;
                        default:
                            o = new ct
                        }
                        if (o.uuid = t.uuid,
                        void 0 !== t.name && (o.name = t.name),
                        void 0 !== t.matrix ? (e.fromArray(t.matrix),
                        e.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== t.position && o.position.fromArray(t.position),
                        void 0 !== t.rotation && o.rotation.fromArray(t.rotation),
                        void 0 !== t.quaternion && o.quaternion.fromArray(t.quaternion),
                        void 0 !== t.scale && o.scale.fromArray(t.scale)),
                        void 0 !== t.castShadow && (o.castShadow = t.castShadow),
                        void 0 !== t.receiveShadow && (o.receiveShadow = t.receiveShadow),
                        t.shadow && (void 0 !== t.shadow.bias && (o.shadow.bias = t.shadow.bias),
                        void 0 !== t.shadow.radius && (o.shadow.radius = t.shadow.radius),
                        void 0 !== t.shadow.mapSize && o.shadow.mapSize.fromArray(t.shadow.mapSize),
                        void 0 !== t.shadow.camera && (o.shadow.camera = this.parseObject(t.shadow.camera))),
                        void 0 !== t.visible && (o.visible = t.visible),
                        void 0 !== t.userData && (o.userData = t.userData),
                        void 0 !== t.children)
                            for (var c = t.children, h = 0; h < c.length; h++)
                                o.add(this.parseObject(c[h], i, n));
                        if ("LOD" === t.type)
                            for (var u = t.levels, d = 0; d < u.length; d++) {
                                var p = u[d]
                                  , f = o.getObjectByProperty("uuid", p.object);
                                void 0 !== f && o.addLevel(f, p.distance)
                            }
                        return o
                    }
                }()
            });
            var au = {
                UVMapping: vs,
                CubeReflectionMapping: gs,
                CubeRefractionMapping: ys,
                EquirectangularReflectionMapping: _s,
                EquirectangularRefractionMapping: xs,
                SphericalReflectionMapping: bs,
                CubeUVReflectionMapping: ws,
                CubeUVRefractionMapping: Ts
            }
              , ou = {
                RepeatWrapping: Ms,
                ClampToEdgeWrapping: Es,
                MirroredRepeatWrapping: Ss
            }
              , su = {
                NearestFilter: As,
                NearestMipMapNearestFilter: Ps,
                NearestMipMapLinearFilter: Cs,
                LinearFilter: Ls,
                LinearMipMapNearestFilter: Rs,
                LinearMipMapLinearFilter: Os
            };
            Object.assign(Pr.prototype, {
                getPoint: function() {
                    return console.warn("THREE.Curve: .getPoint() not implemented."),
                    null
                },
                getPointAt: function(e, t) {
                    var i = this.getUtoTmapping(e);
                    return this.getPoint(i, t)
                },
                getPoints: function(e) {
                    void 0 === e && (e = 5);
                    for (var t = [], i = 0; e >= i; i++)
                        t.push(this.getPoint(i / e));
                    return t
                },
                getSpacedPoints: function(e) {
                    void 0 === e && (e = 5);
                    for (var t = [], i = 0; e >= i; i++)
                        t.push(this.getPointAt(i / e));
                    return t
                },
                getLength: function() {
                    var e = this.getLengths();
                    return e[e.length - 1]
                },
                getLengths: function(e) {
                    if (void 0 === e && (e = this.arcLengthDivisions),
                    this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
                        return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var t, i, n = [], r = this.getPoint(0), a = 0;
                    for (n.push(0),
                    i = 1; e >= i; i++)
                        t = this.getPoint(i / e),
                        a += t.distanceTo(r),
                        n.push(a),
                        r = t;
                    return this.cacheArcLengths = n,
                    n
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.getLengths()
                },
                getUtoTmapping: function(e, t) {
                    var i, n = this.getLengths(), r = 0, a = n.length;
                    i = t ? t : e * n[a - 1];
                    for (var o, s = 0, l = a - 1; l >= s; )
                        if (r = Math.floor(s + (l - s) / 2),
                        o = n[r] - i,
                        0 > o)
                            s = r + 1;
                        else {
                            if (!(o > 0)) {
                                l = r;
                                break
                            }
                            l = r - 1
                        }
                    if (r = l,
                    n[r] === i)
                        return r / (a - 1);
                    var c = n[r]
                      , h = n[r + 1]
                      , u = h - c
                      , d = (i - c) / u
                      , p = (r + d) / (a - 1);
                    return p
                },
                getTangent: function(e) {
                    var t = 1e-4
                      , i = e - t
                      , n = e + t;
                    0 > i && (i = 0),
                    n > 1 && (n = 1);
                    var r = this.getPoint(i)
                      , a = this.getPoint(n)
                      , o = a.clone().sub(r);
                    return o.normalize()
                },
                getTangentAt: function(e) {
                    var t = this.getUtoTmapping(e);
                    return this.getTangent(t)
                },
                computeFrenetFrames: function(e, t) {
                    var i, r, o, s = new a, l = [], c = [], h = [], u = new a, d = new n;
                    for (i = 0; e >= i; i++)
                        r = i / e,
                        l[i] = this.getTangentAt(r),
                        l[i].normalize();
                    c[0] = new a,
                    h[0] = new a;
                    var p = Number.MAX_VALUE
                      , f = Math.abs(l[0].x)
                      , m = Math.abs(l[0].y)
                      , v = Math.abs(l[0].z);
                    for (p >= f && (p = f,
                    s.set(1, 0, 0)),
                    p >= m && (p = m,
                    s.set(0, 1, 0)),
                    p >= v && s.set(0, 0, 1),
                    u.crossVectors(l[0], s).normalize(),
                    c[0].crossVectors(l[0], u),
                    h[0].crossVectors(l[0], c[0]),
                    i = 1; e >= i; i++)
                        c[i] = c[i - 1].clone(),
                        h[i] = h[i - 1].clone(),
                        u.crossVectors(l[i - 1], l[i]),
                        u.length() > Number.EPSILON && (u.normalize(),
                        o = Math.acos(Ll.clamp(l[i - 1].dot(l[i]), -1, 1)),
                        c[i].applyMatrix4(d.makeRotationAxis(u, o))),
                        h[i].crossVectors(l[i], c[i]);
                    if (t === !0)
                        for (o = Math.acos(Ll.clamp(c[0].dot(c[e]), -1, 1)),
                        o /= e,
                        l[0].dot(u.crossVectors(c[0], c[e])) > 0 && (o = -o),
                        i = 1; e >= i; i++)
                            c[i].applyMatrix4(d.makeRotationAxis(l[i], o * i)),
                            h[i].crossVectors(l[i], c[i]);
                    return {
                        tangents: l,
                        normals: c,
                        binormals: h
                    }
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.arcLengthDivisions = e.arcLengthDivisions,
                    this
                }
            }),
            Cr.prototype = Object.create(Pr.prototype),
            Cr.prototype.constructor = Cr,
            Cr.prototype.isLineCurve = !0,
            Cr.prototype.getPoint = function(e, t) {
                var n = t || new i;
                return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
                n.multiplyScalar(e).add(this.v1)),
                n
            }
            ,
            Cr.prototype.getPointAt = function(e, t) {
                return this.getPoint(e, t)
            }
            ,
            Cr.prototype.getTangent = function() {
                var e = this.v2.clone().sub(this.v1);
                return e.normalize()
            }
            ,
            Cr.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            }
            ,
            Lr.prototype = Object.assign(Object.create(Pr.prototype), {
                constructor: Lr,
                add: function(e) {
                    this.curves.push(e)
                },
                closePath: function() {
                    var e = this.curves[0].getPoint(0)
                      , t = this.curves[this.curves.length - 1].getPoint(1);
                    e.equals(t) || this.curves.push(new Cr(t,e))
                },
                getPoint: function(e) {
                    for (var t = e * this.getLength(), i = this.getCurveLengths(), n = 0; n < i.length; ) {
                        if (i[n] >= t) {
                            var r = i[n] - t
                              , a = this.curves[n]
                              , o = a.getLength()
                              , s = 0 === o ? 0 : 1 - r / o;
                            return a.getPointAt(s)
                        }
                        n++
                    }
                    return null
                },
                getLength: function() {
                    var e = this.getCurveLengths();
                    return e[e.length - 1]
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.cacheLengths = null,
                    this.getCurveLengths()
                },
                getCurveLengths: function() {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                        return this.cacheLengths;
                    for (var e = [], t = 0, i = 0, n = this.curves.length; n > i; i++)
                        t += this.curves[i].getLength(),
                        e.push(t);
                    return this.cacheLengths = e,
                    e
                },
                getSpacedPoints: function(e) {
                    void 0 === e && (e = 40);
                    for (var t = [], i = 0; e >= i; i++)
                        t.push(this.getPoint(i / e));
                    return this.autoClose && t.push(t[0]),
                    t
                },
                getPoints: function(e) {
                    e = e || 12;
                    for (var t, i = [], n = 0, r = this.curves; n < r.length; n++)
                        for (var a = r[n], o = a && a.isEllipseCurve ? 2 * e : a && a.isLineCurve ? 1 : a && a.isSplineCurve ? e * a.points.length : e, s = a.getPoints(o), l = 0; l < s.length; l++) {
                            var c = s[l];
                            t && t.equals(c) || (i.push(c),
                            t = c)
                        }
                    return this.autoClose && i.length > 1 && !i[i.length - 1].equals(i[0]) && i.push(i[0]),
                    i
                },
                copy: function(e) {
                    Pr.prototype.copy.call(this, e),
                    this.curves = [];
                    for (var t = 0, i = e.curves.length; i > t; t++) {
                        var n = e.curves[t];
                        this.curves.push(n.clone())
                    }
                    return this.autoClose = e.autoClose,
                    this
                }
            }),
            Rr.prototype = Object.create(Pr.prototype),
            Rr.prototype.constructor = Rr,
            Rr.prototype.isEllipseCurve = !0,
            Rr.prototype.getPoint = function(e, t) {
                for (var n = t || new i, r = 2 * Math.PI, a = this.aEndAngle - this.aStartAngle, o = Math.abs(a) < Number.EPSILON; 0 > a; )
                    a += r;
                for (; a > r; )
                    a -= r;
                a < Number.EPSILON && (a = o ? 0 : r),
                this.aClockwise !== !0 || o || (a === r ? a = -r : a -= r);
                var s = this.aStartAngle + e * a
                  , l = this.aX + this.xRadius * Math.cos(s)
                  , c = this.aY + this.yRadius * Math.sin(s);
                if (0 !== this.aRotation) {
                    var h = Math.cos(this.aRotation)
                      , u = Math.sin(this.aRotation)
                      , d = l - this.aX
                      , p = c - this.aY;
                    l = d * h - p * u + this.aX,
                    c = d * u + p * h + this.aY
                }
                return n.set(l, c)
            }
            ,
            Rr.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.aX = e.aX,
                this.aY = e.aY,
                this.xRadius = e.xRadius,
                this.yRadius = e.yRadius,
                this.aStartAngle = e.aStartAngle,
                this.aEndAngle = e.aEndAngle,
                this.aClockwise = e.aClockwise,
                this.aRotation = e.aRotation,
                this
            }
            ,
            Or.prototype = Object.create(Pr.prototype),
            Or.prototype.constructor = Or,
            Or.prototype.isSplineCurve = !0,
            Or.prototype.getPoint = function(e, t) {
                var n = t || new i
                  , r = this.points
                  , a = (r.length - 1) * e
                  , o = Math.floor(a)
                  , s = a - o
                  , l = r[0 === o ? o : o - 1]
                  , c = r[o]
                  , h = r[o > r.length - 2 ? r.length - 1 : o + 1]
                  , u = r[o > r.length - 3 ? r.length - 1 : o + 2];
                return n.set(yr(s, l.x, c.x, h.x, u.x), yr(s, l.y, c.y, h.y, u.y)),
                n
            }
            ,
            Or.prototype.copy = function(e) {
                Pr.prototype.copy.call(this, e),
                this.points = [];
                for (var t = 0, i = e.points.length; i > t; t++) {
                    var n = e.points[t];
                    this.points.push(n.clone())
                }
                return this
            }
            ,
            Ir.prototype = Object.create(Pr.prototype),
            Ir.prototype.constructor = Ir,
            Ir.prototype.isCubicBezierCurve = !0,
            Ir.prototype.getPoint = function(e, t) {
                var n = t || new i
                  , r = this.v0
                  , a = this.v1
                  , o = this.v2
                  , s = this.v3;
                return n.set(Ar(e, r.x, a.x, o.x, s.x), Ar(e, r.y, a.y, o.y, s.y)),
                n
            }
            ,
            Ir.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this.v3.copy(e.v3),
                this
            }
            ,
            Dr.prototype = Object.create(Pr.prototype),
            Dr.prototype.constructor = Dr,
            Dr.prototype.isQuadraticBezierCurve = !0,
            Dr.prototype.getPoint = function(e, t) {
                var n = t || new i
                  , r = this.v0
                  , a = this.v1
                  , o = this.v2;
                return n.set(wr(e, r.x, a.x, o.x), wr(e, r.y, a.y, o.y)),
                n
            }
            ,
            Dr.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            }
            ;
            var lu = Object.assign(Object.create(Lr.prototype), {
                setFromPoints: function(e) {
                    this.moveTo(e[0].x, e[0].y);
                    for (var t = 1, i = e.length; i > t; t++)
                        this.lineTo(e[t].x, e[t].y)
                },
                moveTo: function(e, t) {
                    this.currentPoint.set(e, t)
                },
                lineTo: function(e, t) {
                    var n = new Cr(this.currentPoint.clone(),new i(e,t));
                    this.curves.push(n),
                    this.currentPoint.set(e, t)
                },
                quadraticCurveTo: function(e, t, n, r) {
                    var a = new Dr(this.currentPoint.clone(),new i(e,t),new i(n,r));
                    this.curves.push(a),
                    this.currentPoint.set(n, r)
                },
                bezierCurveTo: function(e, t, n, r, a, o) {
                    var s = new Ir(this.currentPoint.clone(),new i(e,t),new i(n,r),new i(a,o));
                    this.curves.push(s),
                    this.currentPoint.set(a, o)
                },
                splineThru: function(e) {
                    var t = [this.currentPoint.clone()].concat(e)
                      , i = new Or(t);
                    this.curves.push(i),
                    this.currentPoint.copy(e[e.length - 1])
                },
                arc: function(e, t, i, n, r, a) {
                    var o = this.currentPoint.x
                      , s = this.currentPoint.y;
                    this.absarc(e + o, t + s, i, n, r, a)
                },
                absarc: function(e, t, i, n, r, a) {
                    this.absellipse(e, t, i, i, n, r, a)
                },
                ellipse: function(e, t, i, n, r, a, o, s) {
                    var l = this.currentPoint.x
                      , c = this.currentPoint.y;
                    this.absellipse(e + l, t + c, i, n, r, a, o, s)
                },
                absellipse: function(e, t, i, n, r, a, o, s) {
                    var l = new Rr(e,t,i,n,r,a,o,s);
                    if (this.curves.length > 0) {
                        var c = l.getPoint(0);
                        c.equals(this.currentPoint) || this.lineTo(c.x, c.y)
                    }
                    this.curves.push(l);
                    var h = l.getPoint(1);
                    this.currentPoint.copy(h)
                },
                copy: function(e) {
                    return Lr.prototype.copy.call(this, e),
                    this.currentPoint.copy(e.currentPoint),
                    this
                }
            });
            Ur.prototype = lu,
            lu.constructor = Ur,
            Fr.prototype = Object.assign(Object.create(lu), {
                constructor: Fr,
                getPointsHoles: function(e) {
                    for (var t = [], i = 0, n = this.holes.length; n > i; i++)
                        t[i] = this.holes[i].getPoints(e);
                    return t
                },
                extractPoints: function(e) {
                    return {
                        shape: this.getPoints(e),
                        holes: this.getPointsHoles(e)
                    }
                },
                copy: function(e) {
                    Ur.prototype.copy.call(this, e),
                    this.holes = [];
                    for (var t = 0, i = e.holes.length; i > t; t++) {
                        var n = e.holes[t];
                        this.holes.push(n.clone())
                    }
                    return this
                }
            }),
            Object.assign(kr.prototype, {
                moveTo: function(e, t) {
                    this.currentPath = new Ur,
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(e, t)
                },
                lineTo: function(e, t) {
                    this.currentPath.lineTo(e, t)
                },
                quadraticCurveTo: function(e, t, i, n) {
                    this.currentPath.quadraticCurveTo(e, t, i, n)
                },
                bezierCurveTo: function(e, t, i, n, r, a) {
                    this.currentPath.bezierCurveTo(e, t, i, n, r, a)
                },
                splineThru: function(e) {
                    this.currentPath.splineThru(e)
                },
                toShapes: function(e, t) {
                    function i(e) {
                        for (var t = [], i = 0, n = e.length; n > i; i++) {
                            var r = e[i]
                              , a = new Fr;
                            a.curves = r.curves,
                            t.push(a)
                        }
                        return t
                    }
                    function n(e, t) {
                        for (var i = t.length, n = !1, r = i - 1, a = 0; i > a; r = a++) {
                            var o = t[r]
                              , s = t[a]
                              , l = s.x - o.x
                              , c = s.y - o.y;
                            if (Math.abs(c) > Number.EPSILON) {
                                if (0 > c && (o = t[a],
                                l = -l,
                                s = t[r],
                                c = -c),
                                e.y < o.y || e.y > s.y)
                                    continue;
                                if (e.y === o.y) {
                                    if (e.x === o.x)
                                        return !0
                                } else {
                                    var h = c * (e.x - o.x) - l * (e.y - o.y);
                                    if (0 === h)
                                        return !0;
                                    if (0 > h)
                                        continue;
                                    n = !n
                                }
                            } else {
                                if (e.y !== o.y)
                                    continue;
                                if (s.x <= e.x && e.x <= o.x || o.x <= e.x && e.x <= s.x)
                                    return !0
                            }
                        }
                        return n
                    }
                    var r = Qh.isClockWise
                      , a = this.subPaths;
                    if (0 === a.length)
                        return [];
                    if (t === !0)
                        return i(a);
                    var o, s, l, c = [];
                    if (1 === a.length)
                        return s = a[0],
                        l = new Fr,
                        l.curves = s.curves,
                        c.push(l),
                        c;
                    var h = !r(a[0].getPoints());
                    h = e ? !h : h;
                    var u, d = [], p = [], f = [], m = 0;
                    p[m] = void 0,
                    f[m] = [];
                    for (var v = 0, g = a.length; g > v; v++)
                        s = a[v],
                        u = s.getPoints(),
                        o = r(u),
                        o = e ? !o : o,
                        o ? (!h && p[m] && m++,
                        p[m] = {
                            s: new Fr,
                            p: u
                        },
                        p[m].s.curves = s.curves,
                        h && m++,
                        f[m] = []) : f[m].push({
                            h: s,
                            p: u[0]
                        });
                    if (!p[0])
                        return i(a);
                    if (p.length > 1) {
                        for (var y = !1, _ = [], x = 0, b = p.length; b > x; x++)
                            d[x] = [];
                        for (var x = 0, b = p.length; b > x; x++)
                            for (var w = f[x], T = 0; T < w.length; T++) {
                                for (var M = w[T], E = !0, S = 0; S < p.length; S++)
                                    n(M.p, p[S].p) && (x !== S && _.push({
                                        froms: x,
                                        tos: S,
                                        hole: T
                                    }),
                                    E ? (E = !1,
                                    d[S].push(M)) : y = !0);
                                E && d[x].push(M)
                            }
                        _.length > 0 && (y || (f = d))
                    }
                    for (var A, v = 0, P = p.length; P > v; v++) {
                        l = p[v].s,
                        c.push(l),
                        A = f[v];
                        for (var C = 0, L = A.length; L > C; C++)
                            l.holes.push(A[C].h)
                    }
                    return c
                }
            }),
            Object.assign(Nr.prototype, {
                isFont: !0,
                generateShapes: function(e, t, i) {
                    function n(e) {
                        for (var i = String(e).split(""), n = t / a.resolution, o = (a.boundingBox.yMax - a.boundingBox.yMin + a.underlineThickness) * n, s = 0, l = 0, c = [], h = 0; h < i.length; h++) {
                            var u = i[h];
                            if ("\n" === u)
                                s = 0,
                                l -= o;
                            else {
                                var d = r(u, n, s, l);
                                s += d.offsetX,
                                c.push(d.path)
                            }
                        }
                        return c
                    }
                    function r(e, t, n, r) {
                        var o = a.glyphs[e] || a.glyphs["?"];
                        if (o) {
                            var s, l, c, h, u, d, p, f, m, v, g, y = new kr, _ = [];
                            if (o.o)
                                for (var x = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), b = 0, w = x.length; w > b; ) {
                                    var T = x[b++];
                                    switch (T) {
                                    case "m":
                                        s = x[b++] * t + n,
                                        l = x[b++] * t + r,
                                        y.moveTo(s, l);
                                        break;
                                    case "l":
                                        s = x[b++] * t + n,
                                        l = x[b++] * t + r,
                                        y.lineTo(s, l);
                                        break;
                                    case "q":
                                        if (c = x[b++] * t + n,
                                        h = x[b++] * t + r,
                                        p = x[b++] * t + n,
                                        f = x[b++] * t + r,
                                        y.quadraticCurveTo(p, f, c, h),
                                        g = _[_.length - 1]) {
                                            u = g.x,
                                            d = g.y;
                                            for (var M = 1; i >= M; M++) {
                                                var E = M / i;
                                                wr(E, u, p, c),
                                                wr(E, d, f, h)
                                            }
                                        }
                                        break;
                                    case "b":
                                        if (c = x[b++] * t + n,
                                        h = x[b++] * t + r,
                                        p = x[b++] * t + n,
                                        f = x[b++] * t + r,
                                        m = x[b++] * t + n,
                                        v = x[b++] * t + r,
                                        y.bezierCurveTo(p, f, m, v, c, h),
                                        g = _[_.length - 1]) {
                                            u = g.x,
                                            d = g.y;
                                            for (var M = 1; i >= M; M++) {
                                                var E = M / i;
                                                Ar(E, u, p, m, c),
                                                Ar(E, d, f, v, h)
                                            }
                                        }
                                    }
                                }
                            return {
                                offsetX: o.ha * t,
                                path: y
                            }
                        }
                    }
                    void 0 === t && (t = 100),
                    void 0 === i && (i = 4);
                    for (var a = this.data, o = n(e), s = [], l = 0, c = o.length; c > l; l++)
                        Array.prototype.push.apply(s, o[l].toShapes());
                    return s
                }
            }),
            Object.assign(zr.prototype, {
                load: function(e, t, i, n) {
                    var r = this
                      , a = new kn(this.manager);
                    a.setPath(this.path),
                    a.load(e, function(e) {
                        var i;
                        try {
                            i = JSON.parse(e)
                        } catch (n) {
                            console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                            i = JSON.parse(e.substring(65, e.length - 2))
                        }
                        var a = r.parse(i);
                        t && t(a)
                    }, i, n)
                },
                parse: function(e) {
                    return new Nr(e)
                },
                setPath: function(e) {
                    return this.path = e,
                    this
                }
            });
            var cu, hu = {
                getContext: function() {
                    return void 0 === cu && (cu = new (window.AudioContext || window.webkitAudioContext)),
                    cu
                },
                setContext: function(e) {
                    cu = e
                }
            };
            Object.assign(Br.prototype, {
                load: function(e, t, i, n) {
                    var r = new kn(this.manager);
                    r.setResponseType("arraybuffer"),
                    r.load(e, function(e) {
                        var i = hu.getContext();
                        i.decodeAudioData(e, function(e) {
                            t(e)
                        })
                    }, i, n)
                }
            }),
            Object.assign(Gr.prototype, {
                update: function() {
                    var e, t, i, r, a, o, s, l, c = new n, h = new n;
                    return function(n) {
                        var u = e !== this || t !== n.focus || i !== n.fov || r !== n.aspect * this.aspect || a !== n.near || o !== n.far || s !== n.zoom || l !== this.eyeSep;
                        if (u) {
                            e = this,
                            t = n.focus,
                            i = n.fov,
                            r = n.aspect * this.aspect,
                            a = n.near,
                            o = n.far,
                            s = n.zoom;
                            var d = n.projectionMatrix.clone();
                            l = this.eyeSep / 2;
                            var p, f, m = l * a / t, v = a * Math.tan(Ll.DEG2RAD * i * .5) / s;
                            h.elements[12] = -l,
                            c.elements[12] = l,
                            p = -v * r + m,
                            f = v * r + m,
                            d.elements[0] = 2 * a / (f - p),
                            d.elements[8] = (f + p) / (f - p),
                            this.cameraL.projectionMatrix.copy(d),
                            p = -v * r - m,
                            f = v * r - m,
                            d.elements[0] = 2 * a / (f - p),
                            d.elements[8] = (f + p) / (f - p),
                            this.cameraR.projectionMatrix.copy(d)
                        }
                        this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(h),
                        this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(c)
                    }
                }()
            }),
            Hr.prototype = Object.create(ct.prototype),
            Hr.prototype.constructor = Hr,
            jr.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: jr,
                getInput: function() {
                    return this.gain
                },
                removeFilter: function() {
                    null !== this.filter && (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination),
                    this.gain.connect(this.context.destination),
                    this.filter = null)
                },
                getFilter: function() {
                    return this.filter
                },
                setFilter: function(e) {
                    null !== this.filter ? (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                    this.filter = e,
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination)
                },
                getMasterVolume: function() {
                    return this.gain.gain.value
                },
                setMasterVolume: function(e) {
                    this.gain.gain.value = e
                },
                updateMatrixWorld: function() {
                    var e = new a
                      , t = new r
                      , i = new a
                      , n = new a;
                    return function(r) {
                        ct.prototype.updateMatrixWorld.call(this, r);
                        var a = this.context.listener
                          , o = this.up;
                        this.matrixWorld.decompose(e, t, i),
                        n.set(0, 0, -1).applyQuaternion(t),
                        a.positionX ? (a.positionX.setValueAtTime(e.x, this.context.currentTime),
                        a.positionY.setValueAtTime(e.y, this.context.currentTime),
                        a.positionZ.setValueAtTime(e.z, this.context.currentTime),
                        a.forwardX.setValueAtTime(n.x, this.context.currentTime),
                        a.forwardY.setValueAtTime(n.y, this.context.currentTime),
                        a.forwardZ.setValueAtTime(n.z, this.context.currentTime),
                        a.upX.setValueAtTime(o.x, this.context.currentTime),
                        a.upY.setValueAtTime(o.y, this.context.currentTime),
                        a.upZ.setValueAtTime(o.z, this.context.currentTime)) : (a.setPosition(e.x, e.y, e.z),
                        a.setOrientation(n.x, n.y, n.z, o.x, o.y, o.z))
                    }
                }()
            }),
            Vr.prototype = Object.assign(Object.create(ct.prototype), {
                constructor: Vr,
                getOutput: function() {
                    return this.gain
                },
                setNodeSource: function(e) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "audioNode",
                    this.source = e,
                    this.connect(),
                    this
                },
                setBuffer: function(e) {
                    return this.buffer = e,
                    this.sourceType = "buffer",
                    this.autoplay && this.play(),
                    this
                },
                play: function() {
                    if (this.isPlaying === !0)
                        return void console.warn("THREE.Audio: Audio is already playing.");
                    if (this.hasPlaybackControl === !1)
                        return void console.warn("THREE.Audio: this Audio has no playback control.");
                    var e = this.context.createBufferSource();
                    return e.buffer = this.buffer,
                    e.loop = this.loop,
                    e.onended = this.onEnded.bind(this),
                    e.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
                    this.startTime = this.context.currentTime,
                    e.start(this.startTime, this.offset),
                    this.isPlaying = !0,
                    this.source = e,
                    this.connect()
                },
                pause: function() {
                    return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.isPlaying === !0 && (this.source.stop(),
                    this.offset += (this.context.currentTime - this.startTime) * this.playbackRate,
                    this.isPlaying = !1),
                    this)
                },
                stop: function() {
                    return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.source.stop(),
                    this.offset = 0,
                    this.isPlaying = !1,
                    this)
                },
                connect: function() {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (var e = 1, t = this.filters.length; t > e; e++)
                            this.filters[e - 1].connect(this.filters[e]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else
                        this.source.connect(this.getOutput());
                    return this
                },
                disconnect: function() {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (var e = 1, t = this.filters.length; t > e; e++)
                            this.filters[e - 1].disconnect(this.filters[e]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else
                        this.source.disconnect(this.getOutput());
                    return this
                },
                getFilters: function() {
                    return this.filters
                },
                setFilters: function(e) {
                    return e || (e = []),
                    this.isPlaying === !0 ? (this.disconnect(),
                    this.filters = e,
                    this.connect()) : this.filters = e,
                    this
                },
                getFilter: function() {
                    return this.getFilters()[0]
                },
                setFilter: function(e) {
                    return this.setFilters(e ? [e] : [])
                },
                setPlaybackRate: function(e) {
                    return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.playbackRate = e,
                    this.isPlaying === !0 && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
                    this)
                },
                getPlaybackRate: function() {
                    return this.playbackRate
                },
                onEnded: function() {
                    this.isPlaying = !1
                },
                getLoop: function() {
                    return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."),
                    !1) : this.loop
                },
                setLoop: function(e) {
                    return this.hasPlaybackControl === !1 ? void console.warn("THREE.Audio: this Audio has no playback control.") : (this.loop = e,
                    this.isPlaying === !0 && (this.source.loop = this.loop),
                    this)
                },
                getVolume: function() {
                    return this.gain.gain.value
                },
                setVolume: function(e) {
                    return this.gain.gain.value = e,
                    this
                }
            }),
            Wr.prototype = Object.assign(Object.create(Vr.prototype), {
                constructor: Wr,
                getOutput: function() {
                    return this.panner
                },
                getRefDistance: function() {
                    return this.panner.refDistance
                },
                setRefDistance: function(e) {
                    this.panner.refDistance = e
                },
                getRolloffFactor: function() {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function(e) {
                    this.panner.rolloffFactor = e
                },
                getDistanceModel: function() {
                    return this.panner.distanceModel
                },
                setDistanceModel: function(e) {
                    this.panner.distanceModel = e
                },
                getMaxDistance: function() {
                    return this.panner.maxDistance
                },
                setMaxDistance: function(e) {
                    this.panner.maxDistance = e
                },
                updateMatrixWorld: function() {
                    var e = new a;
                    return function(t) {
                        ct.prototype.updateMatrixWorld.call(this, t),
                        e.setFromMatrixPosition(this.matrixWorld),
                        this.panner.setPosition(e.x, e.y, e.z)
                    }
                }()
            }),
            Object.assign(Xr.prototype, {
                getFrequencyData: function() {
                    return this.analyser.getByteFrequencyData(this.data),
                    this.data
                },
                getAverageFrequency: function() {
                    for (var e = 0, t = this.getFrequencyData(), i = 0; i < t.length; i++)
                        e += t[i];
                    return e / t.length
                }
            }),
            Object.assign(Yr.prototype, {
                accumulate: function(e, t) {
                    var i = this.buffer
                      , n = this.valueSize
                      , r = e * n + n
                      , a = this.cumulativeWeight;
                    if (0 === a) {
                        for (var o = 0; o !== n; ++o)
                            i[r + o] = i[o];
                        a = t
                    } else {
                        a += t;
                        var s = t / a;
                        this._mixBufferRegion(i, r, 0, s, n)
                    }
                    this.cumulativeWeight = a
                },
                apply: function(e) {
                    var t = this.valueSize
                      , i = this.buffer
                      , n = e * t + t
                      , r = this.cumulativeWeight
                      , a = this.binding;
                    if (this.cumulativeWeight = 0,
                    1 > r) {
                        var o = 3 * t;
                        this._mixBufferRegion(i, n, o, 1 - r, t)
                    }
                    for (var s = t, l = t + t; s !== l; ++s)
                        if (i[s] !== i[s + t]) {
                            a.setValue(i, n);
                            break
                        }
                },
                saveOriginalState: function() {
                    var e = this.binding
                      , t = this.buffer
                      , i = this.valueSize
                      , n = 3 * i;
                    e.getValue(t, n);
                    for (var r = i, a = n; r !== a; ++r)
                        t[r] = t[n + r % i];
                    this.cumulativeWeight = 0
                },
                restoreOriginalState: function() {
                    var e = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, e)
                },
                _select: function(e, t, i, n, r) {
                    if (n >= .5)
                        for (var a = 0; a !== r; ++a)
                            e[t + a] = e[i + a]
                },
                _slerp: function(e, t, i, n) {
                    r.slerpFlat(e, t, e, t, e, i, n)
                },
                _lerp: function(e, t, i, n, r) {
                    for (var a = 1 - n, o = 0; o !== r; ++o) {
                        var s = t + o;
                        e[s] = e[s] * a + e[i + o] * n
                    }
                }
            }),
            Object.assign(qr.prototype, {
                getValue: function(e, t) {
                    this.bind();
                    var i = this._targetGroup.nCachedObjects_
                      , n = this._bindings[i];
                    void 0 !== n && n.getValue(e, t)
                },
                setValue: function(e, t) {
                    for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n)
                        i[n].setValue(e, t)
                },
                bind: function() {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, i = e.length; t !== i; ++t)
                        e[t].bind()
                },
                unbind: function() {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, i = e.length; t !== i; ++t)
                        e[t].unbind()
                }
            }),
            Object.assign(Zr, {
                Composite: qr,
                create: function(e, t, i) {
                    return e && e.isAnimationObjectGroup ? new Zr.Composite(e,t,i) : new Zr(e,t,i)
                },
                sanitizeNodeName: function(e) {
                    return e.replace(/\s/g, "_").replace(/[^\w-]/g, "")
                },
                parseTrackName: function() {
                    var e = /((?:[\w-]+[\/:])*)/
                      , t = /([\w-\.]+)?/
                      , i = /(?:\.([\w-]+)(?:\[(.+)\])?)?/
                      , n = /\.([\w-]+)(?:\[(.+)\])?/
                      , r = new RegExp("^" + e.source + t.source + i.source + n.source + "$")
                      , a = ["material", "materials", "bones"];
                    return function(e) {
                        var t = r.exec(e);
                        if (!t)
                            throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                        var i = {
                            nodeName: t[2],
                            objectName: t[3],
                            objectIndex: t[4],
                            propertyName: t[5],
                            propertyIndex: t[6]
                        }
                          , n = i.nodeName && i.nodeName.lastIndexOf(".");
                        if (void 0 !== n && -1 !== n) {
                            var o = i.nodeName.substring(n + 1);
                            -1 !== a.indexOf(o) && (i.nodeName = i.nodeName.substring(0, n),
                            i.objectName = o)
                        }
                        if (null === i.propertyName || 0 === i.propertyName.length)
                            throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                        return i
                    }
                }(),
                findNode: function(e, t) {
                    if (!t || "" === t || "root" === t || "." === t || -1 === t || t === e.name || t === e.uuid)
                        return e;
                    if (e.skeleton) {
                        var i = function(e) {
                            for (var i = 0; i < e.bones.length; i++) {
                                var n = e.bones[i];
                                if (n.name === t)
                                    return n
                            }
                            return null
                        }
                          , n = i(e.skeleton);
                        if (n)
                            return n
                    }
                    if (e.children) {
                        var r = function(e) {
                            for (var i = 0; i < e.length; i++) {
                                var n = e[i];
                                if (n.name === t || n.uuid === t)
                                    return n;
                                var a = r(n.children);
                                if (a)
                                    return a
                            }
                            return null
                        }
                          , a = r(e.children);
                        if (a)
                            return a
                    }
                    return null
                }
            }),
            Object.assign(Zr.prototype, {
                _getValue_unavailable: function() {},
                _setValue_unavailable: function() {},
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function(e, t) {
                    e[t] = this.node[this.propertyName]
                }
                , function(e, t) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        e[t++] = i[n]
                }
                , function(e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex]
                }
                , function(e, t) {
                    this.resolvedProperty.toArray(e, t)
                }
                ],
                SetterByBindingTypeAndVersioning: [[function(e, t) {
                    this.targetObject[this.propertyName] = e[t]
                }
                , function(e, t) {
                    this.targetObject[this.propertyName] = e[t],
                    this.targetObject.needsUpdate = !0
                }
                , function(e, t) {
                    this.targetObject[this.propertyName] = e[t],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(e, t) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        i[n] = e[t++]
                }
                , function(e, t) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        i[n] = e[t++];
                    this.targetObject.needsUpdate = !0
                }
                , function(e, t) {
                    for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n)
                        i[n] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t]
                }
                , function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t],
                    this.targetObject.needsUpdate = !0
                }
                , function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(e, t) {
                    this.resolvedProperty.fromArray(e, t)
                }
                , function(e, t) {
                    this.resolvedProperty.fromArray(e, t),
                    this.targetObject.needsUpdate = !0
                }
                , function(e, t) {
                    this.resolvedProperty.fromArray(e, t),
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ]],
                getValue: function(e, t) {
                    this.bind(),
                    this.getValue(e, t)
                },
                setValue: function(e, t) {
                    this.bind(),
                    this.setValue(e, t)
                },
                bind: function() {
                    var e = this.node
                      , t = this.parsedPath
                      , i = t.objectName
                      , n = t.propertyName
                      , r = t.propertyIndex;
                    if (e || (e = Zr.findNode(this.rootNode, t.nodeName) || this.rootNode,
                    this.node = e),
                    this.getValue = this._getValue_unavailable,
                    this.setValue = this._setValue_unavailable,
                    !e)
                        return void console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
                    if (i) {
                        var a = t.objectIndex;
                        switch (i) {
                        case "materials":
                            if (!e.material)
                                return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            if (!e.material.materials)
                                return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                            e = e.material.materials;
                            break;
                        case "bones":
                            if (!e.skeleton)
                                return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                            e = e.skeleton.bones;
                            for (var o = 0; o < e.length; o++)
                                if (e[o].name === a) {
                                    a = o;
                                    break
                                }
                            break;
                        default:
                            if (void 0 === e[i])
                                return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                            e = e[i]
                        }
                        if (void 0 !== a) {
                            if (void 0 === e[a])
                                return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                            e = e[a]
                        }
                    }
                    var s = e[n];
                    if (void 0 === s) {
                        var l = t.nodeName;
                        return void console.error("THREE.PropertyBinding: Trying to update property for track: " + l + "." + n + " but it wasn't found.", e)
                    }
                    var c = this.Versioning.None;
                    void 0 !== e.needsUpdate ? (c = this.Versioning.NeedsUpdate,
                    this.targetObject = e) : void 0 !== e.matrixWorldNeedsUpdate && (c = this.Versioning.MatrixWorldNeedsUpdate,
                    this.targetObject = e);
                    var h = this.BindingType.Direct;
                    if (void 0 !== r) {
                        if ("morphTargetInfluences" === n) {
                            if (!e.geometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (e.geometry.isBufferGeometry) {
                                if (!e.geometry.morphAttributes)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                for (var o = 0; o < this.node.geometry.morphAttributes.position.length; o++)
                                    if (e.geometry.morphAttributes.position[o].name === r) {
                                        r = o;
                                        break
                                    }
                            } else {
                                if (!e.geometry.morphTargets)
                                    return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                for (var o = 0; o < this.node.geometry.morphTargets.length; o++)
                                    if (e.geometry.morphTargets[o].name === r) {
                                        r = o;
                                        break
                                    }
                            }
                        }
                        h = this.BindingType.ArrayElement,
                        this.resolvedProperty = s,
                        this.propertyIndex = r
                    } else
                        void 0 !== s.fromArray && void 0 !== s.toArray ? (h = this.BindingType.HasFromToArray,
                        this.resolvedProperty = s) : Array.isArray(s) ? (h = this.BindingType.EntireArray,
                        this.resolvedProperty = s) : this.propertyName = n;
                    this.getValue = this.GetterByBindingType[h],
                    this.setValue = this.SetterByBindingTypeAndVersioning[h][c]
                },
                unbind: function() {
                    this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
                }
            }),
            Object.assign(Zr.prototype, {
                _getValue_unbound: Zr.prototype.getValue,
                _setValue_unbound: Zr.prototype.setValue
            }),
            Object.assign(Qr.prototype, {
                isAnimationObjectGroup: !0,
                add: function() {
                    for (var e = this._objects, t = e.length, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._paths, a = this._parsedPaths, o = this._bindings, s = o.length, l = 0, c = arguments.length; l !== c; ++l) {
                        var h = arguments[l]
                          , u = h.uuid
                          , d = n[u]
                          , p = void 0;
                        if (void 0 === d) {
                            d = t++,
                            n[u] = d,
                            e.push(h);
                            for (var f = 0, m = s; f !== m; ++f)
                                o[f].push(new Zr(h,r[f],a[f]))
                        } else if (i > d) {
                            p = e[d];
                            var v = --i
                              , g = e[v];
                            n[g.uuid] = d,
                            e[d] = g,
                            n[u] = v,
                            e[v] = h;
                            for (var f = 0, m = s; f !== m; ++f) {
                                var y = o[f]
                                  , _ = y[v]
                                  , x = y[d];
                                y[d] = _,
                                void 0 === x && (x = new Zr(h,r[f],a[f])),
                                y[v] = x
                            }
                        } else
                            e[d] !== p && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                    }
                    this.nCachedObjects_ = i
                },
                remove: function() {
                    for (var e = this._objects, t = this.nCachedObjects_, i = this._indicesByUUID, n = this._bindings, r = n.length, a = 0, o = arguments.length; a !== o; ++a) {
                        var s = arguments[a]
                          , l = s.uuid
                          , c = i[l];
                        if (void 0 !== c && c >= t) {
                            var h = t++
                              , u = e[h];
                            i[u.uuid] = c,
                            e[c] = u,
                            i[l] = h,
                            e[h] = s;
                            for (var d = 0, p = r; d !== p; ++d) {
                                var f = n[d]
                                  , m = f[h]
                                  , v = f[c];
                                f[c] = m,
                                f[h] = v
                            }
                        }
                    }
                    this.nCachedObjects_ = t
                },
                uncache: function() {
                    for (var e = this._objects, t = e.length, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, a = r.length, o = 0, s = arguments.length; o !== s; ++o) {
                        var l = arguments[o]
                          , c = l.uuid
                          , h = n[c];
                        if (void 0 !== h)
                            if (delete n[c],
                            i > h) {
                                var u = --i
                                  , d = e[u]
                                  , p = --t
                                  , f = e[p];
                                n[d.uuid] = h,
                                e[h] = d,
                                n[f.uuid] = u,
                                e[u] = f,
                                e.pop();
                                for (var m = 0, v = a; m !== v; ++m) {
                                    var g = r[m]
                                      , y = g[u]
                                      , _ = g[p];
                                    g[h] = y,
                                    g[u] = _,
                                    g.pop()
                                }
                            } else {
                                var p = --t
                                  , f = e[p];
                                n[f.uuid] = h,
                                e[h] = f,
                                e.pop();
                                for (var m = 0, v = a; m !== v; ++m) {
                                    var g = r[m];
                                    g[h] = g[p],
                                    g.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = i
                },
                subscribe_: function(e, t) {
                    var i = this._bindingsIndicesByPath
                      , n = i[e]
                      , r = this._bindings;
                    if (void 0 !== n)
                        return r[n];
                    var a = this._paths
                      , o = this._parsedPaths
                      , s = this._objects
                      , l = s.length
                      , c = this.nCachedObjects_
                      , h = new Array(l);
                    n = r.length,
                    i[e] = n,
                    a.push(e),
                    o.push(t),
                    r.push(h);
                    for (var u = c, d = s.length; u !== d; ++u) {
                        var p = s[u];
                        h[u] = new Zr(p,e,t)
                    }
                    return h
                },
                unsubscribe_: function(e) {
                    var t = this._bindingsIndicesByPath
                      , i = t[e];
                    if (void 0 !== i) {
                        var n = this._paths
                          , r = this._parsedPaths
                          , a = this._bindings
                          , o = a.length - 1
                          , s = a[o]
                          , l = e[o];
                        t[l] = i,
                        a[i] = s,
                        a.pop(),
                        r[i] = r[o],
                        r.pop(),
                        n[i] = n[o],
                        n.pop()
                    }
                }
            }),
            Object.assign(Jr.prototype, {
                play: function() {
                    return this._mixer._activateAction(this),
                    this
                },
                stop: function() {
                    return this._mixer._deactivateAction(this),
                    this.reset()
                },
                reset: function() {
                    return this.paused = !1,
                    this.enabled = !0,
                    this.time = 0,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.stopFading().stopWarping()
                },
                isRunning: function() {
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                },
                isScheduled: function() {
                    return this._mixer._isActiveAction(this)
                },
                startAt: function(e) {
                    return this._startTime = e,
                    this
                },
                setLoop: function(e, t) {
                    return this.loop = e,
                    this.repetitions = t,
                    this
                },
                setEffectiveWeight: function(e) {
                    return this.weight = e,
                    this._effectiveWeight = this.enabled ? e : 0,
                    this.stopFading()
                },
                getEffectiveWeight: function() {
                    return this._effectiveWeight
                },
                fadeIn: function(e) {
                    return this._scheduleFading(e, 0, 1)
                },
                fadeOut: function(e) {
                    return this._scheduleFading(e, 1, 0)
                },
                crossFadeFrom: function(e, t, i) {
                    if (e.fadeOut(t),
                    this.fadeIn(t),
                    i) {
                        var n = this._clip.duration
                          , r = e._clip.duration
                          , a = r / n
                          , o = n / r;
                        e.warp(1, a, t),
                        this.warp(o, 1, t)
                    }
                    return this
                },
                crossFadeTo: function(e, t, i) {
                    return e.crossFadeFrom(this, t, i)
                },
                stopFading: function() {
                    var e = this._weightInterpolant;
                    return null !== e && (this._weightInterpolant = null,
                    this._mixer._takeBackControlInterpolant(e)),
                    this
                },
                setEffectiveTimeScale: function(e) {
                    return this.timeScale = e,
                    this._effectiveTimeScale = this.paused ? 0 : e,
                    this.stopWarping()
                },
                getEffectiveTimeScale: function() {
                    return this._effectiveTimeScale
                },
                setDuration: function(e) {
                    return this.timeScale = this._clip.duration / e,
                    this.stopWarping()
                },
                syncWith: function(e) {
                    return this.time = e.time,
                    this.timeScale = e.timeScale,
                    this.stopWarping()
                },
                halt: function(e) {
                    return this.warp(this._effectiveTimeScale, 0, e)
                },
                warp: function(e, t, i) {
                    var n = this._mixer
                      , r = n.time
                      , a = this._timeScaleInterpolant
                      , o = this.timeScale;
                    null === a && (a = n._lendControlInterpolant(),
                    this._timeScaleInterpolant = a);
                    var s = a.parameterPositions
                      , l = a.sampleValues;
                    return s[0] = r,
                    s[1] = r + i,
                    l[0] = e / o,
                    l[1] = t / o,
                    this
                },
                stopWarping: function() {
                    var e = this._timeScaleInterpolant;
                    return null !== e && (this._timeScaleInterpolant = null,
                    this._mixer._takeBackControlInterpolant(e)),
                    this
                },
                getMixer: function() {
                    return this._mixer
                },
                getClip: function() {
                    return this._clip
                },
                getRoot: function() {
                    return this._localRoot || this._mixer._root
                },
                _update: function(e, t, i, n) {
                    if (!this.enabled)
                        return void this._updateWeight(e);
                    var r = this._startTime;
                    if (null !== r) {
                        var a = (e - r) * i;
                        if (0 > a || 0 === i)
                            return;
                        this._startTime = null,
                        t = i * a
                    }
                    t *= this._updateTimeScale(e);
                    var o = this._updateTime(t)
                      , s = this._updateWeight(e);
                    if (s > 0)
                        for (var l = this._interpolants, c = this._propertyBindings, h = 0, u = l.length; h !== u; ++h)
                            l[h].evaluate(o),
                            c[h].accumulate(n, s)
                },
                _updateWeight: function(e) {
                    var t = 0;
                    if (this.enabled) {
                        t = this.weight;
                        var i = this._weightInterpolant;
                        if (null !== i) {
                            var n = i.evaluate(e)[0];
                            t *= n,
                            e > i.parameterPositions[1] && (this.stopFading(),
                            0 === n && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = t,
                    t
                },
                _updateTimeScale: function(e) {
                    var t = 0;
                    if (!this.paused) {
                        t = this.timeScale;
                        var i = this._timeScaleInterpolant;
                        if (null !== i) {
                            var n = i.evaluate(e)[0];
                            t *= n,
                            e > i.parameterPositions[1] && (this.stopWarping(),
                            0 === t ? this.paused = !0 : this.timeScale = t)
                        }
                    }
                    return this._effectiveTimeScale = t,
                    t
                },
                _updateTime: function(e) {
                    var t = this.time + e;
                    if (0 === e)
                        return t;
                    var i = this._clip.duration
                      , n = this.loop
                      , r = this._loopCount;
                    if (n === ll) {
                        -1 === r && (this._loopCount = 0,
                        this._setEndings(!0, !0, !1));
                        e: {
                            if (t >= i)
                                t = i;
                            else {
                                if (!(0 > t))
                                    break e;
                                t = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: 0 > e ? -1 : 1
                            })
                        }
                    } else {
                        var a = n === hl;
                        if (-1 === r && (e >= 0 ? (r = 0,
                        this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                        t >= i || 0 > t) {
                            var o = Math.floor(t / i);
                            t -= i * o,
                            r += Math.abs(o);
                            var s = this.repetitions - r;
                            if (0 > s)
                                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                t = e > 0 ? i : 0,
                                this._mixer.dispatchEvent({
                                    type: "finished",
                                    action: this,
                                    direction: e > 0 ? 1 : -1
                                });
                            else {
                                if (0 === s) {
                                    var l = 0 > e;
                                    this._setEndings(l, !l, a)
                                } else
                                    this._setEndings(!1, !1, a);
                                this._loopCount = r,
                                this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: o
                                })
                            }
                        }
                        if (a && 1 === (1 & r))
                            return this.time = t,
                            i - t
                    }
                    return this.time = t,
                    t
                },
                _setEndings: function(e, t, i) {
                    var n = this._interpolantSettings;
                    i ? (n.endingStart = ml,
                    n.endingEnd = ml) : (n.endingStart = e ? this.zeroSlopeAtStart ? ml : fl : vl,
                    n.endingEnd = t ? this.zeroSlopeAtEnd ? ml : fl : vl)
                },
                _scheduleFading: function(e, t, i) {
                    var n = this._mixer
                      , r = n.time
                      , a = this._weightInterpolant;
                    null === a && (a = n._lendControlInterpolant(),
                    this._weightInterpolant = a);
                    var o = a.parameterPositions
                      , s = a.sampleValues;
                    return o[0] = r,
                    s[0] = t,
                    o[1] = r + e,
                    s[1] = i,
                    this
                }
            }),
            Object.assign(Kr.prototype, t.prototype, {
                _bindAction: function(e, t) {
                    var i = e._localRoot || this._root
                      , n = e._clip.tracks
                      , r = n.length
                      , a = e._propertyBindings
                      , o = e._interpolants
                      , s = i.uuid
                      , l = this._bindingsByRootAndName
                      , c = l[s];
                    void 0 === c && (c = {},
                    l[s] = c);
                    for (var h = 0; h !== r; ++h) {
                        var u = n[h]
                          , d = u.name
                          , p = c[d];
                        if (void 0 !== p)
                            a[h] = p;
                        else {
                            if (p = a[h],
                            void 0 !== p) {
                                null === p._cacheIndex && (++p.referenceCount,
                                this._addInactiveBinding(p, s, d));
                                continue
                            }
                            var f = t && t._propertyBindings[h].binding.parsedPath;
                            p = new Yr(Zr.create(i, d, f),u.ValueTypeName,u.getValueSize()),
                            ++p.referenceCount,
                            this._addInactiveBinding(p, s, d),
                            a[h] = p
                        }
                        o[h].resultBuffer = p.buffer
                    }
                },
                _activateAction: function(e) {
                    if (!this._isActiveAction(e)) {
                        if (null === e._cacheIndex) {
                            var t = (e._localRoot || this._root).uuid
                              , i = e._clip.uuid
                              , n = this._actionsByClip[i];
                            this._bindAction(e, n && n.knownActions[0]),
                            this._addInactiveAction(e, i, t)
                        }
                        for (var r = e._propertyBindings, a = 0, o = r.length; a !== o; ++a) {
                            var s = r[a];
                            0 === s.useCount++ && (this._lendBinding(s),
                            s.saveOriginalState())
                        }
                        this._lendAction(e)
                    }
                },
                _deactivateAction: function(e) {
                    if (this._isActiveAction(e)) {
                        for (var t = e._propertyBindings, i = 0, n = t.length; i !== n; ++i) {
                            var r = t[i];
                            0 === --r.useCount && (r.restoreOriginalState(),
                            this._takeBackBinding(r))
                        }
                        this._takeBackAction(e)
                    }
                },
                _initMemoryManager: function() {
                    this._actions = [],
                    this._nActiveActions = 0,
                    this._actionsByClip = {},
                    this._bindings = [],
                    this._nActiveBindings = 0,
                    this._bindingsByRootAndName = {},
                    this._controlInterpolants = [],
                    this._nActiveControlInterpolants = 0;
                    var e = this;
                    this.stats = {
                        actions: {
                            get total() {
                                return e._actions.length
                            },
                            get inUse() {
                                return e._nActiveActions
                            }
                        },
                        bindings: {
                            get total() {
                                return e._bindings.length
                            },
                            get inUse() {
                                return e._nActiveBindings
                            }
                        },
                        controlInterpolants: {
                            get total() {
                                return e._controlInterpolants.length
                            },
                            get inUse() {
                                return e._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function(e) {
                    var t = e._cacheIndex;
                    return null !== t && t < this._nActiveActions
                },
                _addInactiveAction: function(e, t, i) {
                    var n = this._actions
                      , r = this._actionsByClip
                      , a = r[t];
                    if (void 0 === a)
                        a = {
                            knownActions: [e],
                            actionByRoot: {}
                        },
                        e._byClipCacheIndex = 0,
                        r[t] = a;
                    else {
                        var o = a.knownActions;
                        e._byClipCacheIndex = o.length,
                        o.push(e)
                    }
                    e._cacheIndex = n.length,
                    n.push(e),
                    a.actionByRoot[i] = e
                },
                _removeInactiveAction: function(e) {
                    var t = this._actions
                      , i = t[t.length - 1]
                      , n = e._cacheIndex;
                    i._cacheIndex = n,
                    t[n] = i,
                    t.pop(),
                    e._cacheIndex = null;
                    var r = e._clip.uuid
                      , a = this._actionsByClip
                      , o = a[r]
                      , s = o.knownActions
                      , l = s[s.length - 1]
                      , c = e._byClipCacheIndex;
                    l._byClipCacheIndex = c,
                    s[c] = l,
                    s.pop(),
                    e._byClipCacheIndex = null;
                    var h = o.actionByRoot
                      , u = (e._localRoot || this._root).uuid;
                    delete h[u],
                    0 === s.length && delete a[r],
                    this._removeInactiveBindingsForAction(e)
                },
                _removeInactiveBindingsForAction: function(e) {
                    for (var t = e._propertyBindings, i = 0, n = t.length; i !== n; ++i) {
                        var r = t[i];
                        0 === --r.referenceCount && this._removeInactiveBinding(r)
                    }
                },
                _lendAction: function(e) {
                    var t = this._actions
                      , i = e._cacheIndex
                      , n = this._nActiveActions++
                      , r = t[n];
                    e._cacheIndex = n,
                    t[n] = e,
                    r._cacheIndex = i,
                    t[i] = r
                },
                _takeBackAction: function(e) {
                    var t = this._actions
                      , i = e._cacheIndex
                      , n = --this._nActiveActions
                      , r = t[n];
                    e._cacheIndex = n,
                    t[n] = e,
                    r._cacheIndex = i,
                    t[i] = r
                },
                _addInactiveBinding: function(e, t, i) {
                    var n = this._bindingsByRootAndName
                      , r = n[t]
                      , a = this._bindings;
                    void 0 === r && (r = {},
                    n[t] = r),
                    r[i] = e,
                    e._cacheIndex = a.length,
                    a.push(e)
                },
                _removeInactiveBinding: function(e) {
                    var t = this._bindings
                      , i = e.binding
                      , n = i.rootNode.uuid
                      , r = i.path
                      , a = this._bindingsByRootAndName
                      , o = a[n]
                      , s = t[t.length - 1]
                      , l = e._cacheIndex;
                    s._cacheIndex = l,
                    t[l] = s,
                    t.pop(),
                    delete o[r];
                    e: {
                        for (var c in o)
                            break e;
                        delete a[n]
                    }
                },
                _lendBinding: function(e) {
                    var t = this._bindings
                      , i = e._cacheIndex
                      , n = this._nActiveBindings++
                      , r = t[n];
                    e._cacheIndex = n,
                    t[n] = e,
                    r._cacheIndex = i,
                    t[i] = r
                },
                _takeBackBinding: function(e) {
                    var t = this._bindings
                      , i = e._cacheIndex
                      , n = --this._nActiveBindings
                      , r = t[n];
                    e._cacheIndex = n,
                    t[n] = e,
                    r._cacheIndex = i,
                    t[i] = r
                },
                _lendControlInterpolant: function() {
                    var e = this._controlInterpolants
                      , t = this._nActiveControlInterpolants++
                      , i = e[t];
                    return void 0 === i && (i = new tr(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
                    i.__cacheIndex = t,
                    e[t] = i),
                    i
                },
                _takeBackControlInterpolant: function(e) {
                    var t = this._controlInterpolants
                      , i = e.__cacheIndex
                      , n = --this._nActiveControlInterpolants
                      , r = t[n];
                    e.__cacheIndex = n,
                    t[n] = e,
                    r.__cacheIndex = i,
                    t[i] = r
                },
                _controlInterpolantsResultBuffer: new Float32Array(1),
                clipAction: function(e, t) {
                    var i = t || this._root
                      , n = i.uuid
                      , r = "string" == typeof e ? dr.findByName(i, e) : e
                      , a = null !== r ? r.uuid : e
                      , o = this._actionsByClip[a]
                      , s = null;
                    if (void 0 !== o) {
                        var l = o.actionByRoot[n];
                        if (void 0 !== l)
                            return l;
                        s = o.knownActions[0],
                        null === r && (r = s._clip)
                    }
                    if (null === r)
                        return null;
                    var c = new Jr(this,r,t);
                    return this._bindAction(c, s),
                    this._addInactiveAction(c, a, n),
                    c
                },
                existingAction: function(e, t) {
                    var i = t || this._root
                      , n = i.uuid
                      , r = "string" == typeof e ? dr.findByName(i, e) : e
                      , a = r ? r.uuid : e
                      , o = this._actionsByClip[a];
                    return void 0 !== o ? o.actionByRoot[n] || null : null
                },
                stopAllAction: function() {
                    var e = this._actions
                      , t = this._nActiveActions
                      , i = this._bindings
                      , n = this._nActiveBindings;
                    this._nActiveActions = 0,
                    this._nActiveBindings = 0;
                    for (var r = 0; r !== t; ++r)
                        e[r].reset();
                    for (var r = 0; r !== n; ++r)
                        i[r].useCount = 0;
                    return this
                },
                update: function(e) {
                    e *= this.timeScale;
                    for (var t = this._actions, i = this._nActiveActions, n = this.time += e, r = Math.sign(e), a = this._accuIndex ^= 1, o = 0; o !== i; ++o) {
                        var s = t[o];
                        s._update(n, e, r, a)
                    }
                    for (var l = this._bindings, c = this._nActiveBindings, o = 0; o !== c; ++o)
                        l[o].apply(a);
                    return this
                },
                getRoot: function() {
                    return this._root
                },
                uncacheClip: function(e) {
                    var t = this._actions
                      , i = e.uuid
                      , n = this._actionsByClip
                      , r = n[i];
                    if (void 0 !== r) {
                        for (var a = r.knownActions, o = 0, s = a.length; o !== s; ++o) {
                            var l = a[o];
                            this._deactivateAction(l);
                            var c = l._cacheIndex
                              , h = t[t.length - 1];
                            l._cacheIndex = null,
                            l._byClipCacheIndex = null,
                            h._cacheIndex = c,
                            t[c] = h,
                            t.pop(),
                            this._removeInactiveBindingsForAction(l)
                        }
                        delete n[i]
                    }
                },
                uncacheRoot: function(e) {
                    var t = e.uuid
                      , i = this._actionsByClip;
                    for (var n in i) {
                        var r = i[n].actionByRoot
                          , a = r[t];
                        void 0 !== a && (this._deactivateAction(a),
                        this._removeInactiveAction(a))
                    }
                    var o = this._bindingsByRootAndName
                      , s = o[t];
                    if (void 0 !== s)
                        for (var l in s) {
                            var c = s[l];
                            c.restoreOriginalState(),
                            this._removeInactiveBinding(c)
                        }
                },
                uncacheAction: function(e, t) {
                    var i = this.existingAction(e, t);
                    null !== i && (this._deactivateAction(i),
                    this._removeInactiveAction(i))
                }
            }),
            $r.prototype.clone = function() {
                return new $r(void 0 === this.value.clone ? this.value : this.value.clone())
            }
            ,
            ea.prototype = Object.assign(Object.create(St.prototype), {
                constructor: ea,
                isInstancedBufferGeometry: !0,
                copy: function(e) {
                    return St.prototype.copy.call(this, e),
                    this.maxInstancedCount = e.maxInstancedCount,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                }
            }),
            Object.defineProperties(ta.prototype, {
                count: {
                    get: function() {
                        return this.data.count
                    }
                },
                array: {
                    get: function() {
                        return this.data.array
                    }
                }
            }),
            Object.assign(ta.prototype, {
                isInterleavedBufferAttribute: !0,
                setX: function(e, t) {
                    return this.data.array[e * this.data.stride + this.offset] = t,
                    this
                },
                setY: function(e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 1] = t,
                    this
                },
                setZ: function(e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 2] = t,
                    this
                },
                setW: function(e, t) {
                    return this.data.array[e * this.data.stride + this.offset + 3] = t,
                    this
                },
                getX: function(e) {
                    return this.data.array[e * this.data.stride + this.offset]
                },
                getY: function(e) {
                    return this.data.array[e * this.data.stride + this.offset + 1]
                },
                getZ: function(e) {
                    return this.data.array[e * this.data.stride + this.offset + 2]
                },
                getW: function(e) {
                    return this.data.array[e * this.data.stride + this.offset + 3]
                },
                setXY: function(e, t, i) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = i,
                    this
                },
                setXYZ: function(e, t, i, n) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = i,
                    this.data.array[e + 2] = n,
                    this
                },
                setXYZW: function(e, t, i, n, r) {
                    return e = e * this.data.stride + this.offset,
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = i,
                    this.data.array[e + 2] = n,
                    this.data.array[e + 3] = r,
                    this
                }
            }),
            Object.defineProperty(ia.prototype, "needsUpdate", {
                set: function(e) {
                    e === !0 && this.version++
                }
            }),
            Object.assign(ia.prototype, {
                isInterleavedBuffer: !0,
                setArray: function(e) {
                    if (Array.isArray(e))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== e ? e.length / this.stride : 0,
                    this.array = e
                },
                setDynamic: function(e) {
                    return this.dynamic = e,
                    this
                },
                copy: function(e) {
                    return this.array = new e.array.constructor(e.array),
                    this.count = e.count,
                    this.stride = e.stride,
                    this.dynamic = e.dynamic,
                    this
                },
                copyAt: function(e, t, i) {
                    e *= this.stride,
                    i *= t.stride;
                    for (var n = 0, r = this.stride; r > n; n++)
                        this.array[e + n] = t.array[i + n];
                    return this
                },
                set: function(e, t) {
                    return void 0 === t && (t = 0),
                    this.array.set(e, t),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                onUpload: function(e) {
                    return this.onUploadCallback = e,
                    this
                }
            }),
            na.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: na,
                isInstancedInterleavedBuffer: !0,
                copy: function(e) {
                    return ia.prototype.copy.call(this, e),
                    this.meshPerAttribute = e.meshPerAttribute,
                    this
                }
            }),
            ra.prototype = Object.assign(Object.create(ft.prototype), {
                constructor: ra,
                isInstancedBufferAttribute: !0,
                copy: function(e) {
                    return ft.prototype.copy.call(this, e),
                    this.meshPerAttribute = e.meshPerAttribute,
                    this
                }
            }),
            Object.assign(aa.prototype, {
                linePrecision: 1,
                set: function(e, t) {
                    this.ray.set(e, t)
                },
                setFromCamera: function(e, t) {
                    t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
                    this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize()) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t),
                    this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
                },
                intersectObject: function(e, t) {
                    var i = [];
                    return sa(e, this, i, t),
                    i.sort(oa),
                    i
                },
                intersectObjects: function(e, t) {
                    var i = [];
                    if (Array.isArray(e) === !1)
                        return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                        i;
                    for (var n = 0, r = e.length; r > n; n++)
                        sa(e[n], this, i, t);
                    return i.sort(oa),
                    i
                }
            }),
            Object.assign(la.prototype, {
                start: function() {
                    this.startTime = ("undefined" == typeof performance ? Date : performance).now(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
                },
                stop: function() {
                    this.getElapsedTime(),
                    this.running = !1,
                    this.autoStart = !1
                },
                getElapsedTime: function() {
                    return this.getDelta(),
                    this.elapsedTime
                },
                getDelta: function() {
                    var e = 0;
                    if (this.autoStart && !this.running)
                        return this.start(),
                        0;
                    if (this.running) {
                        var t = ("undefined" == typeof performance ? Date : performance).now();
                        e = (t - this.oldTime) / 1e3,
                        this.oldTime = t,
                        this.elapsedTime += e
                    }
                    return e
                }
            }),
            Object.assign(ca.prototype, {
                set: function(e, t, i) {
                    return this.radius = e,
                    this.phi = t,
                    this.theta = i,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.radius = e.radius,
                    this.phi = e.phi,
                    this.theta = e.theta,
                    this
                },
                makeSafe: function() {
                    var e = 1e-6;
                    return this.phi = Math.max(e, Math.min(Math.PI - e, this.phi)),
                    this
                },
                setFromVector3: function(e) {
                    return this.radius = e.length(),
                    0 === this.radius ? (this.theta = 0,
                    this.phi = 0) : (this.theta = Math.atan2(e.x, e.z),
                    this.phi = Math.acos(Ll.clamp(e.y / this.radius, -1, 1))),
                    this
                }
            }),
            Object.assign(ha.prototype, {
                set: function(e, t, i) {
                    return this.radius = e,
                    this.theta = t,
                    this.y = i,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(e) {
                    return this.radius = e.radius,
                    this.theta = e.theta,
                    this.y = e.y,
                    this
                },
                setFromVector3: function(e) {
                    return this.radius = Math.sqrt(e.x * e.x + e.z * e.z),
                    this.theta = Math.atan2(e.x, e.z),
                    this.y = e.y,
                    this
                }
            }),
            ua.prototype = Object.create(ct.prototype),
            ua.prototype.constructor = ua,
            ua.prototype.isImmediateRenderObject = !0,
            da.prototype = Object.create(Di.prototype),
            da.prototype.constructor = da,
            da.prototype.update = function() {
                var e = new a
                  , t = new a
                  , i = new o;
                return function() {
                    var n = ["a", "b", "c"];
                    this.object.updateMatrixWorld(!0),
                    i.getNormalMatrix(this.object.matrixWorld);
                    var r = this.object.matrixWorld
                      , a = this.geometry.attributes.position
                      , o = this.object.geometry;
                    if (o && o.isGeometry)
                        for (var s = o.vertices, l = o.faces, c = 0, h = 0, u = l.length; u > h; h++)
                            for (var d = l[h], p = 0, f = d.vertexNormals.length; f > p; p++) {
                                var m = s[d[n[p]]]
                                  , v = d.vertexNormals[p];
                                e.copy(m).applyMatrix4(r),
                                t.copy(v).applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),
                                a.setXYZ(c, e.x, e.y, e.z),
                                c += 1,
                                a.setXYZ(c, t.x, t.y, t.z),
                                c += 1
                            }
                    else if (o && o.isBufferGeometry)
                        for (var g = o.attributes.position, y = o.attributes.normal, c = 0, p = 0, f = g.count; f > p; p++)
                            e.set(g.getX(p), g.getY(p), g.getZ(p)).applyMatrix4(r),
                            t.set(y.getX(p), y.getY(p), y.getZ(p)),
                            t.applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),
                            a.setXYZ(c, e.x, e.y, e.z),
                            c += 1,
                            a.setXYZ(c, t.x, t.y, t.z),
                            c += 1;
                    a.needsUpdate = !0
                }
            }(),
            pa.prototype = Object.create(ct.prototype),
            pa.prototype.constructor = pa,
            pa.prototype.dispose = function() {
                this.cone.geometry.dispose(),
                this.cone.material.dispose()
            }
            ,
            pa.prototype.update = function() {
                var e = new a
                  , t = new a;
                return function() {
                    this.light.updateMatrixWorld();
                    var i = this.light.distance ? this.light.distance : 1e3
                      , n = i * Math.tan(this.light.angle);
                    this.cone.scale.set(n, n, i),
                    e.setFromMatrixPosition(this.light.matrixWorld),
                    t.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(t.sub(e)),
                    void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
                }
            }(),
            ma.prototype = Object.create(Di.prototype),
            ma.prototype.constructor = ma,
            ma.prototype.updateMatrixWorld = function() {
                var e = new a
                  , t = new n
                  , i = new n;
                return function(n) {
                    var r = this.bones
                      , a = this.geometry
                      , o = a.getAttribute("position");
                    i.getInverse(this.root.matrixWorld);
                    for (var s = 0, l = 0; s < r.length; s++) {
                        var c = r[s];
                        c.parent && c.parent.isBone && (t.multiplyMatrices(i, c.matrixWorld),
                        e.setFromMatrixPosition(t),
                        o.setXYZ(l, e.x, e.y, e.z),
                        t.multiplyMatrices(i, c.parent.matrixWorld),
                        e.setFromMatrixPosition(t),
                        o.setXYZ(l + 1, e.x, e.y, e.z),
                        l += 2)
                    }
                    a.getAttribute("position").needsUpdate = !0,
                    ct.prototype.updateMatrixWorld.call(this, n)
                }
            }(),
            va.prototype = Object.create(Ft.prototype),
            va.prototype.constructor = va,
            va.prototype.dispose = function() {
                this.geometry.dispose(),
                this.material.dispose()
            }
            ,
            va.prototype.update = function() {
                void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
            }
            ,
            ga.prototype = Object.create(ct.prototype),
            ga.prototype.constructor = ga,
            ga.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
            }
            ,
            ga.prototype.update = function() {
                var e = .5 * this.light.width
                  , t = .5 * this.light.height
                  , i = this.line.geometry.attributes.position
                  , n = i.array;
                n[0] = e,
                n[1] = -t,
                n[2] = 0,
                n[3] = e,
                n[4] = t,
                n[5] = 0,
                n[6] = -e,
                n[7] = t,
                n[8] = 0,
                n[9] = -e,
                n[10] = -t,
                n[11] = 0,
                n[12] = e,
                n[13] = -t,
                n[14] = 0,
                i.needsUpdate = !0,
                void 0 !== this.color ? this.line.material.color.set(this.color) : this.line.material.color.copy(this.light.color)
            }
            ,
            ya.prototype = Object.create(ct.prototype),
            ya.prototype.constructor = ya,
            ya.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
            }
            ,
            ya.prototype.update = function() {
                var e = new a
                  , t = new Y
                  , i = new Y;
                return function() {
                    var n = this.children[0];
                    if (void 0 !== this.color)
                        this.material.color.set(this.color);
                    else {
                        var r = n.geometry.getAttribute("color");
                        t.copy(this.light.color),
                        i.copy(this.light.groundColor);
                        for (var a = 0, o = r.count; o > a; a++) {
                            var s = o / 2 > a ? t : i;
                            r.setXYZ(a, s.r, s.g, s.b)
                        }
                        r.needsUpdate = !0
                    }
                    n.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate())
                }
            }(),
            _a.prototype = Object.create(Di.prototype),
            _a.prototype.constructor = _a,
            xa.prototype = Object.create(Di.prototype),
            xa.prototype.constructor = xa,
            ba.prototype = Object.create(Di.prototype),
            ba.prototype.constructor = ba,
            ba.prototype.update = function() {
                var e = new a
                  , t = new a
                  , i = new o;
                return function() {
                    this.object.updateMatrixWorld(!0),
                    i.getNormalMatrix(this.object.matrixWorld);
                    for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, a = this.object.geometry, o = a.vertices, s = a.faces, l = 0, c = 0, h = s.length; h > c; c++) {
                        var u = s[c]
                          , d = u.normal;
                        e.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),
                        t.copy(d).applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),
                        r.setXYZ(l, e.x, e.y, e.z),
                        l += 1,
                        r.setXYZ(l, t.x, t.y, t.z),
                        l += 1
                    }
                    r.needsUpdate = !0
                }
            }(),
            wa.prototype = Object.create(ct.prototype),
            wa.prototype.constructor = wa,
            wa.prototype.dispose = function() {
                this.lightPlane.geometry.dispose(),
                this.lightPlane.material.dispose(),
                this.targetLine.geometry.dispose(),
                this.targetLine.material.dispose()
            }
            ,
            wa.prototype.update = function() {
                var e = new a
                  , t = new a
                  , i = new a;
                return function() {
                    e.setFromMatrixPosition(this.light.matrixWorld),
                    t.setFromMatrixPosition(this.light.target.matrixWorld),
                    i.subVectors(t, e),
                    this.lightPlane.lookAt(i),
                    void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
                    this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
                    this.targetLine.material.color.copy(this.light.color)),
                    this.targetLine.lookAt(i),
                    this.targetLine.scale.z = i.length()
                }
            }(),
            Ta.prototype = Object.create(Di.prototype),
            Ta.prototype.constructor = Ta,
            Ta.prototype.update = function() {
                function e(e, a, o, s) {
                    n.set(a, o, s).unproject(r);
                    var l = i[e];
                    if (void 0 !== l)
                        for (var c = t.getAttribute("position"), h = 0, u = l.length; u > h; h++)
                            c.setXYZ(l[h], n.x, n.y, n.z)
                }
                var t, i, n = new a, r = new ht;
                return function() {
                    t = this.geometry,
                    i = this.pointMap;
                    var n = 1
                      , a = 1;
                    r.projectionMatrix.copy(this.camera.projectionMatrix),
                    e("c", 0, 0, -1),
                    e("t", 0, 0, 1),
                    e("n1", -n, -a, -1),
                    e("n2", n, -a, -1),
                    e("n3", -n, a, -1),
                    e("n4", n, a, -1),
                    e("f1", -n, -a, 1),
                    e("f2", n, -a, 1),
                    e("f3", -n, a, 1),
                    e("f4", n, a, 1),
                    e("u1", .7 * n, 1.1 * a, -1),
                    e("u2", .7 * -n, 1.1 * a, -1),
                    e("u3", 0, 2 * a, -1),
                    e("cf1", -n, 0, 1),
                    e("cf2", n, 0, 1),
                    e("cf3", 0, -a, 1),
                    e("cf4", 0, a, 1),
                    e("cn1", -n, 0, -1),
                    e("cn2", n, 0, -1),
                    e("cn3", 0, -a, -1),
                    e("cn4", 0, a, -1),
                    t.getAttribute("position").needsUpdate = !0
                }
            }(),
            Ma.prototype = Object.create(Di.prototype),
            Ma.prototype.constructor = Ma,
            Ma.prototype.update = function() {
                var e = new tt;
                return function(t) {
                    if (void 0 !== t && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
                    void 0 !== this.object && e.setFromObject(this.object),
                    !e.isEmpty()) {
                        var i = e.min
                          , n = e.max
                          , r = this.geometry.attributes.position
                          , a = r.array;
                        a[0] = n.x,
                        a[1] = n.y,
                        a[2] = n.z,
                        a[3] = i.x,
                        a[4] = n.y,
                        a[5] = n.z,
                        a[6] = i.x,
                        a[7] = i.y,
                        a[8] = n.z,
                        a[9] = n.x,
                        a[10] = i.y,
                        a[11] = n.z,
                        a[12] = n.x,
                        a[13] = n.y,
                        a[14] = i.z,
                        a[15] = i.x,
                        a[16] = n.y,
                        a[17] = i.z,
                        a[18] = i.x,
                        a[19] = i.y,
                        a[20] = i.z,
                        a[21] = n.x,
                        a[22] = i.y,
                        a[23] = i.z,
                        r.needsUpdate = !0,
                        this.geometry.computeBoundingSphere()
                    }
                }
            }(),
            Ma.prototype.setFromObject = function(e) {
                return this.object = e,
                this.update(),
                this
            }
            ,
            Ea.prototype = Object.create(Di.prototype),
            Ea.prototype.constructor = Ea,
            Ea.prototype.updateMatrixWorld = function(e) {
                var t = this.box;
                t.isEmpty() || (t.getCenter(this.position),
                t.getSize(this.scale),
                this.scale.multiplyScalar(.5),
                ct.prototype.updateMatrixWorld.call(this, e))
            }
            ,
            Sa.prototype = Object.create(Ii.prototype),
            Sa.prototype.constructor = Sa,
            Sa.prototype.updateMatrixWorld = function(e) {
                var t = -this.plane.constant;
                Math.abs(t) < 1e-8 && (t = 1e-8),
                this.scale.set(.5 * this.size, .5 * this.size, t),
                this.lookAt(this.plane.normal),
                ct.prototype.updateMatrixWorld.call(this, e)
            }
            ;
            var uu, du;
            Aa.prototype = Object.create(ct.prototype),
            Aa.prototype.constructor = Aa,
            Aa.prototype.setDirection = function() {
                var e, t = new a;
                return function(i) {
                    i.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : i.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (t.set(i.z, 0, -i.x).normalize(),
                    e = Math.acos(i.y),
                    this.quaternion.setFromAxisAngle(t, e))
                }
            }(),
            Aa.prototype.setLength = function(e, t, i) {
                void 0 === t && (t = .2 * e),
                void 0 === i && (i = .2 * t),
                this.line.scale.set(1, Math.max(0, e - t), 1),
                this.line.updateMatrix(),
                this.cone.scale.set(i, t, i),
                this.cone.position.y = e,
                this.cone.updateMatrix()
            }
            ,
            Aa.prototype.setColor = function(e) {
                this.line.material.color.copy(e),
                this.cone.material.color.copy(e)
            }
            ,
            Pa.prototype = Object.create(Di.prototype),
            Pa.prototype.constructor = Pa;
            var pu = new a
              , fu = new Ca
              , mu = new Ca
              , vu = new Ca;
            La.prototype = Object.create(Pr.prototype),
            La.prototype.constructor = La,
            La.prototype.isCatmullRomCurve3 = !0,
            La.prototype.getPoint = function(e, t) {
                var i = t || new a
                  , n = this.points
                  , r = n.length
                  , o = (r - (this.closed ? 0 : 1)) * e
                  , s = Math.floor(o)
                  , l = o - s;
                this.closed ? s += s > 0 ? 0 : (Math.floor(Math.abs(s) / n.length) + 1) * n.length : 0 === l && s === r - 1 && (s = r - 2,
                l = 1);
                var c, h, u, d;
                if (this.closed || s > 0 ? c = n[(s - 1) % r] : (pu.subVectors(n[0], n[1]).add(n[0]),
                c = pu),
                h = n[s % r],
                u = n[(s + 1) % r],
                this.closed || r > s + 2 ? d = n[(s + 2) % r] : (pu.subVectors(n[r - 1], n[r - 2]).add(n[r - 1]),
                d = pu),
                "centripetal" === this.curveType || "chordal" === this.curveType) {
                    var p = "chordal" === this.curveType ? .5 : .25
                      , f = Math.pow(c.distanceToSquared(h), p)
                      , m = Math.pow(h.distanceToSquared(u), p)
                      , v = Math.pow(u.distanceToSquared(d), p);
                    1e-4 > m && (m = 1),
                    1e-4 > f && (f = m),
                    1e-4 > v && (v = m),
                    fu.initNonuniformCatmullRom(c.x, h.x, u.x, d.x, f, m, v),
                    mu.initNonuniformCatmullRom(c.y, h.y, u.y, d.y, f, m, v),
                    vu.initNonuniformCatmullRom(c.z, h.z, u.z, d.z, f, m, v)
                } else
                    "catmullrom" === this.curveType && (fu.initCatmullRom(c.x, h.x, u.x, d.x, this.tension),
                    mu.initCatmullRom(c.y, h.y, u.y, d.y, this.tension),
                    vu.initCatmullRom(c.z, h.z, u.z, d.z, this.tension));
                return i.set(fu.calc(l), mu.calc(l), vu.calc(l)),
                i
            }
            ,
            La.prototype.copy = function(e) {
                Pr.prototype.copy.call(this, e),
                this.points = [];
                for (var t = 0, i = e.points.length; i > t; t++) {
                    var n = e.points[t];
                    this.points.push(n.clone())
                }
                return this.closed = e.closed,
                this.curveType = e.curveType,
                this.tension = e.tension,
                this
            }
            ,
            Ra.prototype = Object.create(Pr.prototype),
            Ra.prototype.constructor = Ra,
            Ra.prototype.isCubicBezierCurve3 = !0,
            Ra.prototype.getPoint = function(e, t) {
                var i = t || new a
                  , n = this.v0
                  , r = this.v1
                  , o = this.v2
                  , s = this.v3;
                return i.set(Ar(e, n.x, r.x, o.x, s.x), Ar(e, n.y, r.y, o.y, s.y), Ar(e, n.z, r.z, o.z, s.z)),
                i
            }
            ,
            Ra.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this.v3.copy(e.v3),
                this
            }
            ,
            Oa.prototype = Object.create(Pr.prototype),
            Oa.prototype.constructor = Oa,
            Oa.prototype.isQuadraticBezierCurve3 = !0,
            Oa.prototype.getPoint = function(e, t) {
                var i = t || new a
                  , n = this.v0
                  , r = this.v1
                  , o = this.v2;
                return i.set(wr(e, n.x, r.x, o.x), wr(e, n.y, r.y, o.y), wr(e, n.z, r.z, o.z)),
                i
            }
            ,
            Oa.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v0.copy(e.v0),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            }
            ,
            Ia.prototype = Object.create(Pr.prototype),
            Ia.prototype.constructor = Ia,
            Ia.prototype.isLineCurve3 = !0,
            Ia.prototype.getPoint = function(e, t) {
                var i = t || new a;
                return 1 === e ? i.copy(this.v2) : (i.copy(this.v2).sub(this.v1),
                i.multiplyScalar(e).add(this.v1)),
                i
            }
            ,
            Ia.prototype.getPointAt = function(e, t) {
                return this.getPoint(e, t)
            }
            ,
            Ia.prototype.copy = function(e) {
                return Pr.prototype.copy.call(this, e),
                this.v1.copy(e.v1),
                this.v2.copy(e.v2),
                this
            }
            ,
            Da.prototype = Object.create(Rr.prototype),
            Da.prototype.constructor = Da,
            Da.prototype.isArcCurve = !0;
            var gu = {
                createMultiMaterialObject: function(e, t) {
                    for (var i = new Ni, n = 0, r = t.length; r > n; n++)
                        i.add(new Ft(e,t[n]));
                    return i
                },
                detach: function(e, t, i) {
                    e.applyMatrix(t.matrixWorld),
                    t.remove(e),
                    i.add(e)
                },
                attach: function(e, t, i) {
                    e.applyMatrix((new n).getInverse(i.matrixWorld)),
                    t.remove(e),
                    i.add(e)
                }
            }
              , yu = 0
              , _u = 1;
            Pr.create = function(e, t) {
                return console.log("THREE.Curve.create() has been deprecated"),
                e.prototype = Object.create(Pr.prototype),
                e.prototype.constructor = e,
                e.prototype.getPoint = t,
                e
            }
            ,
            Object.assign(Lr.prototype, {
                createPointsGeometry: function(e) {
                    console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    var t = this.getPoints(e);
                    return this.createGeometry(t)
                },
                createSpacedPointsGeometry: function(e) {
                    console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    var t = this.getSpacedPoints(e);
                    return this.createGeometry(t)
                },
                createGeometry: function(e) {
                    console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
                    for (var t = new pt, i = 0, n = e.length; n > i; i++) {
                        var r = e[i];
                        t.vertices.push(new a(r.x,r.y,r.z || 0))
                    }
                    return t
                }
            }),
            Object.assign(Ur.prototype, {
                fromPoints: function(e) {
                    console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
                    this.setFromPoints(e)
                }
            }),
            to.prototype = Object.create(La.prototype),
            io.prototype = Object.create(La.prototype),
            no.prototype = Object.create(La.prototype),
            Object.assign(no.prototype, {
                initFromArray: function() {
                    console.error("THREE.Spline: .initFromArray() has been removed.")
                },
                getControlPointsArray: function() {
                    console.error("THREE.Spline: .getControlPointsArray() has been removed.")
                },
                reparametrizeByArcLength: function() {
                    console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
                }
            }),
            _a.prototype.setColors = function() {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            }
            ,
            ma.prototype.update = function() {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            }
            ,
            Object.assign(q.prototype, {
                center: function(e) {
                    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
                    this.getCenter(e)
                },
                empty: function() {
                    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function(e) {
                    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                size: function(e) {
                    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
                    this.getSize(e)
                }
            }),
            Object.assign(tt.prototype, {
                center: function(e) {
                    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
                    this.getCenter(e)
                },
                empty: function() {
                    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
                    this.isEmpty()
                },
                isIntersectionBox: function(e) {
                    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                isIntersectionSphere: function(e) {
                    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(e)
                },
                size: function(e) {
                    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
                    this.getSize(e)
                }
            }),
            Dt.prototype.center = function(e) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
                this.getCenter(e)
            }
            ,
            Object.assign(Ll, {
                random16: function() {
                    return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
                    Math.random()
                },
                nearestPowerOfTwo: function(e) {
                    return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
                    Ll.floorPowerOfTwo(e)
                },
                nextPowerOfTwo: function(e) {
                    return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
                    Ll.ceilPowerOfTwo(e)
                }
            }),
            Object.assign(o.prototype, {
                flattenToArrayOffset: function(e, t) {
                    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(e, t)
                },
                multiplyVector3: function(e) {
                    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
                    e.applyMatrix3(this)
                },
                multiplyVector3Array: function() {
                    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
                },
                applyToBuffer: function(e) {
                    return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
                    this.applyToBufferAttribute(e)
                },
                applyToVector3Array: function() {
                    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
                }
            }),
            Object.assign(n.prototype, {
                extractPosition: function(e) {
                    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
                    this.copyPosition(e)
                },
                flattenToArrayOffset: function(e, t) {
                    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
                    this.toArray(e, t)
                },
                getPosition: function() {
                    var e;
                    return function() {
                        return void 0 === e && (e = new a),
                        console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
                        e.setFromMatrixColumn(this, 3)
                    }
                }(),
                setRotationFromQuaternion: function(e) {
                    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
                    this.makeRotationFromQuaternion(e)
                },
                multiplyToArray: function() {
                    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
                },
                multiplyVector3: function(e) {
                    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                multiplyVector4: function(e) {
                    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                multiplyVector3Array: function() {
                    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
                },
                rotateAxis: function(e) {
                    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
                    e.transformDirection(this)
                },
                crossVector: function(e) {
                    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
                    e.applyMatrix4(this)
                },
                translate: function() {
                    console.error("THREE.Matrix4: .translate() has been removed.")
                },
                rotateX: function() {
                    console.error("THREE.Matrix4: .rotateX() has been removed.")
                },
                rotateY: function() {
                    console.error("THREE.Matrix4: .rotateY() has been removed.")
                },
                rotateZ: function() {
                    console.error("THREE.Matrix4: .rotateZ() has been removed.")
                },
                rotateByAxis: function() {
                    console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
                },
                applyToBuffer: function(e) {
                    return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),
                    this.applyToBufferAttribute(e)
                },
                applyToVector3Array: function() {
                    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
                },
                makeFrustum: function(e, t, i, n, r, a) {
                    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
                    this.makePerspective(e, t, n, i, r, a)
                }
            }),
            nt.prototype.isIntersectionLine = function(e) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
                this.intersectsLine(e)
            }
            ,
            r.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
                e.applyQuaternion(this)
            }
            ,
            Object.assign(It.prototype, {
                isIntersectionBox: function(e) {
                    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
                    this.intersectsBox(e)
                },
                isIntersectionPlane: function(e) {
                    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
                    this.intersectsPlane(e)
                },
                isIntersectionSphere: function(e) {
                    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
                    this.intersectsSphere(e)
                }
            }),
            Object.assign(Fr.prototype, {
                extractAllPoints: function(e) {
                    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
                    this.extractPoints(e)
                },
                extrude: function(e) {
                    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
                    new ln(this,e)
                },
                makeGeometry: function(e) {
                    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
                    new yn(this,e)
                }
            }),
            Object.assign(i.prototype, {
                fromAttribute: function(e, t, i) {
                    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, i)
                },
                distanceToManhattan: function(e) {
                    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
                    this.manhattanDistanceTo(e)
                },
                lengthManhattan: function() {
                    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            Object.assign(a.prototype, {
                setEulerFromRotationMatrix: function() {
                    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
                },
                setEulerFromQuaternion: function() {
                    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
                },
                getPositionFromMatrix: function(e) {
                    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
                    this.setFromMatrixPosition(e)
                },
                getScaleFromMatrix: function(e) {
                    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
                    this.setFromMatrixScale(e)
                },
                getColumnFromMatrix: function(e, t) {
                    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
                    this.setFromMatrixColumn(t, e)
                },
                applyProjection: function(e) {
                    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
                    this.applyMatrix4(e)
                },
                fromAttribute: function(e, t, i) {
                    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, i)
                },
                distanceToManhattan: function(e) {
                    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
                    this.manhattanDistanceTo(e)
                },
                lengthManhattan: function() {
                    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            Object.assign(l.prototype, {
                fromAttribute: function(e, t, i) {
                    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
                    this.fromBufferAttribute(e, t, i)
                },
                lengthManhattan: function() {
                    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
                    this.manhattanLength()
                }
            }),
            pt.prototype.computeTangents = function() {
                console.warn("THREE.Geometry: .computeTangents() has been removed.")
            }
            ,
            Object.assign(ct.prototype, {
                getChildByName: function(e) {
                    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
                    this.getObjectByName(e)
                },
                renderDepth: function() {
                    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
                },
                translate: function(e, t) {
                    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
                    this.translateOnAxis(t, e)
                }
            }),
            Object.defineProperties(ct.prototype, {
                eulerOrder: {
                    get: function() {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order
                    },
                    set: function(e) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                        this.rotation.order = e
                    }
                },
                useQuaternion: {
                    get: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }),
            Object.defineProperties(Pi.prototype, {
                objects: {
                    get: function() {
                        return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                        this.levels
                    }
                }
            }),
            Object.defineProperty(Ci.prototype, "useVertexTexture", {
                get: function() {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                },
                set: function() {
                    console.warn("THREE.Skeleton: useVertexTexture has been removed.")
                }
            }),
            Object.defineProperty(Pr.prototype, "__arcLengthDivisions", {
                get: function() {
                    return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions
                },
                set: function(e) {
                    console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
                    this.arcLengthDivisions = e
                }
            }),
            mi.prototype.setLens = function(e, t) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
                void 0 !== t && (this.filmGauge = t),
                this.setFocalLength(e)
            }
            ,
            Object.defineProperties(jn.prototype, {
                onlyShadow: {
                    set: function() {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                        this.shadow.camera.fov = e
                    }
                },
                shadowCameraLeft: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                        this.shadow.camera.left = e
                    }
                },
                shadowCameraRight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                        this.shadow.camera.right = e
                    }
                },
                shadowCameraTop: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                        this.shadow.camera.top = e
                    }
                },
                shadowCameraBottom: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                        this.shadow.camera.bottom = e
                    }
                },
                shadowCameraNear: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                        this.shadow.camera.near = e
                    }
                },
                shadowCameraFar: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                        this.shadow.camera.far = e
                    }
                },
                shadowCameraVisible: {
                    set: function() {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                        this.shadow.bias = e
                    }
                },
                shadowDarkness: {
                    set: function() {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                        this.shadow.mapSize.width = e
                    }
                },
                shadowMapHeight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                        this.shadow.mapSize.height = e
                    }
                }
            }),
            Object.defineProperties(ft.prototype, {
                length: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                        this.array.length
                    }
                }
            }),
            Object.assign(St.prototype, {
                addIndex: function(e) {
                    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
                    this.setIndex(e)
                },
                addDrawCall: function(e, t, i) {
                    void 0 !== i && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
                    console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
                    this.addGroup(e, t)
                },
                clearDrawCalls: function() {
                    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
                    this.clearGroups()
                },
                computeTangents: function() {
                    console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
                },
                computeOffsets: function() {
                    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
                }
            }),
            Object.defineProperties(St.prototype, {
                drawcalls: {
                    get: function() {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                        this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                        this.groups
                    }
                }
            }),
            Object.defineProperties($r.prototype, {
                dynamic: {
                    set: function() {
                        console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
                    }
                },
                onUpdate: {
                    value: function() {
                        return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                        this
                    }
                }
            }),
            Object.defineProperties(K.prototype, {
                wrapAround: {
                    get: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                wrapRGB: {
                    get: function() {
                        return console.warn("THREE.Material: .wrapRGB has been removed."),
                        new Y
                    }
                },
                shading: {
                    get: function() {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function(e) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                        this.flatShading = e === Ao
                    }
                }
            }),
            Object.defineProperties(Rn.prototype, {
                metal: {
                    get: function() {
                        return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                        !1
                    },
                    set: function() {
                        console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
                    }
                }
            }),
            Object.defineProperties(Ot.prototype, {
                derivatives: {
                    get: function() {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives
                    },
                    set: function(e) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                        this.extensions.derivatives = e
                    }
                }
            }),
            Object.assign(bi.prototype, {
                getCurrentRenderTarget: function() {
                    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
                    this.getRenderTarget()
                },
                getMaxAnisotropy: function() {
                    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
                    this.capabilities.getMaxAnisotropy()
                },
                getPrecision: function() {
                    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
                    this.capabilities.precision
                },
                resetGLState: function() {
                    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
                    this.state.reset()
                },
                supportsFloatTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
                    this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
                    this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
                    this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
                    this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
                    this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
                    this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
                    this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function() {
                    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
                    this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function(e) {
                    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
                    this.setScissorTest(e)
                },
                initMaterial: function() {
                    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
                },
                addPrePlugin: function() {
                    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
                },
                addPostPlugin: function() {
                    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
                },
                updateShadowMap: function() {
                    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
                }
            }),
            Object.defineProperties(bi.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                        this.shadowMap.enabled = e
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                        this.shadowMap.type = e
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        return this.shadowMap.cullFace
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),
                        this.shadowMap.cullFace = e
                    }
                }
            }),
            Object.defineProperties(at.prototype, {
                cullFace: {
                    get: function() {
                        return this.renderReverseSided ? go : vo
                    },
                    set: function(e) {
                        var t = e !== vo;
                        console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + t + "."),
                        this.renderReverseSided = t
                    }
                }
            }),
            Object.defineProperties(c.prototype, {
                wrapS: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                        this.texture.wrapS = e
                    }
                },
                wrapT: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                        this.texture.wrapT = e
                    }
                },
                magFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                        this.texture.magFilter = e
                    }
                },
                minFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                        this.texture.minFilter = e
                    }
                },
                anisotropy: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                        this.texture.anisotropy = e
                    }
                },
                offset: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                        this.texture.offset = e
                    }
                },
                repeat: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                        this.texture.repeat = e
                    }
                },
                format: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                        this.texture.format = e
                    }
                },
                type: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                        this.texture.type = e
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                        this.texture.generateMipmaps = e
                    }
                }
            }),
            Vr.prototype.load = function(e) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var t = this
                  , i = new Br;
                return i.load(e, function(e) {
                    t.setBuffer(e)
                }),
                this
            }
            ,
            Xr.prototype.getData = function() {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
                this.getFrequencyData()
            }
            ,
            Hr.prototype.updateCubeMap = function(e, t) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
                this.update(e, t)
            }
            ;
            var xu = {
                merge: function(e, t, i) {
                    console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
                    var n;
                    t.isMesh && (t.matrixAutoUpdate && t.updateMatrix(),
                    n = t.matrix,
                    t = t.geometry),
                    e.merge(t, n, i)
                },
                center: function(e) {
                    return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
                    e.center()
                }
            }
              , bu = {
                crossOrigin: void 0,
                loadTexture: function(e, t, i, n) {
                    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                    var r = new Hn;
                    r.setCrossOrigin(this.crossOrigin);
                    var a = r.load(e, i, void 0, n);
                    return t && (a.mapping = t),
                    a
                },
                loadTextureCube: function(e, t, i, n) {
                    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                    var r = new Gn;
                    r.setCrossOrigin(this.crossOrigin);
                    var a = r.load(e, i, void 0, n);
                    return t && (a.mapping = t),
                    a
                },
                loadCompressedTexture: function() {
                    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
                },
                loadCompressedTextureCube: function() {
                    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
                }
            };
            e.WebGLRenderTargetCube = h,
            e.WebGLRenderTarget = c,
            e.WebGLRenderer = bi,
            e.ShaderLib = Vh,
            e.UniformsLib = Bl,
            e.UniformsUtils = Gl,
            e.ShaderChunk = jh,
            e.FogExp2 = wi,
            e.Fog = Ti,
            e.Scene = Mi,
            e.LensFlare = Ei,
            e.Sprite = Ai,
            e.LOD = Pi,
            e.SkinnedMesh = Ri,
            e.Skeleton = Ci,
            e.Bone = Li,
            e.Mesh = Ft,
            e.LineSegments = Di,
            e.LineLoop = Ui,
            e.Line = Ii,
            e.Points = ki,
            e.Group = Ni,
            e.VideoTexture = zi,
            e.DataTexture = u,
            e.CompressedTexture = Bi,
            e.CubeTexture = d,
            e.CanvasTexture = Q,
            e.DepthTexture = Gi,
            e.Texture = s,
            e.CompressedTextureLoader = Nn,
            e.DataTextureLoader = zn,
            e.CubeTextureLoader = Gn,
            e.TextureLoader = Hn,
            e.ObjectLoader = gr,
            e.MaterialLoader = pr,
            e.BufferGeometryLoader = fr,
            e.DefaultLoadingManager = eu,
            e.LoadingManager = Fn,
            e.JSONLoader = vr,
            e.ImageLoader = Bn,
            e.FontLoader = zr,
            e.FileLoader = kn,
            e.Loader = mr,
            e.Cache = $h,
            e.AudioLoader = Br,
            e.SpotLightShadow = Xn,
            e.SpotLight = Yn,
            e.PointLight = qn,
            e.RectAreaLight = Kn,
            e.HemisphereLight = Vn,
            e.DirectionalLightShadow = Zn,
            e.DirectionalLight = Qn,
            e.AmbientLight = Jn,
            e.LightShadow = Wn,
            e.Light = jn,
            e.StereoCamera = Gr,
            e.PerspectiveCamera = mi,
            e.OrthographicCamera = ut,
            e.CubeCamera = Hr,
            e.ArrayCamera = vi,
            e.Camera = ht,
            e.AudioListener = jr,
            e.PositionalAudio = Wr,
            e.AudioContext = hu,
            e.AudioAnalyser = Xr,
            e.Audio = Vr,
            e.VectorKeyframeTrack = rr,
            e.StringKeyframeTrack = lr,
            e.QuaternionKeyframeTrack = or,
            e.NumberKeyframeTrack = sr,
            e.ColorKeyframeTrack = hr,
            e.BooleanKeyframeTrack = cr,
            e.PropertyMixer = Yr,
            e.PropertyBinding = Zr,
            e.KeyframeTrack = ur,
            e.AnimationUtils = iu,
            e.AnimationObjectGroup = Qr,
            e.AnimationMixer = Kr,
            e.AnimationClip = dr,
            e.Uniform = $r,
            e.InstancedBufferGeometry = ea,
            e.BufferGeometry = St,
            e.Geometry = pt,
            e.InterleavedBufferAttribute = ta,
            e.InstancedInterleavedBuffer = na,
            e.InterleavedBuffer = ia,
            e.InstancedBufferAttribute = ra,
            e.Face3 = dt,
            e.Object3D = ct,
            e.Raycaster = aa,
            e.Layers = lt,
            e.EventDispatcher = t,
            e.Clock = la,
            e.QuaternionLinearInterpolant = ar,
            e.LinearInterpolant = tr,
            e.DiscreteInterpolant = ir,
            e.CubicInterpolant = er,
            e.Interpolant = $n,
            e.Triangle = Ut,
            e.Math = Ll,
            e.Spherical = ca,
            e.Cylindrical = ha,
            e.Plane = nt,
            e.Frustum = rt,
            e.Sphere = it,
            e.Ray = It,
            e.Matrix4 = n,
            e.Matrix3 = o,
            e.Box3 = tt,
            e.Box2 = q,
            e.Line3 = Dt,
            e.Euler = st,
            e.Vector4 = l,
            e.Vector3 = a,
            e.Vector2 = i,
            e.Quaternion = r,
            e.Color = Y,
            e.ImmediateRenderObject = ua,
            e.VertexNormalsHelper = da,
            e.SpotLightHelper = pa,
            e.SkeletonHelper = ma,
            e.PointLightHelper = va,
            e.RectAreaLightHelper = ga,
            e.HemisphereLightHelper = ya,
            e.GridHelper = _a,
            e.PolarGridHelper = xa,
            e.FaceNormalsHelper = ba,
            e.DirectionalLightHelper = wa,
            e.CameraHelper = Ta,
            e.BoxHelper = Ma,
            e.Box3Helper = Ea,
            e.PlaneHelper = Sa,
            e.ArrowHelper = Aa,
            e.AxesHelper = Pa,
            e.CatmullRomCurve3 = La,
            e.CubicBezierCurve3 = Ra,
            e.QuadraticBezierCurve3 = Oa,
            e.LineCurve3 = Ia,
            e.ArcCurve = Da,
            e.EllipseCurve = Rr,
            e.SplineCurve = Or,
            e.CubicBezierCurve = Ir,
            e.QuadraticBezierCurve = Dr,
            e.LineCurve = Cr,
            e.Shape = Fr,
            e.Path = Ur,
            e.ShapePath = kr,
            e.Font = Nr,
            e.CurvePath = Lr,
            e.Curve = Pr,
            e.ShapeUtils = Qh,
            e.SceneUtils = gu,
            e.WebGLUtils = xi,
            e.WireframeGeometry = Hi,
            e.ParametricGeometry = ji,
            e.ParametricBufferGeometry = Vi,
            e.TetrahedronGeometry = Yi,
            e.TetrahedronBufferGeometry = qi,
            e.OctahedronGeometry = Zi,
            e.OctahedronBufferGeometry = Qi,
            e.IcosahedronGeometry = Ji,
            e.IcosahedronBufferGeometry = Ki,
            e.DodecahedronGeometry = $i,
            e.DodecahedronBufferGeometry = en,
            e.PolyhedronGeometry = Wi,
            e.PolyhedronBufferGeometry = Xi,
            e.TubeGeometry = tn,
            e.TubeBufferGeometry = nn,
            e.TorusKnotGeometry = rn,
            e.TorusKnotBufferGeometry = an,
            e.TorusGeometry = on,
            e.TorusBufferGeometry = sn,
            e.TextGeometry = hn,
            e.TextBufferGeometry = un,
            e.SphereGeometry = dn,
            e.SphereBufferGeometry = pn,
            e.RingGeometry = fn,
            e.RingBufferGeometry = mn,
            e.PlaneGeometry = Ct,
            e.PlaneBufferGeometry = Lt,
            e.LatheGeometry = vn,
            e.LatheBufferGeometry = gn,
            e.ShapeGeometry = yn,
            e.ShapeBufferGeometry = _n,
            e.ExtrudeGeometry = ln,
            e.ExtrudeBufferGeometry = cn,
            e.EdgesGeometry = xn,
            e.ConeGeometry = Tn,
            e.ConeBufferGeometry = Mn,
            e.CylinderGeometry = bn,
            e.CylinderBufferGeometry = wn,
            e.CircleGeometry = En,
            e.CircleBufferGeometry = Sn,
            e.BoxGeometry = At,
            e.BoxBufferGeometry = Pt,
            e.ShadowMaterial = An,
            e.SpriteMaterial = Si,
            e.RawShaderMaterial = Pn,
            e.ShaderMaterial = Ot,
            e.PointsMaterial = Fi,
            e.MeshPhysicalMaterial = Ln,
            e.MeshStandardMaterial = Cn,
            e.MeshPhongMaterial = Rn,
            e.MeshToonMaterial = On,
            e.MeshNormalMaterial = In,
            e.MeshLambertMaterial = Dn,
            e.MeshDepthMaterial = $,
            e.MeshDistanceMaterial = et,
            e.MeshBasicMaterial = Rt,
            e.LineDashedMaterial = Un,
            e.LineBasicMaterial = Oi,
            e.Material = K,
            e.Float64BufferAttribute = Tt,
            e.Float32BufferAttribute = wt,
            e.Uint32BufferAttribute = bt,
            e.Int32BufferAttribute = xt,
            e.Uint16BufferAttribute = _t,
            e.Int16BufferAttribute = yt,
            e.Uint8ClampedBufferAttribute = gt,
            e.Uint8BufferAttribute = vt,
            e.Int8BufferAttribute = mt,
            e.BufferAttribute = ft,
            e.REVISION = po,
            e.MOUSE = fo,
            e.CullFaceNone = mo,
            e.CullFaceBack = vo,
            e.CullFaceFront = go,
            e.CullFaceFrontBack = yo,
            e.FrontFaceDirectionCW = _o,
            e.FrontFaceDirectionCCW = xo,
            e.BasicShadowMap = bo,
            e.PCFShadowMap = wo,
            e.PCFSoftShadowMap = To,
            e.FrontSide = Mo,
            e.BackSide = Eo,
            e.DoubleSide = So,
            e.FlatShading = Ao,
            e.SmoothShading = Po,
            e.NoColors = Co,
            e.FaceColors = Lo,
            e.VertexColors = Ro,
            e.NoBlending = Oo,
            e.NormalBlending = Io,
            e.AdditiveBlending = Do,
            e.SubtractiveBlending = Uo,
            e.MultiplyBlending = Fo,
            e.CustomBlending = ko,
            e.AddEquation = No,
            e.SubtractEquation = zo,
            e.ReverseSubtractEquation = Bo,
            e.MinEquation = Go,
            e.MaxEquation = Ho,
            e.ZeroFactor = jo,
            e.OneFactor = Vo,
            e.SrcColorFactor = Wo,
            e.OneMinusSrcColorFactor = Xo,
            e.SrcAlphaFactor = Yo,
            e.OneMinusSrcAlphaFactor = qo,
            e.DstAlphaFactor = Zo,
            e.OneMinusDstAlphaFactor = Qo,
            e.DstColorFactor = Jo,
            e.OneMinusDstColorFactor = Ko,
            e.SrcAlphaSaturateFactor = $o,
            e.NeverDepth = es,
            e.AlwaysDepth = ts,
            e.LessDepth = is,
            e.LessEqualDepth = ns,
            e.EqualDepth = rs,
            e.GreaterEqualDepth = as,
            e.GreaterDepth = os,
            e.NotEqualDepth = ss,
            e.MultiplyOperation = ls,
            e.MixOperation = cs,
            e.AddOperation = hs,
            e.NoToneMapping = us,
            e.LinearToneMapping = ds,
            e.ReinhardToneMapping = ps,
            e.Uncharted2ToneMapping = fs,
            e.CineonToneMapping = ms,
            e.UVMapping = vs,
            e.CubeReflectionMapping = gs,
            e.CubeRefractionMapping = ys,
            e.EquirectangularReflectionMapping = _s,
            e.EquirectangularRefractionMapping = xs,
            e.SphericalReflectionMapping = bs,
            e.CubeUVReflectionMapping = ws,
            e.CubeUVRefractionMapping = Ts,
            e.RepeatWrapping = Ms,
            e.ClampToEdgeWrapping = Es,
            e.MirroredRepeatWrapping = Ss,
            e.NearestFilter = As,
            e.NearestMipMapNearestFilter = Ps,
            e.NearestMipMapLinearFilter = Cs,
            e.LinearFilter = Ls,
            e.LinearMipMapNearestFilter = Rs,
            e.LinearMipMapLinearFilter = Os,
            e.UnsignedByteType = Is,
            e.ByteType = Ds,
            e.ShortType = Us,
            e.UnsignedShortType = Fs,
            e.IntType = ks,
            e.UnsignedIntType = Ns,
            e.FloatType = zs,
            e.HalfFloatType = Bs,
            e.UnsignedShort4444Type = Gs,
            e.UnsignedShort5551Type = Hs,
            e.UnsignedShort565Type = js,
            e.UnsignedInt248Type = Vs,
            e.AlphaFormat = Ws,
            e.RGBFormat = Xs,
            e.RGBAFormat = Ys,
            e.LuminanceFormat = qs,
            e.LuminanceAlphaFormat = Zs,
            e.RGBEFormat = Qs,
            e.DepthFormat = Js,
            e.DepthStencilFormat = Ks,
            e.RGB_S3TC_DXT1_Format = $s,
            e.RGBA_S3TC_DXT1_Format = el,
            e.RGBA_S3TC_DXT3_Format = tl,
            e.RGBA_S3TC_DXT5_Format = il,
            e.RGB_PVRTC_4BPPV1_Format = nl,
            e.RGB_PVRTC_2BPPV1_Format = rl,
            e.RGBA_PVRTC_4BPPV1_Format = al,
            e.RGBA_PVRTC_2BPPV1_Format = ol,
            e.RGB_ETC1_Format = sl,
            e.LoopOnce = ll,
            e.LoopRepeat = cl,
            e.LoopPingPong = hl,
            e.InterpolateDiscrete = ul,
            e.InterpolateLinear = dl,
            e.InterpolateSmooth = pl,
            e.ZeroCurvatureEnding = fl,
            e.ZeroSlopeEnding = ml,
            e.WrapAroundEnding = vl,
            e.TrianglesDrawMode = gl,
            e.TriangleStripDrawMode = yl,
            e.TriangleFanDrawMode = _l,
            e.LinearEncoding = xl,
            e.sRGBEncoding = bl,
            e.GammaEncoding = wl,
            e.RGBEEncoding = Tl,
            e.LogLuvEncoding = Ml,
            e.RGBM7Encoding = El,
            e.RGBM16Encoding = Sl,
            e.RGBDEncoding = Al,
            e.BasicDepthPacking = Pl,
            e.RGBADepthPacking = Cl,
            e.CubeGeometry = At,
            e.Face4 = Ua,
            e.LineStrip = yu,
            e.LinePieces = _u,
            e.MeshFaceMaterial = Fa,
            e.MultiMaterial = ka,
            e.PointCloud = Na,
            e.Particle = za,
            e.ParticleSystem = Ba,
            e.PointCloudMaterial = Ga,
            e.ParticleBasicMaterial = Ha,
            e.ParticleSystemMaterial = ja,
            e.Vertex = Va,
            e.DynamicBufferAttribute = Wa,
            e.Int8Attribute = Xa,
            e.Uint8Attribute = Ya,
            e.Uint8ClampedAttribute = qa,
            e.Int16Attribute = Za,
            e.Uint16Attribute = Qa,
            e.Int32Attribute = Ja,
            e.Uint32Attribute = Ka,
            e.Float32Attribute = $a,
            e.Float64Attribute = eo,
            e.ClosedSplineCurve3 = to,
            e.SplineCurve3 = io,
            e.Spline = no,
            e.AxisHelper = ro,
            e.BoundingBoxHelper = ao,
            e.EdgesHelper = oo,
            e.WireframeHelper = so,
            e.XHRLoader = lo,
            e.BinaryTextureLoader = co,
            e.GeometryUtils = xu,
            e.ImageUtils = bu,
            e.Projector = ho,
            e.CanvasRenderer = uo,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        })
    }
    , {}],
    17: [function(e, t) {
        function i() {}
        i.prototype = {
            on: function(e, t, i) {
                var n = this.e || (this.e = {});
                return (n[e] || (n[e] = [])).push({
                    fn: t,
                    ctx: i
                }),
                this
            },
            once: function(e, t, i) {
                function n() {
                    r.off(e, n),
                    t.apply(i, arguments)
                }
                var r = this;
                return n._ = t,
                this.on(e, n, i)
            },
            emit: function(e) {
                var t = [].slice.call(arguments, 1)
                  , i = ((this.e || (this.e = {}))[e] || []).slice()
                  , n = 0
                  , r = i.length;
                for (n; r > n; n++)
                    i[n].fn.apply(i[n].ctx, t);
                return this
            },
            off: function(e, t) {
                var i = this.e || (this.e = {})
                  , n = i[e]
                  , r = [];
                if (n && t)
                    for (var a = 0, o = n.length; o > a; a++)
                        n[a].fn !== t && n[a].fn._ !== t && r.push(n[a]);
                return r.length ? i[e] = r : delete i[e],
                this
            }
        },
        t.exports = i
    }
    , {}],
    18: [function(e, t) {
        "use strict";
        function i(e) {
            if (null === e || void 0 === e)
                throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(e)
        }
        function n() {
            try {
                if (!Object.assign)
                    return !1;
                var e = new String("abc");
                if (e[5] = "de",
                "5" === Object.getOwnPropertyNames(e)[0])
                    return !1;
                for (var t = {}, i = 0; 10 > i; i++)
                    t["_" + String.fromCharCode(i)] = i;
                var n = Object.getOwnPropertyNames(t).map(function(e) {
                    return t[e]
                });
                if ("0123456789" !== n.join(""))
                    return !1;
                var r = {};
                return "abcdefghijklmnopqrst".split("").forEach(function(e) {
                    r[e] = e
                }),
                "abcdefghijklmnopqrst" !== Object.keys(Object.assign({}, r)).join("") ? !1 : !0
            } catch (a) {
                return !1
            }
        }
        var r = Object.getOwnPropertySymbols
          , a = Object.prototype.hasOwnProperty
          , o = Object.prototype.propertyIsEnumerable;
        t.exports = n() ? Object.assign : function(e) {
            for (var t, n, s = i(e), l = 1; l < arguments.length; l++) {
                t = Object(arguments[l]);
                for (var c in t)
                    a.call(t, c) && (s[c] = t[c]);
                if (r) {
                    n = r(t);
                    for (var h = 0; h < n.length; h++)
                        o.call(t, n[h]) && (s[n[h]] = t[n[h]])
                }
            }
            return s
        }
    }
    , {}],
    19: [function(e, t, i) {
        arguments[4][17][0].apply(i, arguments)
    }
    , {
        dup: 17
    }],
    20: [function(e, t) {
        "use strict";
        t.exports = function(e) {
            return JSON.parse(JSON.stringify(e))
        }
    }
    , {}],
    21: [function(e, t) {
        "use strict";
        function i(e) {
            s(this, "_onWheel", "_onMouseWheel", "_onTouchStart", "_onTouchMove", "_onKeyDown"),
            this.el = window,
            e && e.el && (this.el = e.el,
            delete e.el),
            this.options = n({
                mouseMultiplier: 1,
                touchMultiplier: 2,
                firefoxMultiplier: 15,
                keyStep: 120,
                preventTouch: !1,
                unpreventTouchClass: "vs-touchmove-allowed",
                limitInertia: !1
            }, e),
            this.options.limitInertia && (this._lethargy = new a),
            this._emitter = new r,
            this._event = {
                y: 0,
                x: 0,
                deltaX: 0,
                deltaY: 0
            },
            this.touchStartX = null,
            this.touchStartY = null,
            this.bodyTouchAction = null,
            void 0 !== this.options.passive && (this.listenerOptions = {
                passive: this.options.passive
            })
        }
        var n = e("object-assign")
          , r = e("tiny-emitter")
          , a = e("lethargy").Lethargy
          , o = e("./support")
          , s = (e("./clone"),
        e("bindall-standalone"))
          , l = "virtualscroll";
        t.exports = i;
        var c = {
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            SPACE: 32
        };
        i.prototype._notify = function(e) {
            var t = this._event;
            t.x += t.deltaX,
            t.y += t.deltaY,
            this._emitter.emit(l, {
                x: t.x,
                y: t.y,
                deltaX: t.deltaX,
                deltaY: t.deltaY,
                originalEvent: e
            })
        }
        ,
        i.prototype._onWheel = function(e) {
            var t = this.options;
            if (!this._lethargy || this._lethargy.check(e) !== !1) {
                var i = this._event;
                i.deltaX = e.wheelDeltaX || -1 * e.deltaX,
                i.deltaY = e.wheelDeltaY || -1 * e.deltaY,
                o.isFirefox && 1 == e.deltaMode && (i.deltaX *= t.firefoxMultiplier,
                i.deltaY *= t.firefoxMultiplier),
                i.deltaX *= t.mouseMultiplier,
                i.deltaY *= t.mouseMultiplier,
                this._notify(e)
            }
        }
        ,
        i.prototype._onMouseWheel = function(e) {
            if (!this.options.limitInertia || this._lethargy.check(e) !== !1) {
                var t = this._event;
                t.deltaX = e.wheelDeltaX ? e.wheelDeltaX : 0,
                t.deltaY = e.wheelDeltaY ? e.wheelDeltaY : e.wheelDelta,
                this._notify(e)
            }
        }
        ,
        i.prototype._onTouchStart = function(e) {
            var t = e.targetTouches ? e.targetTouches[0] : e;
            this.touchStartX = t.pageX,
            this.touchStartY = t.pageY
        }
        ,
        i.prototype._onTouchMove = function(e) {
            var t = this.options;
            t.preventTouch && !e.target.classList.contains(t.unpreventTouchClass) && e.preventDefault();
            var i = this._event
              , n = e.targetTouches ? e.targetTouches[0] : e;
            i.deltaX = (n.pageX - this.touchStartX) * t.touchMultiplier,
            i.deltaY = (n.pageY - this.touchStartY) * t.touchMultiplier,
            this.touchStartX = n.pageX,
            this.touchStartY = n.pageY,
            this._notify(e)
        }
        ,
        i.prototype._onKeyDown = function(e) {
            var t = this._event;
            t.deltaX = t.deltaY = 0;
            var i = window.innerHeight - 40;
            switch (e.keyCode) {
            case c.LEFT:
            case c.UP:
                t.deltaY = this.options.keyStep;
                break;
            case c.RIGHT:
            case c.DOWN:
                t.deltaY = -this.options.keyStep;
                break;
            case c.SPACE && e.shiftKey:
                t.deltaY = i;
                break;
            case c.SPACE:
                t.deltaY = -i;
                break;
            default:
                return
            }
            this._notify(e)
        }
        ,
        i.prototype._bind = function() {
            o.hasWheelEvent && this.el.addEventListener("wheel", this._onWheel, this.listenerOptions),
            o.hasMouseWheelEvent && this.el.addEventListener("mousewheel", this._onMouseWheel, this.listenerOptions),
            o.hasTouch && (this.el.addEventListener("touchstart", this._onTouchStart, this.listenerOptions),
            this.el.addEventListener("touchmove", this._onTouchMove, this.listenerOptions)),
            o.hasPointer && o.hasTouchWin && (this.bodyTouchAction = document.body.style.msTouchAction,
            document.body.style.msTouchAction = "none",
            this.el.addEventListener("MSPointerDown", this._onTouchStart, !0),
            this.el.addEventListener("MSPointerMove", this._onTouchMove, !0)),
            o.hasKeyDown && document.addEventListener("keydown", this._onKeyDown)
        }
        ,
        i.prototype._unbind = function() {
            o.hasWheelEvent && this.el.removeEventListener("wheel", this._onWheel),
            o.hasMouseWheelEvent && this.el.removeEventListener("mousewheel", this._onMouseWheel),
            o.hasTouch && (this.el.removeEventListener("touchstart", this._onTouchStart),
            this.el.removeEventListener("touchmove", this._onTouchMove)),
            o.hasPointer && o.hasTouchWin && (document.body.style.msTouchAction = this.bodyTouchAction,
            this.el.removeEventListener("MSPointerDown", this._onTouchStart, !0),
            this.el.removeEventListener("MSPointerMove", this._onTouchMove, !0)),
            o.hasKeyDown && document.removeEventListener("keydown", this._onKeyDown)
        }
        ,
        i.prototype.on = function(e, t) {
            this._emitter.on(l, e, t);
            var i = this._emitter.e;
            i && i[l] && 1 === i[l].length && this._bind()
        }
        ,
        i.prototype.off = function(e, t) {
            this._emitter.off(l, e, t);
            var i = this._emitter.e;
            (!i[l] || i[l].length <= 0) && this._unbind()
        }
        ,
        i.prototype.reset = function() {
            var e = this._event;
            e.x = 0,
            e.y = 0
        }
        ,
        i.prototype.destroy = function() {
            this._emitter.off(),
            this._unbind()
        }
    }
    , {
        "./clone": 20,
        "./support": 22,
        "bindall-standalone": 2,
        lethargy: 8,
        "object-assign": 18,
        "tiny-emitter": 19
    }],
    22: [function(e, t) {
        "use strict";
        t.exports = function() {
            return {
                hasWheelEvent: "onwheel"in document,
                hasMouseWheelEvent: "onmousewheel"in document,
                hasTouch: "ontouchstart"in document,
                hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,
                hasPointer: !!window.navigator.msPointerEnabled,
                hasKeyDown: "onkeydown"in document,
                isFirefox: navigator.userAgent.indexOf("Firefox") > -1
            }
        }()
    }
    , {}],
    23: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s, l = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }(), c = e("webgl/ThreeD"), h = n(c), u = e("content/Content"), d = n(u), p = e("loading/Loader"), f = n(p), m = e("ui/UI"), v = n(m), g = e("data/DatasManager"), y = n(g), _ = e("stats.js"), x = n(_), b = e("tiny-emitter"), w = n(b), T = e("routing/Router"), M = n(T), E = e("pages/IntroPage"), S = n(E), A = e("pages/HomePage"), P = n(A), C = e("pages/PostPage"), L = n(C), R = e("data/TexturesManager"), O = n(R), I = !0, D = function(e) {
            function t() {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
            }
            return o(t, e),
            l(t, [{
                key: "load",
                value: function() {
                    var e = this;
                    APP.dev && (s = new x.default,
                    s.showPanel(0),
                    document.body.appendChild(s.dom)),
                    this.innerWidth = window.innerWidth,
                    this.innerHeight = window.innerHeight,
                    APP.mobile = this.innerWidth < 768 ? !0 : !1,
                    this.textureLoaded = !1,
                    this.dataLoaded = !1,
                    this.loader = new f.default,
                    this.loader.on("complete", function() {
                        e.dataLoaded = !0,
                        e.textureLoaded && e.dataLoaded && e.loaded()
                    }),
                    this.loader.addItem({
                        id: "datas",
                        src: APP.upload + "json/events.json",
                        type: "json"
                    }),
                    this.loader.start(),
                    this.loadTextures()
                }
            }, {
                key: "loadTextures",
                value: function() {
                    var e = this
                      , t = [{
                        name: "sprite",
                        url: APP.upload + "sprite/sprite.jpg",
                        type: "image",
                        dispatch: !0
                    }, {
                        name: "shadow",
                        url: APP.theme + "assets/images/compressed/shadow.jpg",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "shadow-spiral",
                        url: APP.theme + "assets/images/compressed/shadow-spiral.png",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "blank",
                        url: APP.theme + "assets/images/compressed/blank.jpg",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "particles",
                        url: APP.theme + "assets/images/compressed/particles.png",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "particles2",
                        url: APP.theme + "assets/images/compressed/particles2.png",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "particles3",
                        url: APP.theme + "assets/images/compressed/particles3.png",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "gradient",
                        url: APP.theme + "assets/images/compressed/gradient.jpg",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "godrays",
                        url: APP.theme + "assets/images/compressed/godrays.jpg",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "godrays2",
                        url: APP.theme + "assets/images/compressed/godrays2.jpg",
                        type: "compress",
                        dispatch: !0
                    }, {
                        name: "displacement",
                        url: APP.theme + "assets/images/compressed/displacement.png",
                        type: "image",
                        dispatch: !0
                    }, {
                        name: "limit",
                        url: APP.theme + "assets/images/limit.png",
                        type: "image",
                        dispatch: !0
                    }, {
                        name: "nebula",
                        url: APP.theme + "assets/images/nebula1.jpg",
                        type: "image",
                        dispatch: !0
                    }, {
                        name: "nebula2",
                        url: APP.theme + "assets/images/nebula2.jpg",
                        type: "image",
                        dispatch: !0
                    }];
                    O.default.setQuality(this.innerWidth < 1200 ? "low" : this.innerWidth < 1600 ? "med" : "high"),
                    O.default.once("loaded", function() {
                        e.textureLoaded = !0,
                        e.textureLoaded && e.dataLoaded && e.loaded()
                    }),
                    O.default.load(t)
                }
            }, {
                key: "loaded",
                value: function() {
                    var e = this;
                    v.default.init(),
                    y.default.init(this.loader.getItem("datas")),
                    y.default.on("items-updated", function() {
                        return e.updateList()
                    }),
                    this.init()
                }
            }, {
                key: "init",
                value: function() {
                    var e = this;
                    this.interactive = !1,
                    h.default.init(),
                    d.default.init(),
                    M.default.on("update", this.routeUpdated.bind(this)),
                    M.default.start(),
                    window.addEventListener("orientationchange", function() {
                        e.resize()
                    }),
                    window.addEventListener("resize", function() {
                        e.resize()
                    }),
                    this.resize(!1),
                    this.loop(!0)
                }
            }, {
                key: "routeUpdated",
                value: function(e) {
                    this.nextRoute = e,
                    this.nextRoute.transition ? (this.hidePreviousPage(!1),
                    this.showCurrentPage()) : void 0 != this.currentRoute ? this.hidePreviousPage() : this.showCurrentPage()
                }
            }, {
                key: "hidePreviousPage",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0;
                    t && this.currentPage.once("hided", function() {
                        return e.previousPageHided()
                    }),
                    this.currentPage.hide()
                }
            }, {
                key: "previousPageHided",
                value: function() {
                    this.showCurrentPage()
                }
            }, {
                key: "showCurrentPage",
                value: function() {
                    var e = this;
                    switch (APP.mobile && (this.nextRoute.type = "intro"),
                    this.nextRoute.type) {
                    case "intro":
                        this.currentPage = new S.default;
                        break;
                    case "home":
                        this.currentPage = new P.default;
                        break;
                    case "post":
                        this.currentPage = new L.default;
                    case "notfound":
                        this.currentPage = new S.default;
                    }
                    this.currentPage.once("showed", function() {
                        return e.currentPageShowed()
                    }),
                    this.currentPage.init(I),
                    I = !1,
                    setTimeout(function() {
                        e.currentPage.load()
                    }, 10),
                    this.currentRoute = this.nextRoute
                }
            }, {
                key: "currentPageShowed",
                value: function() {
                    M.default.changed()
                }
            }, {
                key: "updateList",
                value: function() {
                    this.scrollTo = 0,
                    d.default.updateList()
                }
            }, {
                key: "loop",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1;
                    APP.dev && s.begin(),
                    requestAnimationFrame(function() {
                        return e.loop()
                    }),
                    d.default.updateScroll(),
                    h.default.update(t),
                    APP.dev && s.end()
                }
            }, {
                key: "resize",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0;
                    this.innerWidth = window.innerWidth,
                    this.innerHeight = window.innerHeight;
                    var i = 0;
                    t && (i = 200),
                    this.timeoutResize && clearTimeout(this.timeoutResize),
                    this.timeoutResize = setTimeout(function() {
                        e.emit("resize")
                    }, i)
                }
            }]),
            t
        }(w.default), U = new D;
        i.default = U
    }
    , {
        "content/Content": 24,
        "data/DatasManager": 30,
        "data/TexturesManager": 33,
        "loading/Loader": 34,
        "pages/HomePage": 35,
        "pages/IntroPage": 36,
        "pages/PostPage": 38,
        "routing/Router": 39,
        "stats.js": 15,
        "tiny-emitter": 17,
        "ui/UI": 40,
        "webgl/ThreeD": 51
    }],
    24: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("../App")
          , c = n(l)
          , h = e("dom-css")
          , u = n(h)
          , d = e("tiny-emitter")
          , p = n(d)
          , f = e("ui/UI")
          , m = (n(f),
        e("data/DatasManager"))
          , v = n(m)
          , g = e("routing/Router")
          , y = n(g)
          , _ = e("virtual-scroll")
          , x = n(_)
          , b = e("content/Year")
          , w = n(b)
          , T = []
          , M = void 0
          , E = 250
          , S = function(e) {
            function t() {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
            }
            return o(t, e),
            s(t, [{
                key: "init",
                value: function() {
                    var e = this;
                    this.el = document.querySelector(".cnt"),
                    this.container = this.el.querySelector("main"),
                    this.button = this.el.querySelector(".button"),
                    this.prev = this.el.querySelector(".cnt_previous"),
                    this.next = this.el.querySelector(".cnt_next"),
                    this.year = new w.default(this.el.querySelector(".year")),
                    this.buttonBtDisplayed = !1,
                    this.contentVisible = !1,
                    this.scrollEnabled = !1,
                    this.scrollStopped = !1,
                    this.scroll = 0,
                    this.scrollTo = 0,
                    this.deltaScroll = 0,
                    this.timeoutScrollEnd = null,
                    this.forceScrolling = !1,
                    this.rounded = !0,
                    this.delayedShow = void 0,
                    this.doInaction = !1,
                    this.doUpdate = !1,
                    this.inactionStep = .5,
                    this.container.addEventListener("click", function(t) {
                        return e._onClickItems(t)
                    }),
                    this.button.addEventListener("click", function(t) {
                        return e._onClickButton(t)
                    }),
                    this.prev.addEventListener("click", function(t) {
                        return e._onClickPrevious(t)
                    }),
                    this.next.addEventListener("click", function(t) {
                        return e._onClickNext(t)
                    }),
                    this.resize(),
                    this.mousemoveHandler = function() {
                        return e.waitInaction()
                    }
                    ,
                    this.touchmoveHandler = function() {
                        return e.waitInaction()
                    }
                    ,
                    c.default.on("resize", function() {
                        return e.resize()
                    })
                }
            }, {
                key: "enableScroll",
                value: function() {
                    var e = this;
                    this.scrollEnabled || (this.scrollEnabled = !0,
                    this.scrollStopped = !1,
                    this.virtualScroll = new x.default({
                        passive: !0,
                        touchMultiplier: 4
                    }),
                    this.virtualScroll.on(function(t) {
                        e.scrollEnabled && e._onScroll(t)
                    }),
                    this.updateScroll(!0))
                }
            }, {
                key: "disableScroll",
                value: function() {
                    this.scrollEnabled && (this.scrollEnabled = !1,
                    this.scroll = this.scrollTo,
                    this.virtualScroll.destroy())
                }
            }, {
                key: "resetScroll",
                value: function() {
                    this.scroll = 0,
                    this.scrollTo = 0
                }
            }, {
                key: "stopScroll",
                value: function() {
                    this.scrollStopped = !0
                }
            }, {
                key: "resumeScroll",
                value: function() {
                    this.scrollEnabled && this.show(),
                    this.scrollStopped = !1
                }
            }, {
                key: "updateScroll",
                value: function(e) {
                    this.doInaction && (this.scrollTo -= this.inactionStep,
                    (this.scrollTo < -this.contentHeight || this.scrollTo > 0) && (this.inactionStep = -this.inactionStep)),
                    (Math.abs(this.scrollTo - this.scroll) > .1 || e) && (this.deltaScroll = this.scrollTo - this.scroll,
                    this.scroll += .1 * this.deltaScroll,
                    this.updateOpacity(),
                    this.updateYear(),
                    u.default(this.container, "transform", "translate3d(0," + this.scroll + "px,0)"),
                    this.emit("scroll", this.scroll, this.deltaScroll)),
                    Math.abs(this.scrollTo - this.scroll) < 2 && this.rounded ? this.showButton() : this.hideButton()
                }
            }, {
                key: "updateYear",
                value: function() {
                    if (this.items) {
                        var e = this.getCurrentIndex();
                        this.year.update(this.items[e].year)
                    }
                }
            }, {
                key: "updateOpacity",
                value: function() {
                    var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1,
                    void 0)
                      , t = void 0
                      , i = c.default.innerHeight / 2;
                    if (this.itemsEl)
                        for (var n = 0, r = this.itemsEl.length; r > n; n++)
                            e = n * E + this.scroll + i,
                            0 > e || e > c.default.innerHeight ? t = 0 : i - 100 > e ? (t = e / (i - 100),
                            t *= t) : e > i + 100 ? (t = (c.default.innerHeight - e) / (i - 100),
                            t *= t) : t = 1,
                            t = t.toFixed(2),
                            this.opacities[n] != t && (this.opacities[n] = t,
                            u.default(this.itemsEl[n], "opacity", t))
                }
            }, {
                key: "_onScroll",
                value: function(e) {
                    var t = this;
                    this.scrollStopped || (M && (M.kill(),
                    M = void 0),
                    this.hideButton(),
                    this.rounded = !1,
                    this.scrollTo += e.deltaY - e.deltaX,
                    this.scrollTo > 0 ? this.scrollTo = 0 : this.scrollTo < -this.contentHeight && (this.scrollTo = -this.contentHeight),
                    this.timeoutScrollEnd && clearTimeout(this.timeoutScrollEnd),
                    this.waitInaction(),
                    this.timeoutScrollEnd = setTimeout(function() {
                        t._roundScrollEnd()
                    }, 400))
                }
            }, {
                key: "_onClickButton",
                value: function() {
                    var e = this.getCurrentIndex();
                    y.default.to("/" + this.itemsEl[e].dataset.slug + "/")
                }
            }, {
                key: "_onClickPrevious",
                value: function() {
                    var e = this.getRoundScroll(this.scrollTo) - 1;
                    e >= 0 && this.scrollToIndex(e)
                }
            }, {
                key: "_onClickNext",
                value: function() {
                    var e = this.getRoundScroll(this.scrollTo) + 1;
                    e < this.itemsEl.length && this.scrollToIndex(e)
                }
            }, {
                key: "_roundScrollEnd",
                value: function() {
                    var e = this.getRoundScroll(this.scrollTo);
                    this.scrollToIndex(e),
                    this.rounded = !0
                }
            }, {
                key: "scrollToPosition",
                value: function(e) {
                    var t = this
                      , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .3;
                    this.forceScrolling = !0,
                    this.hideButton(),
                    0 == i ? (this.scrollTo = -e,
                    this.scroll = -e,
                    this.updateScroll(!0),
                    this.forceScrolling = !1) : M = TweenLite.to(this, i, {
                        scrollTo: -e,
                        onUpdate: function() {},
                        onComplete: function() {
                            t.forceScrolling = !1
                        }
                    })
                }
            }, {
                key: "show",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.contentVisible || "home" != y.default.currentType || (this.contentVisible = !0,
                    this.year.show(t),
                    this.enableScroll(),
                    this.startWaitingInaction(),
                    this.updateContent(),
                    TweenLite.to(this.el, .5, {
                        delay: t,
                        autoAlpha: 1,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.showButton()
                        }
                    }))
                }
            }, {
                key: "hide",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1;
                    t && this.year.hide(),
                    this.contentVisible && (this.contentVisible = !1,
                    this.hideButton(),
                    this.disableScroll(),
                    this.stopWaitingInaction(),
                    this.timeoutScrollEnd && clearTimeout(this.timeoutScrollEnd),
                    TweenLite.to(this.el, .5, {
                        autoAlpha: 0,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.doUpdate && (e.doUpdate = !1,
                            e.updateContent())
                        }
                    }))
                }
            }, {
                key: "updateContent",
                value: function() {
                    var e = "";
                    this.items = v.default.getAvailableItems();
                    for (var t = 0, i = this.items.length; i > t; t++)
                        e += '<div class="cnt_item" data-id="' + this.items[t].sortedId + '" data-slug="' + this.items[t].slug + '">\n          <p class="date">' + this.items[t].formatedDate + '</p>\n          <p class="title">' + this.items[t].title + "</p>\n        </div>";
                    this.container.innerHTML = e,
                    this.itemsEl = this.container.querySelectorAll(".cnt_item"),
                    this.opacities = [],
                    this.timeoutScrollEnd && clearTimeout(this.timeoutScrollEnd),
                    this.resize(),
                    this.updateOpacity(!0),
                    this.updateYear()
                }
            }, {
                key: "updateList",
                value: function() {
                    this.resetScroll(),
                    this.contentVisible ? this.doUpdate = !0 : this.updateContent()
                }
            }, {
                key: "startWaitingInaction",
                value: function() {
                    window.addEventListener("mousemove", this.mousemoveHandler),
                    this.waitInaction()
                }
            }, {
                key: "stopWaitingInaction",
                value: function() {
                    this.doInaction = !1,
                    window.removeEventListener("mousemove", this.mousemoveHandler),
                    this.timeoutInaction && clearTimeout(this.timeoutInaction)
                }
            }, {
                key: "waitInaction",
                value: function() {
                    var e = this;
                    this.doInaction && (this.doInaction = !1,
                    this._roundScrollEnd()),
                    clearTimeout(this.timeoutInaction),
                    this.timeoutInaction = setTimeout(function() {
                        return e.inaction()
                    }, 1e4)
                }
            }, {
                key: "inaction",
                value: function() {
                    this.hideButton(),
                    this.doInaction = !0
                }
            }, {
                key: "_onClickItems",
                value: function(e) {
                    this.waitInaction();
                    var t = e.target;
                    t.classList.contains("cnt_item") ? this.scrollToId(t.dataset.id) : t.parentNode.classList.contains("cnt_item") && this.scrollToId(t.parentNode.dataset.id)
                }
            }, {
                key: "getRoundScroll",
                value: function(e) {
                    return Math.round(Math.abs(e / E))
                }
            }, {
                key: "hideButton",
                value: function() {
                    this.delayedShow && (clearTimeout(this.delayedShow),
                    this.delayedShow = void 0),
                    this.buttonBtDisplayed && (this.buttonBtDisplayed = !1,
                    this.button.classList.remove("active"))
                }
            }, {
                key: "showButton",
                value: function() {
                    var e = this;
                    !this.buttonBtDisplayed && this.contentVisible && void 0 == this.delayedShow && (this.delayedShow = setTimeout(function() {
                        e.buttonBtDisplayed = !0,
                        u.default(e.button, "transform", "translateY(" + (T[e.getCurrentIndex()] + 80) + "px)"),
                        e.button.classList.add("active")
                    }, 40))
                }
            }, {
                key: "getCurrentIndex",
                value: function() {
                    var e = Math.abs(Math.round(-this.scroll / E));
                    return e
                }
            }, {
                key: "getCurrentId",
                value: function() {
                    var e = this.getCurrentIndex();
                    return parseInt(this.itemsEl[e].dataset.id)
                }
            }, {
                key: "scrollToId",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .3;
                    this.scrollToPosition(parseInt(v.default.getIndexFromId(e)) * E, t)
                }
            }, {
                key: "scrollToIndex",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .3;
                    this.scrollToPosition(e * E, t)
                }
            }, {
                key: "resize",
                value: function() {
                    var e = this.container.getBoundingClientRect();
                    if (this.contentHeight = e.height - (c.default.innerHeight - E) / 2,
                    this.itemsEl) {
                        T = [];
                        for (var t = 0, i = this.itemsEl.length; i > t; t++)
                            T.push(this.itemsEl[t].querySelector(".title").getBoundingClientRect().height)
                    }
                }
            }]),
            t
        }(p.default)
          , A = new S;
        i.default = A
    }
    , {
        "../App": 23,
        "content/Year": 26,
        "data/DatasManager": 30,
        "dom-css": 55,
        "routing/Router": 39,
        "tiny-emitter": 17,
        "ui/UI": 40,
        "virtual-scroll": 21
    }],
    25: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("blueimp-tmpl")
          , c = n(l)
          , h = e("data/DatasManager")
          , u = n(h)
          , d = e("tiny-emitter")
          , p = n(d)
          , f = e("routing/Router")
          , m = n(f)
          , v = e("App")
          , g = n(v)
          , y = e("dom-css")
          , _ = n(y)
          , x = function(e) {
            function t(e) {
                r(this, t);
                var i = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                i.data = e,
                i.container = document.querySelector(".posts");
                var n = Object.assign({}, i.data)
                  , o = window.location.href;
                return n.id = i.data.sortedId,
                n.title = i.data.title,
                n.categories = u.default.getCategoriesText(i.data.categories),
                n.date = i.data.formatedDate,
                n.link = i.data.link,
                n.twitter = "https://twitter.com/intent/tweet?text=" + encodeURIComponent(i.data.title) + "&url=" + encodeURIComponent(o),
                n.facebook = "https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(o),
                i.tpl = c.default("tmplpost", n),
                i.resizeHandler = function() {
                    return i.resize()
                }
                ,
                g.default.on("resize", i.resizeHandler),
                i
            }
            return o(t, e),
            s(t, [{
                key: "show",
                value: function() {
                    var e = this;
                    this.el = document.createElement("div"),
                    this.el.classList.add("post"),
                    this.el.innerHTML = this.tpl,
                    this.container.appendChild(this.el),
                    this.prev = this.el.querySelector(".post_previous"),
                    this.next = this.el.querySelector(".post_next"),
                    this.closeButton = this.el.querySelector(".squarebutton"),
                    this.closeButtonHandler = function() {
                        e.emit("close")
                    }
                    ,
                    this.previousHandler = function() {
                        m.default.toItem(t)
                    }
                    ,
                    this.nextHandler = function() {
                        m.default.toItem(i)
                    }
                    ;
                    var t = u.default.getPrevious(this.data.sortedId)
                      , i = u.default.getNext(this.data.sortedId);
                    -1 == t ? this.prev.style.display = "none" : this.prev.addEventListener("click", this.previousHandler),
                    -1 == i ? this.next.style.display = "none" : this.next.addEventListener("click", this.nextHandler),
                    this.closeButton.addEventListener("click", this.closeButtonHandler),
                    this.closeHandler = function(t) {
                        e.el.querySelector(".post_container").contains(t.target) || e.el.querySelector(".post_navigation").contains(t.target) || e.emit("close")
                    }
                    ,
                    window.addEventListener("click", this.closeHandler);
                    var n = new TimelineMax({
                        delay: .2
                    });
                    n.add(TweenLite.fromTo(this.el.querySelector(".post_container"), .6, {
                        x: "-20%"
                    }, {
                        x: "0%",
                        ease: Cubic.easeInOut
                    })),
                    n.add(TweenLite.fromTo(this.el.querySelector(".post_bg"), .5, {
                        scaleX: 0
                    }, {
                        scaleX: 1,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.el.classList.add("active")
                        }
                    }), "-=.6"),
                    n.add(TweenMax.staggerFromTo(this.el.querySelectorAll(".post_mask"), .3, {
                        scaleX: 1,
                        x: "0%"
                    }, {
                        scaleX: 0,
                        x: "100%",
                        ease: Cubic.easeInOut
                    }, .15), "-=.6"),
                    n.add(TweenMax.fromTo(this.el.querySelector(".squarebutton"), .3, {
                        force3D: !0,
                        scaleX: 0,
                        opacity: 0
                    }, {
                        force3D: !0,
                        scaleX: 1,
                        opacity: 1,
                        ease: Cubic.easeInOut
                    }), "-=.2"),
                    n.add(TweenMax.fromTo(this.prev, .3, {
                        opacity: 0,
                        y: -20
                    }, {
                        opacity: 1,
                        y: 0
                    }), "-=.3"),
                    n.add(TweenMax.fromTo(this.next, .3, {
                        opacity: 0,
                        y: 20
                    }, {
                        opacity: 1,
                        y: 0
                    }), "-=.3"),
                    this.resize()
                }
            }, {
                key: "hide",
                value: function() {
                    var e = this;
                    this.prev.removeEventListener("click", this.previousHandler),
                    this.next.removeEventListener("click", this.nextHandler),
                    this.closeButton.removeEventListener("click", this.closeButtonHandler),
                    window.removeEventListener("click", this.closeHandler);
                    var t = new TimelineMax;
                    t.add(TweenMax.fromTo(this.prev, .3, {
                        opacity: 1,
                        y: 0
                    }, {
                        opacity: 0,
                        y: 20
                    })),
                    t.add(TweenMax.fromTo(this.next, .3, {
                        opacity: 1,
                        y: 0
                    }, {
                        opacity: 0,
                        y: -20
                    }), "-=.3"),
                    t.add(TweenMax.fromTo(this.el.querySelector(".squarebutton"), .3, {
                        force3D: !0,
                        opacity: 1
                    }, {
                        force3D: !0,
                        opacity: 0,
                        ease: Cubic.easeInOut
                    }), "-=.3"),
                    t.add(TweenMax.staggerFromTo(this.el.querySelectorAll(".post_mask"), .2, {
                        scaleX: 0,
                        x: "0%"
                    }, {
                        scaleX: 1,
                        x: "0%",
                        ease: Cubic.easeInOut
                    }, .05), "-=.3"),
                    t.addCallback(function() {
                        e.el.classList.remove("active")
                    }),
                    t.add(TweenLite.fromTo(this.el.querySelector(".post_bg"), .3, {
                        scaleX: 1,
                        x: "0%"
                    }, {
                        scaleX: 0,
                        x: "100%",
                        ease: Cubic.easeInOut
                    })),
                    t.add(TweenLite.fromTo(this.el.querySelector(".post_container"), .5, {
                        x: "0%"
                    }, {
                        x: "20%",
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.remove()
                        }
                    }), "-=.5")
                }
            }, {
                key: "remove",
                value: function() {
                    this.container.removeChild(this.el),
                    g.default.off("resize", this.resizeHandler)
                }
            }, {
                key: "resize",
                value: function() {
                    var e = (2 * g.default.innerHeight / 3,
                    g.default.innerHeight)
                      , t = 16 * e / 9
                      , i = (g.default.innerWidth - t) / 2
                      , n = i + .69 * t
                      , r = 1 * e / 6;
                    _.default(this.el.querySelector(".post_container"), "top", r - 40),
                    _.default(this.el.querySelector(".post_container"), "left", n - 40)
                }
            }]),
            t
        }(p.default);
        i.default = x
    }
    , {
        App: 23,
        "blueimp-tmpl": 3,
        "data/DatasManager": 30,
        "dom-css": 55,
        "routing/Router": 39,
        "tiny-emitter": 17
    }],
    26: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , a = function() {
            function e() {
                n(this, e),
                this.el = document.querySelector(".year"),
                this.showed = !1,
                this.containers = [];
                for (var t = 0; 4 > t; t++) {
                    var i = document.createElement("div");
                    this.el.appendChild(i),
                    this.containers.push(i)
                }
                this.direction = 1,
                this.currentValue = void 0,
                this.currentDigits = [],
                this.values = []
            }
            return r(e, [{
                key: "show",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.showed || setTimeout(function() {
                        e.showed = !0,
                        e.el.classList.add("active")
                    }, 1e3 * t)
                }
            }, {
                key: "hide",
                value: function() {
                    this.showed && (this.showed = !1,
                    this.el.classList.remove("active"))
                }
            }, {
                key: "update",
                value: function(e) {
                    if (e = e.toString(),
                    e != this.currentValue) {
                        this.currentValue && (this.direction = parseInt(this.currentValue) > parseInt(e) ? 1 : -1),
                        this.currentValue = e;
                        for (var t = 0; 4 > t; t++)
                            e[t] != this.values[t] && (this.values[t] = e[t],
                            this.updateDigit(t, this.values[t]))
                    }
                }
            }, {
                key: "updateDigit",
                value: function(e, t) {
                    var i = this.containers[e]
                      , n = void 0;
                    this.currentDigits.length > e && (n = this.currentDigits[e]);
                    var r = document.createElement("div");
                    r.innerText = t,
                    i.appendChild(r),
                    n && TweenLite.to(n, .3, {
                        opacity: 0,
                        y: -100 * this.direction,
                        onCompleteParams: [n],
                        onComplete: function(e) {
                            e.parentNode.removeChild(e)
                        }
                    }),
                    TweenLite.fromTo(r, .3, {
                        opacity: 0,
                        y: 100 * this.direction
                    }, {
                        opacity: 1,
                        y: 0
                    }),
                    this.currentDigits[e] = r
                }
            }]),
            e
        }();
        i.default = a
    }
    , {}],
    27: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function o() {
            n(this, o),
            this.nbrOfCards = 250,
            this.espacement = 4.4,
            this.stepVertical = .6,
            this.radius = 30,
            this.colorInc = .01,
            this.backgroundColor = "#EEEEEE",
            this.fogColor = "#D5DFEB",
            this.fogColorSpiral = "#D5DFEB",
            this.animationRotation = !0,
            this.animationLight = !0,
            this.rotationSpeed = .003,
            this.shadow = !0,
            this.transparent = !0,
            this.transparentImage = !1,
            this.opacity = .5,
            this.opacityImage = .5,
            this.fog = !1,
            this.reflect = !1,
            this.reflectivity = .5,
            this.nearZoom = 25,
            this.farZoom = 175,
            this.nearDezoom = 160,
            this.farDezoom = 300,
            this.nearSpiralZoom = 20,
            this.farSpiralZoom = 45,
            this.nearSpiralDezoom = 150,
            this.farSpiralDezoom = 210,
            this.color = "#FF0000",
            this.specular = "#000000",
            this.emissive = "#E3E3E3",
            this.diffuse = "#707070",
            this.emissiveDezoomed = "#dcdcdc",
            this.diffuseDezoomed = "#707070",
            this.type = "plane",
            this.displaceSpeed = .5,
            this.gradientLength = .2,
            this.lightIntensity = 2,
            this.lightDistance = 80,
            this.lightDecay = 2,
            this.scaleX = 56.88888888,
            this.scaleY = 32,
            this.scaleZ = 1.1,
            this.cameraX = 0,
            this.cameraY = 0,
            this.cameraZ = 150,
            this.cameraRotationX = 0,
            this.cameraRotationY = 0,
            this.cameraRotationZ = 0,
            this.lookAtZero = !1,
            this.rotationX = 0,
            this.rotationY = 0,
            this.rotationZ = 0
        }
          , a = new r;
        i.default = a
    }
    , {}],
    28: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function o() {
            n(this, o),
            APP.dev && (this.gui = new dat.GUI({}),
            this.gui.close())
        }
          , a = new r;
        i.default = a.gui
    }
    , {}],
    29: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function a(e) {
            n(this, a),
            this.id = e,
            this.active = !0,
            this.name = document.querySelector('.filters_categories [data-id="' + this.id + '"] span').innerText
        };
        i.default = r
    }
    , {}],
    30: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        function s(e) {
            for (var t = e.concat(), i = 0; i < t.length; ++i)
                for (var n = i + 1; n < t.length; ++n)
                    t[i] === t[n] && t.splice(n--, 1);
            return t
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var l = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , c = e("custom/Conf")
          , h = n(c)
          , u = e("data/Item")
          , d = n(u)
          , p = e("data/Tag")
          , f = n(p)
          , m = e("data/Category")
          , v = n(m)
          , g = e("tiny-emitter")
          , y = n(g)
          , _ = e("routing/Router")
          , x = n(_)
          , b = function(e) {
            function t() {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
            }
            return o(t, e),
            l(t, [{
                key: "init",
                value: function(e) {
                    this.json = e,
                    h.default.nbrOfCards = this.json.length;
                    var t = []
                      , i = [];
                    this.items = [],
                    this.itemsAvailable = [],
                    this.tags = [],
                    this.categories = [],
                    this.allCategories = !0,
                    this.lg = this.json.length;
                    for (var n = void 0, r = 0; r < this.lg; r++)
                        n = new d.default(this.json[r],r),
                        this.items.push(n),
                        t = s(t.concat(this.json[r].tags)),
                        i = s(i.concat(this.json[r].categories));
                    for (var a = void 0, o = 0, l = t.length; l > o; o++)
                        a = new f.default(t[o]),
                        this.tags.push(a);
                    for (var c = void 0, u = 0, p = i.length; p > u; u++)
                        c = new v.default(i[u]),
                        this.categories.push(c);
                    this.updateItems()
                }
            }, {
                key: "updateItems",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0;
                    this.itemsAvailable = this.filterItems(this.items, this.tags, this.categories, !0),
                    e && this.emit("items-updated")
                }
            }, {
                key: "filterItems",
                value: function(e, t, i) {
                    for (var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : !0, r = [], a = void 0, o = 0; o < this.lg; o++)
                        a = e[o].isAvailable(t, i),
                        a && r.push(e[o]),
                        n && e[o].setIndex(r.length - 1);
                    return r
                }
            }, {
                key: "getAvailableItems",
                value: function() {
                    return this.itemsAvailable
                }
            }, {
                key: "getIndexFromId",
                value: function(e) {
                    for (var t = this.getAvailableItems(), i = 0, n = t.length; n > i; i++)
                        if (t[i].sortedId == e)
                            return i
                }
            }, {
                key: "getIdFromIndex",
                value: function(e) {
                    var t = this.getAvailableItems();
                    return t[e]
                }
            }, {
                key: "getItems",
                value: function() {
                    return this.items
                }
            }, {
                key: "getItem",
                value: function(e) {
                    return this.items[e]
                }
            }, {
                key: "getNext",
                value: function(e) {
                    for (var t = this.getAvailableItems(), i = 0, n = t.length; n > i; i++)
                        if (t[i].sortedId == e)
                            return i < t.length - 1 ? t[i + 1] : -1
                }
            }, {
                key: "getPrevious",
                value: function(e) {
                    for (var t = this.getAvailableItems(), i = 0, n = t.length; n > i; i++)
                        if (t[i].sortedId == e)
                            return i > 0 ? t[i - 1] : -1
                }
            }, {
                key: "getItemByRoute",
                value: function() {
                    for (var e = x.default.currentRoute, t = e.params.id, i = 0, n = this.items.length; n > i; i++)
                        if (this.items[i].slug == t)
                            return this.getItem(i)
                }
            }, {
                key: "getCategories",
                value: function() {
                    return this.categories
                }
            }, {
                key: "getCategoriesText",
                value: function(e) {
                    for (var t = "", i = 0, n = e.length; n > i; i++)
                        t += this.getCategoryBiId(e[i]).name + " - ";
                    return t.substring(0, t.length - 3)
                }
            }, {
                key: "getCategoryBiId",
                value: function(e) {
                    for (var t = 0, i = this.categories.length; i > t; t++)
                        if (this.categories[t].id == e)
                            return this.categories[t]
                }
            }, {
                key: "getTagsAvailable",
                value: function() {
                    for (var e = [], t = 0, i = this.tags.length; i > t; t++)
                        this.tags[t].active && e.push(this.tags[t]);
                    return e
                }
            }, {
                key: "getCategoriesAvailable",
                value: function() {
                    for (var e = [], t = 0, i = this.categories.length; i > t; t++)
                        this.categories[t].active && e.push(this.categories[t]);
                    return e
                }
            }, {
                key: "toggleTag",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0
                      , i = this.getTagsAvailable();
                    if (-1 == e)
                        this.toggleAllTags();
                    else if (1 == i.length && i[0].id == e)
                        ;
                    else {
                        for (var n = 0, r = this.tags.length; r > n; n++)
                            if (this.tags[n].id == e) {
                                this.tags[n].active = !this.tags[n].active;
                                break
                            }
                        this.updateItems(t)
                    }
                }
            }, {
                key: "selectTag",
                value: function(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0, i = 0, n = this.tags.length; n > i; i++)
                        this.tags[i].active = this.tags[i].id == e ? !0 : !1;
                    this.updateItems(t)
                }
            }, {
                key: "toggleAllTags",
                value: function() {
                    for (var e = 0, t = this.tags.length; t > e; e++)
                        this.tags[e].active = !0;
                    this.updateItems()
                }
            }, {
                key: "toggleCategory",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0
                      , i = this.getCategoriesAvailable();
                    if (1 == i.length && i[0].id == e || -1 == e)
                        this.toggleAllCategories();
                    else {
                        for (var n = 0, r = this.categories.length; r > n; n++)
                            this.categories[n].active = e == this.categories[n].id ? !0 : !1;
                        this.allCategories = !1,
                        this.updateItems(t)
                    }
                }
            }, {
                key: "toggleAllCategories",
                value: function() {
                    for (var e = 0, t = this.categories.length; t > e; e++)
                        this.categories[e].active = !0;
                    this.allCategories = !0,
                    this.updateItems()
                }
            }, {
                key: "hoverCategory",
                value: function(e) {
                    for (var t = this.getItemsByCategoryId(e, !1), i = 0, n = t.length; n > i; i++)
                        t[i].highlight()
                }
            }, {
                key: "houtCategory",
                value: function(e) {
                    for (var t = this.getItemsByCategoryId(e, !1), i = 0, n = t.length; n > i; i++)
                        t[i].outlight()
                }
            }, {
                key: "hoverTag",
                value: function(e) {
                    for (var t = this.getItemsByTagId(e, !1), i = 0, n = t.length; n > i; i++)
                        t[i].highlight()
                }
            }, {
                key: "houtTag",
                value: function(e) {
                    for (var t = this.getItemsByTagId(e, !1), i = 0, n = t.length; n > i; i++)
                        t[i].outlight()
                }
            }, {
                key: "getItemsByCategoryId",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0
                      , i = void 0;
                    i = t ? this.getAvailableItems() : this.items;
                    for (var n = [], r = 0, a = this.categories.length; a > r; r++)
                        if (this.categories[r].id == parseInt(e))
                            for (var o = 0, s = i.length; s > o; o++)
                                i[o].isCategoryAvailable(this.categories[r]) && i[o].atLeastOneTagAvailable(this.tags) && n.push(i[o]);
                    return n
                }
            }, {
                key: "getItemsByTagId",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0
                      , i = void 0;
                    i = t ? this.getAvailableItems() : this.items;
                    for (var n = [], r = 0, a = this.tags.length; a > r; r++)
                        if (this.tags[r].id == parseInt(e))
                            for (var o = 0, s = i.length; s > o; o++)
                                i[o].isTagAvailable(this.tags[r]) && n.push(i[o]);
                    return n
                }
            }, {
                key: "isCategoryActive",
                value: function(e) {
                    if (this.allCategories)
                        return !1;
                    for (var t = 0, i = this.categories.length; i > t; t++)
                        if (this.categories[t].id == parseInt(e))
                            return this.categories[t].active
                }
            }, {
                key: "isTagActive",
                value: function(e) {
                    for (var t = 0, i = this.tags.length; i > t; t++)
                        if (this.tags[t].id == parseInt(e))
                            return this.tags[t].active
                }
            }]),
            t
        }(y.default)
          , w = new b;
        i.default = w
    }
    , {
        "custom/Conf": 27,
        "data/Category": 29,
        "data/Item": 31,
        "data/Tag": 32,
        "routing/Router": 39,
        "tiny-emitter": 17
    }],
    31: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        function s(e) {
            var t = l(e);
            return d[t.getMonth()] + " " + t.getFullYear()
        }
        function l(e) {
            var t = e.split("/");
            return new Date(t[2],t[1] - 1,t[0])
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , h = e("tiny-emitter")
          , u = n(h)
          , d = ["jan", "fev", "mar", "avr", "mai", "juin", "juil", "aout", "sept", "oct", "nov", "dec"]
          , p = function(e) {
            function t(e, i) {
                r(this, t);
                var n = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return n.active = !0,
                n.sortedId = i,
                n.index = i,
                n.activeValue = 1,
                n.hoverValue = 0,
                n.openValue = 0,
                n.hdValue = 0,
                n.highlightValue = 0,
                n.loadedValue = 0,
                n.needsIndexUpdate = !1,
                n.needsActiveUpdate = !1,
                n.needsHoverUpdate = !1,
                n.needsOpenUpdate = !1,
                n.needsHighlightUpdate = !1,
                n.needsLoadedUpdate = !1,
                Object.assign(n, e),
                n.formatedDate = "",
                n.formatedDate = s(n.start),
                "" != n.end && (n.formatedDate += " — " + s(n.end)),
                n.year = l(n.start).getFullYear(),
                n
            }
            return o(t, e),
            c(t, [{
                key: "isAvailable",
                value: function(e, t) {
                    var i = this
                      , n = this.atLeastOneTagAvailable(e)
                      , r = this.atLeastOneCategoryAvailable(t);
                    return n && r ? this.active || (this.active = !0,
                    this.needsActiveUpdate = !0,
                    this.activeTween && this.activeTween.kill(),
                    this.activeTween = TweenLite.to(this, 1.6, {
                        delay: .4,
                        activeValue: 1,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            i.needsActiveUpdate = !1
                        }
                    })) : this.active && (this.active = !1,
                    this.needsActiveUpdate = !0,
                    this.activeTween && this.activeTween.kill(),
                    this.activeTween = TweenLite.to(this, 1.6, {
                        activeValue: 0,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            i.needsActiveUpdate = !1
                        }
                    })),
                    this.active
                }
            }, {
                key: "atLeastOneTagAvailable",
                value: function(e) {
                    for (var t = 0, i = e.length; i > t; t++)
                        if (e[t].active && this.isTagAvailable(e[t]))
                            return !0;
                    return !1
                }
            }, {
                key: "atLeastOneCategoryAvailable",
                value: function(e) {
                    for (var t = 0, i = e.length; i > t; t++)
                        if (e[t].active && this.isCategoryAvailable(e[t]))
                            return !0;
                    return !1
                }
            }, {
                key: "setIndex",
                value: function(e) {
                    var t = this;
                    if (this.index != e) {
                        this.needsIndexUpdate = !0;
                        var i = void 0;
                        i = this.index < e ? -1 : 1;
                        var n = 2;
                        TweenLite.to(this, n, {
                            index: e,
                            ease: Cubic.easeInOut,
                            onComplete: function() {
                                t.needsIndexUpdate = !1
                            }
                        })
                    }
                }
            }, {
                key: "isCategoryAvailable",
                value: function(e) {
                    return this.categories.length > 0 ? -1 != this.categories.indexOf(e.id) ? !0 : !1 : !0
                }
            }, {
                key: "isTagAvailable",
                value: function(e) {
                    return this.tags.length > 0 ? -1 != this.tags.indexOf(e.id) ? !0 : !1 : !0
                }
            }, {
                key: "hd",
                value: function(e) {
                    this.hdValue = e,
                    this.needsHdUpdate = !0
                }
            }, {
                key: "hover",
                value: function() {
                    var e = this;
                    this.needsHoverUpdate = !0,
                    this.hoverTween && this.hoverTween.kill(),
                    this.hoverTween = TweenLite.to(this, .3, {
                        hoverValue: 1,
                        ease: Cubic.easeOut,
                        onComplete: function() {
                            e.needsHoverUpdate = !1
                        }
                    })
                }
            }, {
                key: "hout",
                value: function() {
                    var e = this;
                    this.needsHoverUpdate = !0,
                    this.hoverTween && this.hoverTween.kill(),
                    this.hoverTween = TweenLite.to(this, .3, {
                        hoverValue: 0,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.needsHoverUpdate = !1
                        }
                    })
                }
            }, {
                key: "highlight",
                value: function() {
                    var e = this;
                    this.needsHighlightUpdate = !0,
                    this.highlightTween && this.highlightTween.kill(),
                    this.highlightTween = TweenLite.to(this, .6, {
                        highlightValue: .45,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.needsHighlightUpdate = !1
                        }
                    })
                }
            }, {
                key: "outlight",
                value: function() {
                    var e = this;
                    this.needsHighlightUpdate = !0,
                    this.highlightTween && this.highlightTween.kill(),
                    this.highlightTween = TweenLite.to(this, .6, {
                        highlightValue: 0,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.needsHighlightUpdate = !1
                        }
                    })
                }
            }, {
                key: "open",
                value: function() {
                    var e = this;
                    this.needsOpenUpdate = !0,
                    TweenLite.to(this, 1, {
                        openValue: 1,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.needsOpenUpdate = !1,
                            e.emit("opened")
                        }
                    })
                }
            }, {
                key: "close",
                value: function() {
                    var e = this;
                    this.needsOpenUpdate = !0,
                    TweenLite.to(this, .95, {
                        openValue: 0,
                        ease: Cubic.easeInOut,
                        onComplete: function() {
                            e.needsOpenUpdate = !1,
                            e.emit("closed")
                        }
                    })
                }
            }]),
            t
        }(u.default);
        i.default = p
    }
    , {
        "tiny-emitter": 17
    }],
    32: [function(e, t, i) {
        "use strict";
        function n(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function a(e) {
            n(this, a),
            this.id = e,
            this.active = !0
        };
        i.default = r
    }
    , {}],
    33: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function o(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function s(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var l = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , c = e("three")
          , h = r(c)
          , u = e("tiny-emitter")
          , d = n(u)
          , p = e("webgl/detectCompressedTexture")
          , f = n(p)
          , m = e("webgl/DDSLoader")
          , v = (n(m),
        e("webgl/PVRLoader"))
          , g = (n(v),
        function(e) {
            function t() {
                a(this, t);
                var e = o(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
                  , i = document.querySelector("canvas")
                  , n = i.getContext("webgl") || i.getContext("experimental-webgl");
                return e.format = f.default(n),
                e.quality = "high",
                e.loadingManager = new h.LoadingManager,
                e.loadingManager.onProgress = function(t, i, n) {
                    var r = e.getItemFromUrl(t);
                    r.loaded = !0,
                    e.emit("loaded-" + r.name),
                    i == n && e.loaded(r.name)
                }
                ,
                e.loadingManager.onLoad = function() {}
                ,
                e.loadingManager.onError = function(e) {
                    console.error("Texture", e)
                }
                ,
                e.loader = new h.TextureLoader(e.loadingManager),
                "s3tc" == e.format ? e.compressedloader = new h.DDSLoader(e.loadingManager) : "pvrtc" == e.format && (e.compressedloader = new h.PVRLoader(e.loadingManager)),
                e.textures = [],
                e
            }
            return s(t, e),
            l(t, [{
                key: "setQuality",
                value: function(e) {
                    this.quality = e
                }
            }, {
                key: "load",
                value: function(e) {
                    for (var t = void 0, i = 0, n = e.length; n > i; i++)
                        this.isCache(e[i].name) || (e[i].loaded = !1,
                        this.textures.push(e[i]),
                        t = e[i].url,
                        "compress" != e[i].type || "s3tc" != this.format && "pvrtc" != this.format ? this.textures[this.textures.length - 1].texture = this.loader.load(t) : (t = this.formatCompress(t),
                        this.textures[this.textures.length - 1].texture = this.compressedloader.load(t)))
                }
            }, {
                key: "add",
                value: function(e, t) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : !0
                      , n = t.replace("https://inra.dev", "");
                    if (this.isCache(e)) {
                        var r = this.getItem(e);
                        r.dispatch = i,
                        this.loaded(e)
                    } else
                        this.load([{
                            name: e,
                            url: n,
                            dispatch: i,
                            loaded: !1
                        }])
                }
            }, {
                key: "addHD",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !0
                      , i = void 0;
                    switch (this.quality) {
                    case "low":
                        i = e.imageLow;
                        break;
                    case "med":
                        i = e.imageMed;
                        break;
                    case "high":
                        i = e.image
                    }
                    this.add("hd" + e.sortedId, i, t)
                }
            }, {
                key: "loaded",
                value: function(e) {
                    var t = this.getItem(e);
                    t.dispatch && this.emit("loaded", e)
                }
            }, {
                key: "getItemFromUrl",
                value: function(e) {
                    var t = void 0;
                    return this.textures.forEach(function(i) {
                        i.url == e && (t = i)
                    }),
                    t
                }
            }, {
                key: "getItem",
                value: function(e) {
                    var t = void 0;
                    return this.textures.forEach(function(i) {
                        i.name == e && (t = i)
                    }),
                    t
                }
            }, {
                key: "get",
                value: function(e) {
                    var t = this.getItem(e);
                    return t.texture
                }
            }, {
                key: "isCache",
                value: function(e) {
                    for (var t = 0, i = this.textures.length; i > t; t++)
                        if (this.textures[t].name == e)
                            return !0;
                    return !1
                }
            }, {
                key: "formatCompress",
                value: function(e) {
                    switch (this.format) {
                    case "s3tc":
                        e = e.replace(".jpg", "-" + this.format + ".dds"),
                        e = e.replace(".png", "-" + this.format + ".dds");
                        break;
                    case "pvrtc":
                        e = e.replace(".jpg", "-" + this.format + "1.pvr"),
                        e = e.replace(".png", "-" + this.format + "1.pvr")
                    }
                    return e
                }
            }]),
            t
        }(d.default))
          , y = new g;
        i.default = y
    }
    , {
        three: 16,
        "tiny-emitter": 17,
        "webgl/DDSLoader": 45,
        "webgl/PVRLoader": 49,
        "webgl/detectCompressedTexture": 53
    }],
    34: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("events")
          , c = e("pxloader")
          , h = n(c)
          , u = e("pxloader/PxLoaderData")
          , d = n(u)
          , p = e("pxloader/PxLoaderImage")
          , f = n(p)
          , m = function(e) {
            function t() {
                r(this, t);
                var e = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return e.items = [],
                e.loader = new h.default,
                e.loader.addProgressListener(e.progressHandler.bind(e)),
                e.loader.addCompletionListener(e.completeHandler.bind(e)),
                e
            }
            return o(t, e),
            s(t, [{
                key: "start",
                value: function() {
                    this.loader.start()
                }
            }, {
                key: "addItem",
                value: function(e) {
                    var t = void 0;
                    switch (e.type) {
                    case "image":
                        t = new f.default(e.src,e.id);
                        break;
                    case "json":
                        t = new d.default(e.src,e.id)
                    }
                    t.dataType = e.type,
                    t.src = e.src,
                    t.id = e.id,
                    t && this.loader.add(t)
                }
            }, {
                key: "getItem",
                value: function(e) {
                    return this.items[e]
                }
            }, {
                key: "progressHandler",
                value: function(e) {
                    switch (e.resource.dataType) {
                    case "image":
                        this.items[e.resource.id] = e.resource.img;
                        break;
                    case "json":
                        this.items[e.resource.id] = JSON.parse(e.resource.xhr.responseText)
                    }
                }
            }, {
                key: "completeHandler",
                value: function() {
                    this.emit("complete", {
                        loader: this
                    })
                }
            }]),
            t
        }(l.EventEmitter);
        i.default = m
    }
    , {
        events: 4,
        pxloader: 12,
        "pxloader/PxLoaderData": 13,
        "pxloader/PxLoaderImage": 14
    }],
    35: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = function m(e, t, i) {
            null === e && (e = Function.prototype);
            var n = Object.getOwnPropertyDescriptor(e, t);
            if (void 0 === n) {
                var r = Object.getPrototypeOf(e);
                return null === r ? void 0 : m(r, t, i)
            }
            if ("value"in n)
                return n.value;
            var a = n.get;
            return void 0 === a ? void 0 : a.call(i)
        }
          , c = e("./Page")
          , h = n(c)
          , u = e("content/Content")
          , d = (n(u),
        e("ui/UI"))
          , p = n(d)
          , f = function(e) {
            function t(e) {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e))
            }
            return o(t, e),
            s(t, [{
                key: "showed",
                value: function() {
                    l(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "showed", this).call(this),
                    p.default.showFilters()
                }
            }]),
            t
        }(h.default);
        i.default = f
    }
    , {
        "./Page": 37,
        "content/Content": 24,
        "ui/UI": 40
    }],
    36: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = function S(e, t, i) {
            null === e && (e = Function.prototype);
            var n = Object.getOwnPropertyDescriptor(e, t);
            if (void 0 === n) {
                var r = Object.getPrototypeOf(e);
                return null === r ? void 0 : S(r, t, i)
            }
            if ("value"in n)
                return n.value;
            var a = n.get;
            return void 0 === a ? void 0 : a.call(i)
        }
          , c = e("./Page")
          , h = n(c)
          , u = e("data/DatasManager")
          , d = n(u)
          , p = e("routing/Router")
          , f = n(p)
          , m = e("webgl/ThreeD")
          , v = n(m)
          , g = e("App")
          , y = (n(g),
        e("ui/UI"))
          , _ = n(y)
          , x = e("content/Content")
          , b = (n(x),
        !1)
          , w = void 0
          , T = void 0
          , M = void 0
          , E = function(e) {
            function t(e) {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e))
            }
            return o(t, e),
            s(t, [{
                key: "init",
                value: function() {
                    this.el = document.querySelector(".intro"),
                    w = function(e) {
                        e.currentTarget.dataset.id && (d.default.houtTag(e.currentTarget.dataset.id),
                        d.default.selectTag(e.currentTarget.dataset.id),
                        b = !0),
                        f.default.to("/", !0)
                    }
                    ,
                    T = function(e) {
                        d.default.hoverTag(e.currentTarget.dataset.id)
                    }
                    ,
                    M = function(e) {
                        d.default.houtTag(e.currentTarget.dataset.id)
                    }
                    ,
                    this.allLink = this.el.querySelector(".button"),
                    this.allLink.addEventListener("click", w),
                    this.tagsLink = this.el.querySelectorAll("li");
                    for (var e = 0, t = this.tagsLink.length; t > e; e++)
                        this.tagsLink[e].addEventListener("click", w),
                        this.tagsLink[e].addEventListener("mouseenter", T),
                        this.tagsLink[e].addEventListener("mouseleave", M);
                    this._updateLinksCount()
                }
            }, {
                key: "show",
                value: function() {
                    var e = this;
                    this.el.classList.add("active");
                    var t = new TimelineMax({
                        delay: 2.5,
                        onComplete: function() {
                            e.showed()
                        }
                    });
                    t.to(this.el.querySelector(".intro_logo"), .6, {
                        opacity: 1,
                        ease: Cubic.easeInOut
                    }),
                    t.to(this.el.querySelectorAll("p"), .3, {
                        opacity: 1,
                        ease: Cubic.easeInOut
                    }, "-=.2"),
                    t.staggerTo(this.el.querySelectorAll("li"), .3, {
                        autoAlpha: 1,
                        ease: Cubic.easeInOut
                    }, .1, "-=.2"),
                    t.addCallback(function() {
                        e.el.querySelector(".button").classList.add("active")
                    })
                }
            }, {
                key: "hide",
                value: function() {
                    var e = this;
                    this.allLink.removeEventListener("click", w);
                    for (var t = 0, i = this.tagsLink.length; i > t; t++)
                        this.tagsLink[t].removeEventListener("click", w),
                        this.tagsLink[t].removeEventListener("mouseenter", T),
                        this.tagsLink[t].removeEventListener("mouseleave", M);
                    var n = new TimelineMax;
                    n.to(this.el, .5, {
                        opacity: 0,
                        ease: Cubic.easeInOut
                    }),
                    n.staggerTo(this.el.querySelectorAll("li"), .2, {
                        opacity: 0,
                        ease: Cubic.easeInOut
                    }, .1, "-=.5"),
                    n.addCallback(function() {
                        e.el.querySelector(".button").classList.remove("active")
                    }, "-=.3");
                    var r = 0;
                    b && (r = 700),
                    setTimeout(function() {
                        v.default.zoom(!0),
                        setTimeout(function() {
                            _.default.showFilters(),
                            e.hided()
                        }, 1500)
                    }, r)
                }
            }, {
                key: "hided",
                value: function() {
                    l(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "hided", this).call(this),
                    this.el.parentNode.removeChild(this.el)
                }
            }, {
                key: "_updateLinksCount",
                value: function() {
                    for (var e = void 0, t = void 0, i = 0, n = this.tagsLink.length; n > i; i++)
                        e = this.tagsLink[i],
                        -1 != parseInt(e.dataset.id) && (t = d.default.getItemsByTagId(e.dataset.id).length,
                        e.querySelector("span").innerText = 0 == t ? "" : t)
                }
            }]),
            t
        }(h.default);
        i.default = E
    }
    , {
        "./Page": 37,
        App: 23,
        "content/Content": 24,
        "data/DatasManager": 30,
        "routing/Router": 39,
        "ui/UI": 40,
        "webgl/ThreeD": 51
    }],
    37: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("tiny-emitter")
          , c = n(l)
          , h = function(e) {
            function t(e) {
                r(this, t);
                var i = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return i._route = e,
                i
            }
            return o(t, e),
            s(t, [{
                key: "init",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1;
                    this.isFirst = e
                }
            }, {
                key: "load",
                value: function() {
                    this.show()
                }
            }, {
                key: "show",
                value: function() {
                    this.showed()
                }
            }, {
                key: "showed",
                value: function() {
                    this.emit("showed")
                }
            }, {
                key: "hide",
                value: function() {
                    this.hided()
                }
            }, {
                key: "hided",
                value: function() {
                    this.emit("hided")
                }
            }]),
            t
        }(c.default);
        i.default = h
    }
    , {
        "tiny-emitter": 17
    }],
    38: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = function A(e, t, i) {
            null === e && (e = Function.prototype);
            var n = Object.getOwnPropertyDescriptor(e, t);
            if (void 0 === n) {
                var r = Object.getPrototypeOf(e);
                return null === r ? void 0 : A(r, t, i)
            }
            if ("value"in n)
                return n.value;
            var a = n.get;
            return void 0 === a ? void 0 : a.call(i)
        }
          , c = e("./Page")
          , h = n(c)
          , u = e("content/Content")
          , d = n(u)
          , p = e("App")
          , f = (n(p),
        e("webgl/Carrousel"))
          , m = n(f)
          , v = e("data/DatasManager")
          , g = n(v)
          , y = e("data/TexturesManager")
          , _ = n(y)
          , x = e("ui/UI")
          , b = n(x)
          , w = e("content/Post")
          , T = n(w)
          , M = e("routing/Router")
          , E = n(M)
          , S = function(e) {
            function t(e) {
                r(this, t);
                var i = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
                return i.item = g.default.getItemByRoute(),
                d.default.disableScroll(),
                i
            }
            return o(t, e),
            s(t, [{
                key: "load",
                value: function() {
                    _.default.addHD(this.item),
                    this.show()
                }
            }, {
                key: "show",
                value: function() {
                    var e = this;
                    this.isFirst ? d.default.scrollToId(this.item.sortedId, 0) : d.default.scrollToId(this.item.sortedId, .3),
                    d.default.hide(),
                    b.default.hideFilters();
                    var t = g.default.getPrevious(this.item.sortedId);
                    -1 != t && _.default.addHD(t, !1);
                    var i = g.default.getNext(this.item.sortedId);
                    -1 != i && _.default.addHD(i, !1),
                    m.default.once("opened", function() {
                        e.showed()
                    }),
                    m.default.open(this.item.sortedId),
                    this.post = new T.default(this.item),
                    this.post.once("close", function() {
                        E.default.to("/")
                    }),
                    this.post.show()
                }
            }, {
                key: "hide",
                value: function() {
                    var e = this;
                    this.post.hide(),
                    m.default.once("closed", function() {
                        e.hided()
                    }),
                    m.default.close(this.item.sortedId)
                }
            }, {
                key: "hided",
                value: function() {
                    l(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "hided", this).call(this)
                }
            }]),
            t
        }(h.default);
        i.default = S
    }
    , {
        "./Page": 37,
        App: 23,
        "content/Content": 24,
        "content/Post": 25,
        "data/DatasManager": 30,
        "data/TexturesManager": 33,
        "routing/Router": 39,
        "ui/UI": 40,
        "webgl/Carrousel": 43
    }],
    39: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("page")
          , c = n(l)
          , h = e("tiny-emitter")
          , u = n(h)
          , d = e("data/DatasManager")
          , p = n(d)
          , f = !0
          , m = function(e) {
            function t() {
                return r(this, t),
                a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
            }
            return o(t, e),
            s(t, [{
                key: "start",
                value: function() {
                    this._isChanging = !1,
                    c.default.base(APP.baseurl),
                    c.default("/", this.callback.bind(this, "home")),
                    c.default("/:id/", this.callback.bind(this, "post")),
                    c.default("*", this.callback.bind(this, "notfound")),
                    c.default({
                        click: !0,
                        popstate: !0,
                        dispatch: !0,
                        hashbang: !1,
                        decodeURLComponents: !0
                    })
                }
            }, {
                key: "callback",
                value: function(e, t) {
                    f && "home" == e && (e = "intro"),
                    f = !1,
                    this.update(e, t)
                }
            }, {
                key: "update",
                value: function(e, t) {
                    if (!this._isChanging) {
                        this._isChanging = !0;
                        var i = !1;
                        "post" == this.currentType && "post" == e && (i = !0),
                        e && (this.currentType = e),
                        t && (this.currentRoute = t),
                        this.emit("update", {
                            type: this.currentType,
                            route: this.currentRoute,
                            transition: i
                        })
                    }
                }
            }, {
                key: "to",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1;
                    this._isChanging || (t ? c.default.replace(e) : c.default(e))
                }
            }, {
                key: "toPost",
                value: function(e) {
                    var t = p.default.getItem(e);
                    this.toItem(t)
                }
            }, {
                key: "toItem",
                value: function(e) {
                    this.to("/" + e.slug + "/")
                }
            }, {
                key: "replace",
                value: function(e) {
                    var t = document.createElement("a");
                    t.href = e,
                    t.pathname,
                    c.default.show(t.pathname, null, !1)
                }
            }, {
                key: "getOccasion",
                value: function() {
                    return this.currentRoute.params.id
                }
            }, {
                key: "changed",
                value: function() {
                    this._isChanging = !1
                }
            }]),
            t
        }(u.default);
        i.default = new m
    }
    , {
        "data/DatasManager": 30,
        page: 9,
        "tiny-emitter": 17
    }],
    40: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function a(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function o(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , l = e("data/DatasManager")
          , c = n(l)
          , h = e("tiny-emitter")
          , u = n(h)
          , d = e("App")
          , p = (n(d),
        e("routing/Router"))
          , f = (n(p),
        e("webgl/ThreeD"))
          , m = n(f)
          , v = e("content/Content")
          , g = n(v)
          , y = function(e) {
            function t() {
                r(this, t);
                var e = a(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return e.filters = document.querySelector(".filters"),
                e.logo = document.querySelector(".logo"),
                e.logo.addEventListener("click", function() {}),
                e.filtersSidebar = e.filters.querySelector(".filters_sidebar"),
                e.filtersToggle = e.filters.querySelector(".squarebutton"),
                e.filtersMore = e.filters.querySelector(".filters_more"),
                e.filtersTagContainer = e.filters.querySelector(".filters_tags"),
                e.filtersTags = e.filtersTagContainer.querySelectorAll("li"),
                e.filtersCategoryContainer = e.filters.querySelector(".filters_categories"),
                e.filtersCategories = e.filtersCategoryContainer.querySelectorAll("li"),
                e.creditsOpened = !1,
                e.credits = e.filters.querySelector(".credits"),
                e.creditsButton = e.filters.querySelector(".filters_credits"),
                e.creditsBackButton = e.filters.querySelector(".credits_back"),
                e.creditsButton.addEventListener("click", function() {
                    e.creditsOpened ? e.closeCredits() : e.openCredits()
                }),
                e.creditsBackButton.addEventListener("click", function() {
                    e.creditsOpened = !1,
                    e.credits.classList.remove("active")
                }),
                e.filtersOpened = !1,
                e.soundEnabled = !0,
                e.isOpening = !1,
                e.toggleFilterHandler = function() {
                    e.isOpening || (e.isOpening = !0,
                    e.filtersOpened ? e.closeFilters() : e.openFilters())
                }
                ,
                e.clickoutsideHandler = function(t) {
                    e.filters.contains(t.target) || document.querySelector(".dg.ac") && document.querySelector(".dg.ac").contains(t.target) || e.closeFilters()
                }
                ,
                e
            }
            return o(t, e),
            s(t, [{
                key: "init",
                value: function() {
                    var e = this;
                    c.default.on("items-updated", function() {
                        e.updateMenu()
                    }),
                    this.enableInteraction()
                }
            }, {
                key: "showFilters",
                value: function() {
                    this.filters.classList.add("active"),
                    this.logo.style.opacity = 1
                }
            }, {
                key: "hideFilters",
                value: function() {
                    this.filters.classList.remove("active")
                }
            }, {
                key: "openFilters",
                value: function() {
                    var e = this;
                    this.filtersOpened || (this.filtersOpened = !0,
                    m.default.dezoom(),
                    g.default.hide(!0),
                    g.default.stopScroll(),
                    setTimeout(function() {
                        e.filtersSidebar.classList.add("active"),
                        e.filtersMore.classList.add("active"),
                        e.filtersToggle.classList.add("active"),
                        m.default.moveLeft(),
                        window.addEventListener("click", e.clickoutsideHandler),
                        e.isOpening = !1
                    }, 200))
                }
            }, {
                key: "closeFilters",
                value: function() {
                    this.filtersOpened && (this.filtersOpened = !1,
                    m.default.zoom(),
                    m.default.moveRight(),
                    this.closeCredits(),
                    window.removeEventListener("click", this.clickoutsideHandler),
                    this.filtersSidebar.classList.remove("active"),
                    this.filtersToggle.classList.remove("active"),
                    this.filtersMore.classList.remove("active"),
                    this.isOpening = !1)
                }
            }, {
                key: "openCredits",
                value: function() {
                    this.creditsOpened || (this.creditsOpened = !0,
                    this.credits.classList.add("active"))
                }
            }, {
                key: "closeCredits",
                value: function() {
                    this.creditsOpened && (this.creditsOpened = !1,
                    this.credits.classList.remove("active"))
                }
            }, {
                key: "updateMenu",
                value: function() {
                    for (var e = void 0, t = 0, i = this.filtersTags.length; i > t; t++)
                        -1 != parseInt(this.filtersTags[t].dataset.id) && (e = c.default.getItemsByTagId(this.filtersTags[t].dataset.id).length,
                        this.filtersTags[t].querySelector("span").innerText = 0 == e ? "" : e,
                        c.default.isTagActive(this.filtersTags[t].dataset.id) ? this.filtersTags[t].classList.add("active") : this.filtersTags[t].classList.remove("active"));
                    for (var n = 0, r = this.filtersCategories.length; r > n; n++)
                        c.default.isCategoryActive(this.filtersCategories[n].dataset.id) ? this.filtersCategories[n].classList.add("active") : this.filtersCategories[n].classList.remove("active");
                    c.default.allCategories ? this.filtersCategoryContainer.classList.remove("selected") : this.filtersCategoryContainer.classList.add("selected")
                }
            }, {
                key: "enableInteraction",
                value: function() {
                    var e = this;
                    this.filtersToggle.addEventListener("click", this.toggleFilterHandler);
                    for (var t = 0, i = this.filtersTags.length; i > t; t++)
                        this.filtersTags[t].addEventListener("click", function(t) {
                            c.default.toggleTag(t.currentTarget.dataset.id),
                            e.filtersOpened || m.default.forceDezoomZoom()
                        }),
                        this.filtersTags[t].addEventListener("mouseenter", function(e) {
                            c.default.hoverTag(e.currentTarget.dataset.id)
                        }),
                        this.filtersTags[t].addEventListener("mouseleave", function(e) {
                            c.default.houtTag(e.currentTarget.dataset.id)
                        });
                    for (var n = 0, r = this.filtersCategories.length; r > n; n++)
                        this.filtersCategories[n].addEventListener("click", function(e) {
                            c.default.toggleCategory(e.currentTarget.dataset.id)
                        }),
                        this.filtersCategories[n].addEventListener("mouseenter", function(t) {
                            c.default.hoverCategory(t.currentTarget.dataset.id),
                            e.filtersCategoryContainer.classList.add("selected")
                        }),
                        this.filtersCategories[n].addEventListener("mouseleave", function(t) {
                            c.default.houtCategory(t.currentTarget.dataset.id),
                            e.filtersCategoryContainer.classList.remove("selected")
                        })
                }
            }, {
                key: "disableInteraction",
                value: function() {
                    this.filtersToggle.removeEventListener("click", this.toggleFilterHandler)
                }
            }]),
            t
        }(u.default)
          , _ = new y;
        i.default = _
    }
    , {
        App: 23,
        "content/Content": 24,
        "data/DatasManager": 30,
        "routing/Router": 39,
        "tiny-emitter": 17,
        "webgl/ThreeD": 51
    }],
    41: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i,
            e
        }
        function o(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function s(e) {
            h.Curve.call(this),
            this.scale = void 0 === e ? 1 : e
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var l = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , c = e("three")
          , h = r(c)
          , u = e("webgl/ThreeD")
          , d = n(u)
          , p = e("custom/Conf")
          , f = n(p)
          , m = e("data/TexturesManager")
          , v = n(m)
          , g = e("glslify")
          , y = (n(g),
        e("content/Content"))
          , _ = (n(y),
        e("custom/GUI"))
          , x = n(_)
          , b = "#define GLSLIFY 1\nuniform float gradientLength;\n\nvarying float vGradientLength;\nvarying float vGradientMultiplier;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n  vGradientLength = 1. - gradientLength;\n  vGradientMultiplier = 1. / gradientLength;\n\n  #include <uv_vertex>\n  #include <uv2_vertex>\n  #include <color_vertex>\n  #include <skinbase_vertex>\n\n  #ifdef USE_ENVMAP\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n\n  #endif\n\n  #include <begin_vertex>\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n\n  #include <worldpos_vertex>\n  #include <clipping_planes_vertex>\n  #include <envmap_vertex>\n  #include <fog_vertex>\n\n}".replace("#define GLSLIFY 1", "")
          , w = "#define GLSLIFY 1\nuniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 bgColor;\nuniform float gradientLength;\nuniform float colorSwitch;\n\nuniform float time;\nuniform sampler2D displacement;\nuniform sampler2D map2;\n\nvarying float vGradientLength;\nvarying float vGradientMultiplier;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n  #include <clipping_planes_fragment>\n\n  vec4 diffuseColor = vec4( diffuse, opacity );\n\n  #include <logdepthbuf_fragment>\n    \n    vec2 newUv = vUv;\n    newUv.y += time / 1000.;\n\n    float displaceR = texture2D( displacement, newUv ).r;\n    vec2 displaceUV = vec2( (vUv.x + displaceR / 5.)/1.2, vUv.y + displaceR / 10. );\n    vec4 mapColor = texture2D( map, displaceUV );\n    vec4 map2Color = texture2D( map2, displaceUV );\n    vec4 texelColor = mapTexelToLinear( mix( mapColor, map2Color, colorSwitch ) );\n\n    float gradient = max(0., ( (1. - vUv.x) - vGradientLength ) * vGradientMultiplier );\n    gradient *= gradient;\n\n    texelColor.rgb = mix( texelColor.rgb, bgColor, gradient );\n  \n  gl_FragColor = texelColor;//vec4( outgoingLight, diffuseColor.a );\n\n  #include <premultiplied_alpha_fragment>\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n\n}\n".replace("#define GLSLIFY 1", "")
          , T = "#define GLSLIFY 1\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvarying vec2 vUv;\nvarying float vCenter;\nvarying float vNoise;\nvarying vec4 vColorNoise;\nuniform float colorSwitch;\nuniform float time;\nuniform sampler2D nebula;\nuniform sampler2D nebula2;\n\nvoid main() {\n\n  #include <uv_vertex>\n  #include <uv2_vertex>\n  #include <color_vertex>\n  #include <skinbase_vertex>\n\n  vUv = uv * 4. - 1.5;\n\n  #ifdef USE_ENVMAP\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n\n  #endif\n\n  #include <begin_vertex>\n\n  float dist = 1. - min(1., sqrt( ( uv.x - .5 )*( uv.x - .5 ) + ( uv.y - .5 )*( uv.y - .5 ) ) * 2.);\n  dist -= .3;\n  dist = max(0.,dist) * (1./.7);\n  vCenter = dist * dist;\n\n  vec4 color1 = texture2D( nebula, vec2( uv.y, time + uv.x / 5. ) );\n  vec4 color2 = texture2D( nebula2, vec2( uv.y, time + uv.x / 5. ) );\n  vColorNoise = mix( color1, color2, colorSwitch );\n\n  vNoise = (snoise( vec3( position.x / 100., position.y + time, position.z ) ) + 1. / 2.);\n  vNoise *= vNoise;\n  transformed.z = vNoise * 2. * vCenter;\n\n  #include <morphtarget_vertex>\n  #include <skinning_vertex>\n  #include <project_vertex>\n  #include <logdepthbuf_vertex>\n\n  #include <worldpos_vertex>\n  #include <clipping_planes_vertex>\n  #include <envmap_vertex>\n  #include <fog_vertex>\n\n}".replace("#define GLSLIFY 1", "")
          , M = "#define GLSLIFY 1\nuniform vec3 bgColor;\nuniform float time;\n\nuniform sampler2D shadow;\n\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vUv;\nvarying float vCenter;\nvarying float vNoise;\nvarying vec4 vColorNoise;\n\nvoid main() {\n\n  #include <clipping_planes_fragment>\n\n  vec4 diffuseColor = vec4( diffuse, opacity );\n\n  #include <logdepthbuf_fragment>\n  #include <map_fragment>\n\n  vec4 texelColor = texture2D( shadow, vUv );\n  texelColor = mapTexelToLinear( texelColor );\n  diffuseColor *= texelColor;\n\n  diffuseColor.rgb = mix( diffuseColor.rgb, vColorNoise.rgb, (vNoise * vCenter) );\n\n  #include <color_fragment>\n  #include <alphamap_fragment>\n  #include <alphatest_fragment>\n  #include <specularmap_fragment>\n\n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n  // accumulation (baked indirect lighting only)\n  #ifdef USE_LIGHTMAP\n\n    reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n  #else\n\n    reflectedLight.indirectDiffuse += vec3( 1.0 );\n\n  #endif\n\n  // modulation\n  #include <aomap_fragment>\n\n  reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n  vec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n  #include <envmap_fragment>\n\n  gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n  #include <premultiplied_alpha_fragment>\n  #include <tonemapping_fragment>\n  #include <encodings_fragment>\n  #include <fog_fragment>\n\n}".replace("#define GLSLIFY 1", "");
        s.prototype = Object.create(h.Curve.prototype),
        s.prototype.constructor = s,
        s.prototype.getPoint = function(e) {
            var t = 0
              , i = e
              , n = 0;
            return new h.Vector3(t,i,n).multiplyScalar(this.scale)
        }
        ;
        var E = function() {
            function e() {
                var t = this;
                o(this, e);
                var i = f.default.radius + 100;
                this.colorSwitch = 0;
                var n = new s(10);
                this.geometry = new h.TubeBufferGeometry(n,10,i,32,!1);
                for (var r = this.geometry.attributes.position.array, l = 0, c = r.length; c > l; l += 3)
                    r[l] *= 1 + .1 * (5 - r[l + 1]),
                    r[l + 2] *= 1 + .1 * (5 - r[l + 1]);
                this.geometry.attributes.position.array = r,
                this.geometry.computeFaceNormals(),
                this.geometry.computeVertexNormals();
                var u = v.default.get("nebula");
                u.wrapS = u.wrapT = h.RepeatWrapping,
                u.minFilter = h.LinearFilter;
                var p = v.default.get("nebula2");
                p.wrapS = p.wrapT = h.RepeatWrapping,
                p.minFilter = h.LinearFilter;
                var m = v.default.get("displacement");
                m.wrapS = m.wrapT = h.RepeatWrapping;
                var g = Object.assign({}, h.UniformsUtils.clone(h.ShaderLib.basic.uniforms), {
                    time: a({
                        value: "f"
                    }, "value", 0),
                    diffuse: {
                        value: new h.Color(f.default.backgroundColor)
                    },
                    map: {
                        type: "t",
                        value: u
                    },
                    map2: {
                        type: "t",
                        value: p
                    },
                    displacement: {
                        type: "t",
                        value: m
                    },
                    bgColor: {
                        type: "c",
                        value: new h.Color(f.default.backgroundColor)
                    },
                    gradientLength: {
                        type: "f",
                        value: f.default.gradientLength
                    },
                    colorSwitch: {
                        type: "f",
                        value: this.colorSwitch
                    }
                });
                this.material = new h.ShaderMaterial({
                    uniforms: g,
                    defines: {
                        USE_MAP: ""
                    },
                    vertexShader: b,
                    fragmentShader: w,
                    fog: !0,
                    lights: !1,
                    side: h.BackSide
                }),
                this.mesh = new h.Mesh(this.geometry,this.material),
                this.mesh.scale.set(1, 20, 1),
                this.mesh.position.set(0, -12, 0),
                d.default.container.add(this.mesh);
                var y = v.default.get("shadow-spiral");
                y.wrapS = h.ClampToEdgeWrapping,
                y.wrapT = h.ClampToEdgeWrapping,
                y.repeat.set(4, 4),
                y.offset.x = -1.5,
                y.offset.y = -1.5;
                var _ = Object.assign({}, h.UniformsUtils.clone(h.ShaderLib.basic.uniforms), {
                    shadow: {
                        type: "t",
                        value: y
                    },
                    color: {
                        type: "c",
                        value: new h.Color(f.default.backgroundColor)
                    },
                    time: {
                        type: "f",
                        value: 0
                    },
                    nebula: {
                        type: "t",
                        value: u
                    },
                    nebula2: {
                        type: "t",
                        value: p
                    },
                    colorSwitch: {
                        type: "f",
                        value: this.colorSwitch
                    }
                })
                  , E = new h.ShaderMaterial({
                    defines: {},
                    uniforms: _,
                    vertexShader: T,
                    fragmentShader: M,
                    side: h.BackSide,
                    lights: !1,
                    fog: !0
                })
                  , S = new h.PlaneBufferGeometry(2 * i * Math.PI,2 * i * Math.PI,32,32);
                if (this.floorMesh = new h.Mesh(S,E),
                this.floorMesh.position.set(0, -10, 0),
                this.floorMesh.rotation.set(Math.PI / 2, 0, 0),
                d.default.container.add(this.floorMesh),
                setTimeout(function() {
                    return t.switchColor()
                }, 3e3),
                APP.dev) {
                    var A = (x.default.add(f.default, "displaceSpeed", .1, 3),
                    x.default.add(f.default, "gradientLength", 0, 1));
                    A.onChange(function() {
                        t.material.uniforms.gradientLength.value = f.default.gradientLength
                    })
                }
            }
            return l(e, [{
                key: "switchColor",
                value: function() {
                    var e = this
                      , t = void 0;
                    t = 0 == this.colorSwitch ? 1 : 0,
                    TweenLite.to(this, 5, {
                        colorSwitch: t,
                        ease: Cubic.easeInOut,
                        onUpdate: function() {
                            e.mesh.material.uniforms.colorSwitch.value = e.colorSwitch,
                            e.floorMesh.material.uniforms.colorSwitch.value = e.colorSwitch
                        }
                    }),
                    setTimeout(function() {
                        return e.switchColor()
                    }, 8e3)
                }
            }, {
                key: "update",
                value: function() {
                    this.material.uniforms.time.value += f.default.displaceSpeed,
                    this.floorMesh.material.uniforms.time.value += f.default.displaceSpeed / 300
                }
            }, {
                key: "updateZoom",
                value: function() {}
            }, {
                key: "updateColor",
                value: function() {
                    this.floorMesh.material.color = new h.Color(f.default.backgroundColor),
                    this.mesh.material.uniforms.bgColor.value = new h.Color(f.default.backgroundColor)
                }
            }]),
            e
        }();
        i.default = E
    }
    , {
        "content/Content": 24,
        "custom/Conf": 27,
        "custom/GUI": 28,
        "data/TexturesManager": 33,
        glslify: 5,
        three: 16,
        "webgl/ThreeD": 51
    }],
    42: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , s = e("three")
          , l = r(s)
          , c = e("custom/Conf")
          , h = n(c)
          , u = e("App")
          , d = n(u)
          , p = e("data/DatasManager")
          , f = n(p)
          , m = function() {
            function e() {
                a(this, e),
                this.x = h.default.cameraX,
                this.y = h.default.cameraY,
                this.z = h.default.cameraZ,
                this.toMouseX = 0,
                this.toMouseY = 0,
                this.mouseX = 0,
                this.mouseY = 0,
                this.rotationX = h.default.cameraRotationX,
                this.rotationY = h.default.cameraRotationY,
                this.rotationZ = h.default.cameraRotationZ,
                this.zoom = 0,
                this.mouse = new l.Vector2,
                this.mouseFactor = .1,
                this.lookAt = new l.Vector3,
                this.lookAtObject = new l.Object3D,
                this.lookAtObject.up.x = 0,
                this.lookAtObject.up.y = 1,
                this.lookAtObject.up.z = 0
            }
            return o(e, [{
                key: "init",
                value: function() {
                    var e = this;
                    this.cam = new l.PerspectiveCamera(55,d.default.innerWidth / d.default.innerHeight,.1,1e3),
                    this.centerVertical(),
                    this.mousemoveHandler = function(t) {
                        e.mouse.x = t.clientX,
                        e.mouse.y = t.clientY,
                        e.toMouseX = .05 * (e.mouse.x - .5 * d.default.innerWidth),
                        e.toMouseY = .02 * (e.mouse.y - .5 * d.default.innerHeight)
                    }
                    ,
                    window.addEventListener("mousemove", this.mousemoveHandler)
                }
            }, {
                key: "centerVertical",
                value: function() {
                    this.y = .28 * f.default.getItems().length
                }
            }, {
                key: "update",
                value: function() {
                    this.lookAt.y = this.y,
                    this.mouseX += (this.toMouseX - this.mouseX) / 10,
                    this.mouseY += (this.toMouseY - this.mouseY) / 10;
                    var e = 1 - this.zoom
                      , t = this.x + this.mouseX * e
                      , i = this.y + this.mouseY * e
                      , n = this.z;
                    this.cam.position.set(t, i, n),
                    this.lookAtObject.position.set(t, i, n),
                    this.lookAtObject.lookAt(this.lookAt);
                    var r = void 0;
                    r = this.lookAtObject.rotation.x > 0 ? this.rotationX - (Math.PI - this.lookAtObject.rotation.x) * e : this.rotationX + (Math.PI + this.lookAtObject.rotation.x) * e;
                    var a = this.rotationY - this.lookAtObject.rotation.y * (1 - this.zoom)
                      , o = this.rotationZ;
                    this.cam.rotation.set(r, a, o)
                }
            }, {
                key: "resize",
                value: function() {
                    this.cam.aspect = d.default.innerWidth / d.default.innerHeight,
                    this.cam.updateProjectionMatrix()
                }
            }]),
            e
        }()
          , v = new m;
        i.default = v
    }
    , {
        App: 23,
        "custom/Conf": 27,
        "data/DatasManager": 30,
        three: 16
    }],
    43: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function o(e, t) {
            if (!e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !t || "object" != typeof t && "function" != typeof t ? e : t
        }
        function s(e, t) {
            if ("function" != typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }
        function l(e, t) {
            var i = (1 + t % 32 - (1 - e)) / 32;
            return 0 == e ? i += .002 : i -= .002,
            i
        }
        function c(e, t) {
            var i = 1 - (Math.floor(t / 32) + 1 - e) / 16;
            return 0 == e ? i += .002 : i -= .002,
            i
        }
        function h(e, t, i) {
            if (e = e || "#000000",
            t = t || "#ffffff",
            i = i,
            4 != e.length && 7 != e.length)
                throw new error("colors must be provided as hexes");
            if (4 != t.length && 7 != t.length)
                throw new error("colors must be provided as hexes");
            if (i > 1 || 0 > i)
                throw new error("percentage must be between 0 and 1");
            e = 4 == e.length ? e[1] + e[1] + e[2] + e[2] + e[3] + e[3] : e.substring(1),
            t = 4 == t.length ? t[1] + t[1] + t[2] + t[2] + t[3] + t[3] : t.substring(1),
            e = [parseInt(e[0] + e[1], 16), parseInt(e[2] + e[3], 16), parseInt(e[4] + e[5], 16)],
            t = [parseInt(t[0] + t[1], 16), parseInt(t[2] + t[3], 16), parseInt(t[4] + t[5], 16)];
            var n = [(1 - i) * e[0] + i * t[0], (1 - i) * e[1] + i * t[1], (1 - i) * e[2] + i * t[2]];
            return n = "#" + u(n[0]) + u(n[1]) + u(n[2])
        }
        function u(e) {
            var t = Math.round(e).toString(16);
            return 1 == t.length && (t = "0" + t),
            t
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var d, p = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }(), f = e("three"), m = r(f), v = e("App"), g = (n(v),
        e("content/Content")), y = n(g), _ = e("routing/Router"), x = n(_), b = e("custom/Conf"), w = n(b), T = e("custom/GUI"), M = n(T), E = e("glslify"), S = (n(E),
        e("data/DatasManager")), A = n(S), P = e("data/TexturesManager"), C = n(P), L = e("webgl/CustomBufferGeometry"), R = (n(L),
        e("webgl/ThreeD")), O = n(R), I = e("tiny-emitter"), D = n(I), U = e("webgl/Camera"), F = n(U), k = e("webgl/Utils3d"), N = (n(k),
        "#define GLSLIFY 1\nvActive = active;\nfloat invertActive = (1.-active);\n\nfloat activeDelayed = (.5 - abs(active - .5)) * position.x + active;\nfloat newActive = active + (position.x + 1.);\nnewActive = clamp( 0., 1., newActive );\n\n// currentIndexxx is used for speed Z deformation\nfloat currentIndexxx = ( offsetIndex + indexxx) - position.z * speed * 14. * active;\nfloat currentIndexxxId = ( (offsetIndex + indexxx) * active + id * invertActive) - position.z * speed * 14. * active;\n\n//float delayedSpiralFactor = spiralFactor - (total - currentIndexxx) / total;\nfloat delayedSpiralFactor = spiralFactor - (total - currentIndexxx + position.x * 100. * ( 2. - spiralFactor ) ) / total;\ndelayedSpiralFactor = clamp( delayedSpiralFactor, 0., 1. );\n\nfloat waveFactor = (1. - min(1., abs(currentItem - currentIndexxx) / 20.)) * active;\nwaveFactor *= waveFactor * waveFactor * waveFactor * waveFactor * waveFactor;\n\ntransformed.x *= 1. + scale.x * active;\ntransformed.y *= 1. + scale.y * (.5 + active * .5);\ntransformed.z *= scale.z;\n\ntransformed *= delayedSpiralFactor * delayedSpiralFactor * delayedSpiralFactor; \ntransformed += offset * 30. * (1.-delayedSpiralFactor);\n\n// TODO find better minActive\nfloat minActive = .2 - min(.2,active);\nfloat angle = angleStep * currentIndexxx + mod( (iGlobalTime * .25 / randomSpeed) * minActive, PI2/2. );\nangle += PI2 * (1.-delayedSpiralFactor);\n\ntransformed = rotateAngleAxis( angle, vec3(0.0, 1.0, 0.0), transformed );\nobjectNormal = rotateAngleAxis( angle, vec3(0.0, 1.0, 0.0), objectNormal );\n\nfloat rad = radius - waveFactor * waveFactor * waveFactor * 6. * doWave * (1.-speed);\nrad -= open * openRad;\nrad *= active;\nrad *= delayedSpiralFactor;\n\n// transform spiral\ntransformed.x += rad * cos(angle);\ntransformed.y += currentIndexxxId * stepVertical;\ntransformed.z += rad * -sin(angle);\n\ntransformed.xz += offset.xz * invertActive;".replace("#define GLSLIFY 1", "")), z = "#define GLSLIFY 1\nuniform float iGlobalTime;\nuniform float currentItem;\nuniform float radius;\nuniform float angleStep;\nuniform float stepVertical;\nuniform float speed;\nuniform float doWave;\nuniform float total;\nuniform float shadowFactor;\nuniform float openRad;\nuniform float spiralFactor;\nuniform float offsetIndex;\nuniform vec3 scale;\nuniform sampler2D texture;\nuniform sampler2D sprite;\n\nuniform sampler2D textHD1;\nuniform sampler2D textHD2;\n\nattribute vec3 offset;\nattribute float indexxx;\nattribute float id;\nattribute float hd;\nattribute float active;\nattribute float highlight;\nattribute float hover;\n//attribute float loaded;\n//attribute float customColorFactor;\nattribute float open;\nattribute float randomSpeed;\nattribute vec2 uvSprite;\n\nvarying float vActive;\n\n// rotateAngleAxisMatrix returns the mat3 rotation matrix\n// for given angle and axis.\nmat3 rotateAngleAxisMatrix(float angle, vec3 axis) {\n  float c = cos(angle);\n  float s = sin(angle);\n  float t = 1.0 - c;\n  axis = normalize(axis);\n  float x = axis.x, y = axis.y, z = axis.z;\n  return mat3(\n    t*x*x + c,    t*x*y + s*z,  t*x*z - s*y,\n    t*x*y - s*z,  t*y*y + c,    t*y*z + s*x,\n    t*x*z + s*y,  t*y*z - s*x,  t*z*z + c\n  );\n}\n\n// rotateAngleAxis rotates a vec3 over the given axis by the given angle and\n// returns the rotated vector.\nvec3 rotateAngleAxis(float angle, vec3 axis, vec3 v) {\n  return rotateAngleAxisMatrix(angle, axis) * v;\n}".replace("#define GLSLIFY 1", ""), B = "#define GLSLIFY 1\n".replace("#define GLSLIFY 1", ""), G = "#define GLSLIFY 1\nuniform float currentItem;\nuniform float speed;\nuniform float shadowFactor;\nuniform float doWave;\nuniform float offsetIndex;\n\nuniform sampler2D texture;\nuniform sampler2D sprite;\nuniform sampler2D textHD1;\nuniform sampler2D textHD2;\n\nvarying float vActive;".replace("#define GLSLIFY 1", ""), H = "#define GLSLIFY 1\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n  varying vec3 vNormal;\n\n#endif\n\n#include <common>\n//#i/nclude <uv_pars_vertex>\n                    //#i/nclude <uv2_pars_vertex>\n                    //#i/nclude <displacementmap_pars_vertex>\n                    //#i/nclude <envmap_pars_vertex>\n                    //#i/nclude <color_pars_vertex>\n\n//#i/fdef USE_FOG\n  varying float fogDepth;\n//#e/ndif\n\n                    //#i/nclude <morphtarget_pars_vertex>\n                    //#i/nclude <skinning_pars_vertex>\n                    //#i/nclude <shadowmap_pars_vertex>\n                    //#i/nclude <logdepthbuf_pars_vertex>\n                    //#i/nclude <clipping_planes_pars_vertex>\n\n#include <transform_pars_vertex>\n\nuniform sampler2D gradient;\nuniform vec3 emissive;\nvarying float vOpen;\nvarying float vHighlight;\nvarying float vHd;\n//varying float vLoaded;\nvarying float vTextureColorFactor;\n//varying float vGradientColorFactor;\nvarying float vShadowFactor;\nvarying vec3 vHighlightColor;\nvarying vec2 vUvSprite;\nvarying vec2 vUv;\nvarying vec3 vEmissive;\n\nvoid main() {\n\n  #include <uv_vertex>\n                              //#i/nclude <uv2_vertex>\n                              //#i/nclude <color_vertex>\n  #include <begin_vertex>\n  #include <beginnormal_vertex>\n\n  #include <transform_vertex>\n\n                              //#i/nclude <morphnormal_vertex>\n                              //#i/nclude <skinbase_vertex>\n                              //#i/nclude <skinnormal_vertex>\n\n  #include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n  vNormal = normalize( transformedNormal );\n\n#endif\n\n                    //#i/nclude <morphtarget_vertex>\n                    //#i/nclude <skinning_vertex>\n                    //#i/nclude <displacementmap_vertex>\n  #include <project_vertex>\n\n  ////////////\n  \n                    //#i/nclude <logdepthbuf_vertex>\n                    //#i/nclude <clipping_planes_vertex>\n\n      vOpen = open;\n      vHighlight = highlight;\n      vHighlightColor = texture2D( gradient, vec2(id/total,0.1)).rgb;\n      vHd = hd;\n      //vLoaded = loaded;\n      vUvSprite = uvSprite;\n      vUv = uv;  \n      vEmissive = emissive * max(.85,vActive);\n\n//      vShadowFactor = (1.-speed) * customColorFactor * shadowFactor * active;\n//      vTextureColorFactor = (1.-speed) * customColorFactor * doWave * (waveFactor + (1. - waveFactor) * hover);\n      // TODO optimize shadowFactor\n      vShadowFactor = (1.-speed) * shadowFactor * active;\n      vTextureColorFactor = (1.-speed) * doWave * (waveFactor + (1. - waveFactor) * hover);\n      //vGradientColorFactor = speed * doWave * waveFactor;\n\n  vViewPosition = - mvPosition.xyz;\n\n                    //#in//clude <worldpos_vertex>\n                    //#in//clude <envmap_vertex>\n                    //#in//clude <shadowmap_vertex>\n\n  //#i/fdef USE_FOG\n  fogDepth = -mvPosition.z;\n  //#e/ndif\n\n}".replace("#define GLSLIFY 1", ""), j = "#define GLSLIFY 1\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform vec3 highlightColor;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n                      //#i/nclude <aomap_pars_fragment>\n                      //#i/nclude <lightmap_pars_fragment>\n                      //#i/nclude <emissivemap_pars_fragment>\n                      //#i/nclude <envmap_pars_fragment>\n                      //#i/nclude <gradientmap_pars_fragment>\n\n//#i/fdef USE_FOG\n  uniform vec3 fogColor;\n  varying float fogDepth;\n  uniform float fogNear;\n  uniform float fogFar;\n//#e/ndif\n\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n                      //#i/nclude <shadowmap_pars_fragment>\n                      //#i/nclude <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n                      //#i/nclude <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n      #include <transform_pars_fragment>\n\nvarying float vOpen;\nvarying float vHighlight;\nvarying float vHd;\nvarying float vLoaded;\nvarying float vTextureColorFactor;\n//varying float vGradientColorFactor;\nvarying float vShadowFactor;\nvarying vec2 vUvSprite;\nvarying vec2 vUv;\nvarying vec3 vHighlightColor;\nvarying float vDoWave;\nvarying vec3 vEmissive;\n\nvoid main() {\n\n  #include <clipping_planes_fragment>\n\n  vec4 diffuseColor = vec4( diffuse, opacity );\n  vec4 spriteColor = texture2D( sprite, vUvSprite );\n  \n  ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n  vec3 totalEmissiveRadiance = vEmissive;\n\n  vec4 textureColor = texture2D(texture, vUv);\n  totalEmissiveRadiance -= textureColor.rgb * vShadowFactor;\n  totalEmissiveRadiance = mix( totalEmissiveRadiance, spriteColor.rgb, vTextureColorFactor );\n  //totalEmissiveRadiance = mix( totalEmissiveRadiance, vHighlightColor.rgb, vGradientColorFactor );\n\n  #include <map_fragment>\n  #include <color_fragment>\n                //#i/nclude <alphamap_fragment>\n                //#i/nclude <alphatest_fragment>\n  #include <specularmap_fragment>\n  #include <normal_fragment>\n                //#i/nclude <emissivemap_fragment>\n\n  // accumulation\n  #include <lights_phong_fragment>\n  #include <lights_template>\n\n  vec3 outgoingLight = (reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular) * max(.3,vActive) + totalEmissiveRadiance;\n\n  vec3 textHD1Color = texture2D(textHD1, vUv).rgb;\n  outgoingLight = mix( outgoingLight, textHD1Color, vOpen * (1.-vHd) );\n  vec3 textHD2Color = texture2D(textHD2, vUv).rgb;\n  outgoingLight = mix( outgoingLight, textHD2Color, vOpen * vHd );\n\n  outgoingLight = vHighlightColor * vHighlight - (1.-outgoingLight.r) * vHighlight + outgoingLight * (1.-vHighlight);\n\n                      //#i/nclude <envmap_fragment>\n\n  gl_FragColor = vec4( outgoingLight, 1. );\n\n                      //#i/nclude <tonemapping_fragment>\n  #include <encodings_fragment>\n  \n  //#if/def USE_FOG\n    float fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n    gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n  //#en/dif\n\n                          //#i/nclude <premultiplied_alpha_fragment>\n                          //#i/nclude <dithering_fragment>\n\n}".replace("#define GLSLIFY 1", ""), V = "#define GLSLIFY 1\n#define PHONG\n\nvarying float vId;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n      #include <transform_pars_vertex>\n\nvoid main() {\n\n  #include <uv_vertex>\n  #include <uv2_vertex>\n  #include <color_vertex>\n\n  #include <beginnormal_vertex>\n  #include <morphnormal_vertex>\n  #include <skinbase_vertex>\n  #include <skinnormal_vertex>\n  #include <defaultnormal_vertex>\n\n  #include <begin_vertex>\n\n        vId = id;\n        #include <transform_vertex>\n\n  #include <project_vertex>\n\n}".replace("#define GLSLIFY 1", ""), W = "#define GLSLIFY 1\nvarying float vId;\nvarying float vActive;\n\nvoid main() {\n  if( vActive <= 0.9 ) discard;\n  gl_FragColor = vec4( 0., 0., vId / 255., 1.0 );\n}".replace("#define GLSLIFY 1", ""), X = (new m.Vector3(0,0,0),
        new m.Vector3(0,0,0),
        0), Y = 0, q = void 0, Z = -1, Q = w.default.nbrOfCards, J = !1, K = (new m.Vector3(0,0,0),
        !0), $ = 250, et = function(e) {
            function t() {
                return a(this, t),
                o(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this))
            }
            return s(t, e),
            p(t, [{
                key: "init",
                value: function() {
                    var e = this;
                    m.ShaderChunk.transform_vertex = N,
                    m.ShaderChunk.transform_pars_vertex = z,
                    m.ShaderChunk.transform_fragment = B,
                    m.ShaderChunk.transform_pars_fragment = G,
                    Q = A.default.lg,
                    this.initGeometry(),
                    this.initMaterial(),
                    this.mesh = new m.Mesh(this.geometry,this.material),
                    this.mesh.frustumCulled = !1,
                    O.default.container.add(this.mesh),
                    this.itemOpened = !1,
                    this.isZooming = !1,
                    this.isZoomed = !1,
                    this.doWave = 0,
                    this.shadowFactor = .1,
                    this.offsetIndex = 0,
                    this.toOffsetIndex = 0,
                    this.forceSpeed = 0,
                    this.lastY = 0,
                    this.spiralFactor = 0,
                    this.tempCanvas = document.createElement("canvas"),
                    this.tempCanvas.style.opacity = 0,
                    this.tempCanvas.width = 64,
                    this.tempCanvas.height = 64,
                    document.body.appendChild(this.tempCanvas),
                    this.tempContext = this.tempCanvas.getContext("2d"),
                    this.tempCanvasTexture = new m.CanvasTexture(this.tempCanvas),
                    this.updateTransforms(),
                    this.updateMaterial(),
                    APP.dev && this.initGUI(),
                    y.default.on("scroll", function(t) {
                        return e.onScroll(t)
                    }),
                    this.mousemoveHandler = function(t) {
                        e.mouse.x = t.clientX,
                        e.mouse.y = t.clientY
                    }
                    ,
                    this.mouseEnabled = !1,
                    this.mouse = new m.Vector2,
                    window.addEventListener("mousemove", this.mousemoveHandler),
                    A.default.on("items-updated", function() {
                        var t = A.default.getItems().length
                          , i = A.default.getAvailableItems().length
                          , n = t - i;
                        e.toOffsetIndex = n / 2,
                        TweenLite.to(e, 2, {
                            offsetIndex: e.toOffsetIndex,
                            onUpdate: function() {
                                e.updateCurrentItem(e.lastY)
                            }
                        })
                    }),
                    document.querySelector(".three canvas").addEventListener("click", function() {
                        if (e.mouseEnabled) {
                            var t = O.default.getPickId();
                            t !== !1 && (t != y.default.getCurrentId() ? y.default.scrollToId(t) : e.itemOpened ? e.close() : x.default.toPost(t))
                        }
                    }),
                    this.onScroll(0)
                }
            }, {
                key: "initGeometry",
                value: function() {
                    var e = this
                      , t = void 0
                      , i = void 0
                      , n = void 0
                      , r = void 0
                      , a = void 0
                      , o = void 0
                      , s = void 0
                      , h = void 0
                      , u = void 0
                      , p = void 0
                      , f = void 0
                      , v = void 0
                      , g = void 0;
                    J || !function() {
                        d = new m.BoxGeometry(.25,.25,.1,4,1,1),
                        q = d;
                        var y = Q
                          , _ = 3 * q.faces.length;
                        i = new Float32Array(Q * _ * 3),
                        s = new Float32Array(Q * _ * 3),
                        a = new Float32Array(Q * _ * 2),
                        f = new Float32Array(Q * _ * 2),
                        r = new Float32Array(Q * _ * 1),
                        t = new Float32Array(Q * _ * 1),
                        p = new Float32Array(Q * _ * 1),
                        o = new Float32Array(Q * _ * 1),
                        v = new Float32Array(Q * _ * 1),
                        h = new Float32Array(Q * _ * 1),
                        g = new Float32Array(Q * _ * 1),
                        n = new Float32Array(Q * _ * 3),
                        u = new Float32Array(Q * _ * 1);
                        for (var x = void 0, b = void 0, T = void 0, M = 1, E = void 0, S = function(e) {
                            M = 0 == e ? .05 : 1,
                            x = (Math.random() - .5) * w.default.radius * .3,
                            b = (Math.random() - .5) * w.default.radius * .3,
                            T = (Math.random() - .5) * w.default.radius * .3,
                            E = Math.random() - .5,
                            E > 0 ? E += .2 : E -= .2,
                            E *= 7,
                            q.faces.forEach(function(d, m) {
                                var y = e * q.faces.length + m;
                                i[9 * y + 0] = q.vertices[d.a].x,
                                i[9 * y + 1] = q.vertices[d.a].y,
                                i[9 * y + 2] = q.vertices[d.a].z,
                                i[9 * y + 3] = q.vertices[d.b].x,
                                i[9 * y + 4] = q.vertices[d.b].y,
                                i[9 * y + 5] = q.vertices[d.b].z,
                                i[9 * y + 6] = q.vertices[d.c].x,
                                i[9 * y + 7] = q.vertices[d.c].y,
                                i[9 * y + 8] = q.vertices[d.c].z,
                                s[9 * y + 0] = d.normal.x,
                                s[9 * y + 1] = d.normal.y,
                                s[9 * y + 2] = d.normal.z,
                                s[9 * y + 3] = d.normal.x,
                                s[9 * y + 4] = d.normal.y,
                                s[9 * y + 5] = d.normal.z,
                                s[9 * y + 6] = d.normal.x,
                                s[9 * y + 7] = d.normal.y,
                                s[9 * y + 8] = d.normal.z,
                                n[9 * y + 0] = x,
                                n[9 * y + 1] = b,
                                n[9 * y + 2] = T,
                                n[9 * y + 3] = x,
                                n[9 * y + 4] = b,
                                n[9 * y + 5] = T,
                                n[9 * y + 6] = x,
                                n[9 * y + 7] = b,
                                n[9 * y + 8] = T,
                                r[3 * y + 0] = 0,
                                r[3 * y + 1] = 0,
                                r[3 * y + 2] = 0,
                                t[3 * y + 0] = e,
                                t[3 * y + 1] = e,
                                t[3 * y + 2] = e,
                                u[3 * y + 0] = e,
                                u[3 * y + 1] = e,
                                u[3 * y + 2] = e,
                                o[3 * y + 0] = 1,
                                o[3 * y + 1] = 1,
                                o[3 * y + 2] = 1,
                                v[3 * y + 0] = 0,
                                v[3 * y + 1] = 0,
                                v[3 * y + 2] = 0,
                                p[3 * y + 0] = 0,
                                p[3 * y + 1] = 0,
                                p[3 * y + 2] = 0,
                                h[3 * y + 0] = 0,
                                h[3 * y + 1] = 0,
                                h[3 * y + 2] = 0,
                                g[3 * y + 0] = E,
                                g[3 * y + 1] = E,
                                g[3 * y + 2] = E,
                                a[6 * y + 0] = q.faceVertexUvs[0][m][0].x,
                                a[6 * y + 1] = q.faceVertexUvs[0][m][0].y,
                                a[6 * y + 2] = q.faceVertexUvs[0][m][1].x,
                                a[6 * y + 3] = q.faceVertexUvs[0][m][1].y,
                                a[6 * y + 4] = q.faceVertexUvs[0][m][2].x,
                                a[6 * y + 5] = q.faceVertexUvs[0][m][2].y,
                                1 == Math.abs(d.normal.z) ? (f[6 * y + 0] = l(q.faceVertexUvs[0][m][0].x, e),
                                f[6 * y + 1] = c(q.faceVertexUvs[0][m][0].y, e),
                                f[6 * y + 2] = l(q.faceVertexUvs[0][m][1].x, e),
                                f[6 * y + 3] = c(q.faceVertexUvs[0][m][1].y, e),
                                f[6 * y + 4] = l(q.faceVertexUvs[0][m][2].x, e),
                                f[6 * y + 5] = c(q.faceVertexUvs[0][m][2].y, e)) : 1 == d.normal.y ? (f[6 * y + 0] = l(q.faceVertexUvs[0][m][0].x, e),
                                f[6 * y + 1] = c(1, e),
                                f[6 * y + 2] = l(q.faceVertexUvs[0][m][1].x, e),
                                f[6 * y + 3] = c(1, e),
                                f[6 * y + 4] = l(q.faceVertexUvs[0][m][2].x, e),
                                f[6 * y + 5] = c(1, e)) : -1 == d.normal.y ? (f[6 * y + 0] = l(q.faceVertexUvs[0][m][0].x, e),
                                f[6 * y + 1] = c(0, e),
                                f[6 * y + 2] = l(q.faceVertexUvs[0][m][1].x, e),
                                f[6 * y + 3] = c(0, e),
                                f[6 * y + 4] = l(q.faceVertexUvs[0][m][2].x, e),
                                f[6 * y + 5] = c(0, e)) : (f[6 * y + 0] = l(0, e),
                                f[6 * y + 1] = c(q.faceVertexUvs[0][m][0].y, e),
                                f[6 * y + 2] = l(0, e),
                                f[6 * y + 3] = c(q.faceVertexUvs[0][m][1].y, e),
                                f[6 * y + 4] = l(0, e),
                                f[6 * y + 5] = c(q.faceVertexUvs[0][m][2].y, e))
                            })
                        }, A = 0; y > A; A++)
                            S(A);
                        e.geometry = new m.BufferGeometry,
                        e.geometry.addAttribute("position", new m.BufferAttribute(i,3)),
                        e.geometry.addAttribute("normal", new m.BufferAttribute(s,3)),
                        e.geometry.addAttribute("offset", new m.BufferAttribute(n,3)),
                        e.geometry.addAttribute("uv", new m.BufferAttribute(a,2)),
                        e.geometry.addAttribute("uvSprite", new m.BufferAttribute(f,2)),
                        e.geometry.addAttribute("open", new m.BufferAttribute(r,1)),
                        e.geometry.addAttribute("indexxx", new m.BufferAttribute(t,1)),
                        e.geometry.addAttribute("id", new m.BufferAttribute(u,1)),
                        e.geometry.addAttribute("active", new m.BufferAttribute(o,1)),
                        e.geometry.addAttribute("randomSpeed", new m.BufferAttribute(g,1)),
                        e.geometry.addAttribute("highlight", new m.BufferAttribute(v,1)),
                        e.geometry.addAttribute("hd", new m.BufferAttribute(p,1)),
                        e.geometry.addAttribute("hover", new m.BufferAttribute(h,1)),
                        e.geometry.attributes.open.dynamic = !0,
                        e.geometry.attributes.highlight.dynamic = !0,
                        e.geometry.attributes.active.dynamic = !0,
                        e.geometry.attributes.hover.dynamic = !0
                    }()
                }
            }, {
                key: "open",
                value: function(e) {
                    var t = this
                      , i = C.default.getItem("hd" + e)
                      , n = A.default.getItem(e);
                    n.hd(1),
                    i.loaded ? this.material.uniforms.textHD2.value = i.texture : (C.default.once("loaded-hd" + e, function() {
                        1 == n.hdValue ? t.material.uniforms.textHD2.value = i.texture : t.material.uniforms.textHD1.value = i.texture
                    }),
                    this.drawTempTexture(e),
                    this.material.uniforms.textHD2.value = this.tempCanvasTexture),
                    this.itemOpened = !0,
                    this.mouseEnabled = !1,
                    n.once("opened", function() {
                        var i = C.default.getItem("hd" + e);
                        t.material.uniforms.textHD1.value = i.loaded ? i.texture : t.tempCanvasTexture,
                        t.material.uniforms.textHD2.value = C.default.get("blank"),
                        n.hd(0),
                        t.emit("opened")
                    }),
                    n.open(),
                    O.default.zoomToPost()
                }
            }, {
                key: "close",
                value: function(e) {
                    var t = this;
                    this.itemOpened = !1;
                    var i = A.default.getItem(e);
                    i.once("closed", function() {
                        t.material.uniforms.textHD1.value = C.default.get("blank"),
                        t.emit("closed")
                    }),
                    i.close(),
                    O.default.zoom(!1, !1)
                }
            }, {
                key: "drawTempTexture",
                value: function(e) {
                    var t = C.default.get("sprite").image;
                    this.tempContext.drawImage(t, e % 32 * 64, 64 * parseInt(e / 32), 2048, 1024, 0, 0, 2048, 1024),
                    this.tempCanvasTexture.needsUpdate = !0
                }
            }, {
                key: "setPick",
                value: function(e) {
                    var t = void 0;
                    -1 != Z && (t = A.default.getItem(Z),
                    t.hout()),
                    -1 != e && (t = A.default.getItem(e),
                    t.hover()),
                    Z = e
                }
            }, {
                key: "updateItems",
                value: function() {
                    for (var e = A.default.items, t = this.mesh.geometry.attributes.active.array, i = this.mesh.geometry.attributes.indexxx.array, n = this.mesh.geometry.attributes.hover.array, r = this.mesh.geometry.attributes.open.array, a = this.mesh.geometry.attributes.hd.array, o = this.mesh.geometry.attributes.highlight.array, s = void 0, l = void 0, c = !1, h = !1, u = !1, d = !1, p = !1, f = !1, m = 0, v = e.length; v > m; m++) {
                        if (e[m].needsActiveUpdate) {
                            c = !0,
                            s = e[m].activeValue;
                            for (var g = 0, y = q.faces.length; y > g; g++)
                                l = m * q.faces.length + g,
                                t[3 * l + 0] = s,
                                t[3 * l + 1] = s,
                                t[3 * l + 2] = s
                        }
                        if (e[m].needsIndexUpdate) {
                            h = !0,
                            s = e[m].index;
                            for (var _ = 0, x = q.faces.length; x > _; _++)
                                l = m * q.faces.length + _,
                                i[3 * l + 0] = s,
                                i[3 * l + 1] = s,
                                i[3 * l + 2] = s
                        }
                        if (e[m].needsHoverUpdate) {
                            u = !0,
                            s = e[m].hoverValue;
                            for (var b = 0, w = q.faces.length; w > b; b++)
                                l = m * q.faces.length + b,
                                n[3 * l + 0] = s,
                                n[3 * l + 1] = s,
                                n[3 * l + 2] = s
                        }
                        if (e[m].needsOpenUpdate) {
                            d = !0,
                            s = e[m].openValue;
                            for (var T = 0, M = q.faces.length; M > T; T++)
                                l = m * q.faces.length + T,
                                r[3 * l + 0] = s,
                                r[3 * l + 1] = s,
                                r[3 * l + 2] = s
                        }
                        if (e[m].needsHdUpdate) {
                            f = !0,
                            s = e[m].hdValue;
                            for (var E = 0, S = q.faces.length; S > E; E++)
                                l = m * q.faces.length + E,
                                a[3 * l + 0] = s,
                                a[3 * l + 1] = s,
                                a[3 * l + 2] = s
                        }
                        if (e[m].needsHighlightUpdate) {
                            p = !0,
                            s = e[m].highlightValue;
                            for (var P = 0, C = q.faces.length; C > P; P++)
                                l = m * q.faces.length + P,
                                o[3 * l + 0] = s,
                                o[3 * l + 1] = s,
                                o[3 * l + 2] = s
                        }
                    }
                    c && (this.geometry.attributes.active.array = t,
                    this.geometry.attributes.active.needsUpdate = !0),
                    h && (this.geometry.attributes.indexxx.array = i,
                    this.geometry.attributes.indexxx.needsUpdate = !0),
                    u && (this.geometry.attributes.hover.array = n,
                    this.geometry.attributes.hover.needsUpdate = !0),
                    d && (this.geometry.attributes.open.array = r,
                    this.geometry.attributes.open.needsUpdate = !0),
                    f && (this.geometry.attributes.hd.array = a,
                    this.geometry.attributes.hd.needsUpdate = !0),
                    p && (this.geometry.attributes.highlight.array = o,
                    this.geometry.attributes.highlight.needsUpdate = !0)
                }
            }, {
                key: "spiralize",
                value: function() {
                    var e = this;
                    this.mesh.material.uniforms.spiralFactor.value = 0,
                    TweenLite.to(this, 4, {
                        spiralFactor: 2,
                        ease: Sine.easeInOut,
                        onUpdate: function() {
                            e.setSpiralFactor(e.spiralFactor)
                        }
                    })
                }
            }, {
                key: "setSpiralFactor",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1;
                    t && (this.spiralFactor = e),
                    this.mesh.material.uniforms.spiralFactor.value = e
                }
            }, {
                key: "zoom",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1
                      , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1;
                    this.isZooming = i ? !1 : !0;
                    var n = 0;
                    t && (n = .4),
                    this.updateCurrentItem(y.default.scroll);
                    var r = 1.6;
                    TweenLite.to(O.default.container.position, r, {
                        delay: n,
                        y: this.getContainerY(y.default.scroll, .2, !0),
                        ease: Quart.easeInOut
                    }),
                    TweenLite.to(O.default.container.rotation, r, {
                        delay: n,
                        y: this.getContainerRotationY(y.default.scroll, !0),
                        ease: Quart.easeInOut,
                        onComplete: function() {
                            e.pickingMesh.rotation.y = O.default.container.rotation.y,
                            e.pickingMesh.position.y = O.default.container.position.y
                        }
                    }),
                    TweenLite.to(this, r, {
                        delay: n,
                        doWave: 1,
                        shadowFactor: .5,
                        ease: Quart.easeInOut
                    }),
                    TweenLite.to(w.default, r, {
                        delay: n,
                        stepVertical: .2,
                        ease: Quart.easeInOut,
                        onUpdate: function() {
                            e.updateTransforms(!1),
                            e.updateMaterial()
                        },
                        onComplete: function() {
                            e.isZooming = !1,
                            e.isZoomed = !0,
                            "home" == x.default.currentType && (e.mouseEnabled = !0)
                        }
                    })
                }
            }, {
                key: "dezoom",
                value: function() {
                    var e = this;
                    this.isZoomed = !1,
                    this.isZooming = !0,
                    this.mouseEnabled = !1;
                    TweenLite.to(O.default.container.position, 1.6, {
                        y: 0,
                        ease: Quart.easeInOut
                    }),
                    TweenLite.to(this, 1.6, {
                        doWave: 0,
                        shadowFactor: .1,
                        ease: Quart.easeInOut
                    }),
                    TweenLite.to(w.default, 1.6, {
                        stepVertical: .6,
                        ease: Quart.easeInOut,
                        onUpdate: function() {
                            e.updateTransforms(!1),
                            e.updateMaterial()
                        },
                        onComplete: function() {
                            e.isZooming = !1
                        }
                    })
                }
            }, {
                key: "initMaterial",
                value: function() {
                    var e = C.default.get("shadow")
                      , t = C.default.get("sprite");
                    t.wrapS = t.wrapT = m.RepeatWrapping;
                    var i = m.ShaderLib.phong
                      , n = {
                        emissive: {
                            type: "c",
                            value: new m.Color(h(w.default.emissiveDezoomed, w.default.emissive, F.default.zoom))
                        },
                        diffuse: {
                            type: "c",
                            value: new m.Color(h(w.default.diffuseDezoomed, w.default.diffuse, F.default.zoom))
                        },
                        scale: {
                            type: "v3",
                            value: new m.Vector3(w.default.scaleX,w.default.scaleY,w.default.scaleZ)
                        },
                        radius: {
                            type: "f",
                            value: w.default.radius
                        },
                        angleStep: {
                            type: "f",
                            value: w.default.espacement * (Math.PI / 180)
                        },
                        stepVertical: {
                            type: "f",
                            value: w.default.stepVertical
                        },
                        shadowFactor: {
                            type: "f",
                            value: this.shadowFactor
                        },
                        spiralFactor: {
                            type: "f",
                            value: this.spiralFactor
                        },
                        offsetIndex: {
                            type: "f",
                            value: 0
                        },
                        gradient: {
                            type: "t",
                            value: C.default.get("gradient")
                        },
                        texture: {
                            type: "t",
                            value: e
                        },
                        sprite: {
                            type: "t",
                            value: t
                        },
                        textHD1: {
                            type: "t",
                            value: C.default.get("blank")
                        },
                        textHD2: {
                            type: "t",
                            value: C.default.get("blank")
                        },
                        iGlobalTime: {
                            type: "f",
                            value: 0
                        },
                        currentItem: {
                            type: "f",
                            value: 0
                        },
                        speed: {
                            type: "f",
                            value: 1
                        },
                        doWave: {
                            type: "f",
                            value: 0
                        },
                        total: {
                            type: "f",
                            value: A.default.getItems().length
                        },
                        openRad: {
                            type: "f",
                            value: 15
                        },
                        fogColor: {
                            type: "c",
                            value: new m.Color(w.default.fogColorSpiral)
                        },
                        fogNear: {
                            type: "f",
                            value: 0
                        },
                        fogFar: {
                            type: "f",
                            value: 14
                        }
                    };
                    this.uniforms = Object.assign({}, m.UniformsUtils.clone(i.uniforms), n);
                    var r = {};
                    J && (r.INSTANCED = ""),
                    this.material = new m.ShaderMaterial({
                        defines: r,
                        uniforms: this.uniforms,
                        vertexShader: H,
                        fragmentShader: j,
                        flatShading: !1,
                        lights: !0,
                        fog: !1,
                        skinning: !1,
                        transparent: !1
                    }),
                    K && (this.pickingMaterial = new m.ShaderMaterial({
                        defines: r,
                        uniforms: this.uniforms,
                        vertexShader: V,
                        fragmentShader: W,
                        flatShading: !1,
                        lights: !1,
                        fog: !1,
                        skinning: !1,
                        transparent: !1
                    }),
                    this.pickingMesh = new m.Mesh(this.geometry,this.pickingMaterial),
                    this.pickingMesh.frustumCulled = !1,
                    O.default.pickingScene.add(this.pickingMesh))
                }
            }, {
                key: "update",
                value: function(e) {
                    Y = Math.abs(y.default.deltaScroll) / 2e3,
                    X += .2 * (Y - X);
                    var t = Math.max(0, Math.min(1, X + this.forceSpeed));
                    this.mesh.material.uniforms.iGlobalTime.value = e,
                    this.mesh.material.uniforms.speed.value = t,
                    this.mesh.material.uniforms.offsetIndex.value = this.offsetIndex,
                    K && (this.pickingMesh.material.uniforms.iGlobalTime.value = e,
                    this.pickingMesh.material.uniforms.speed.value = t,
                    this.pickingMesh.material.uniforms.offsetIndex.value = this.offsetIndex),
                    this.updateItems()
                }
            }, {
                key: "scrollToPost",
                value: function() {}
            }, {
                key: "onScroll",
                value: function(e) {
                    if (!this.isZooming && this.isZoomed) {
                        this.lastY = e;
                        var t = this.getContainerY(e, w.default.stepVertical)
                          , i = this.getContainerRotationY(e);
                        O.default.container.rotation.y = i,
                        O.default.container.position.y = t,
                        K && (this.pickingMesh.rotation.y = i,
                        this.pickingMesh.position.y = t),
                        this.updateCurrentItem(e)
                    }
                }
            }, {
                key: "updateCurrentItem",
                value: function(e) {
                    var t = -e / $ + this.offsetIndex;
                    this.mesh.material.uniforms.currentItem.value = t,
                    K && (this.pickingMesh.material.uniforms.currentItem.value = t)
                }
            }, {
                key: "initGUI",
                value: function() {
                    var e = this
                      , t = M.default.add(w.default, "espacement", .1, 20)
                      , i = M.default.add(w.default, "stepVertical", .1, .7)
                      , n = M.default.add(w.default, "radius", 15, 50)
                      , r = M.default.addColor(w.default, "emissive")
                      , a = M.default.addColor(w.default, "diffuse")
                      , o = M.default.addColor(w.default, "emissiveDezoomed")
                      , s = M.default.addColor(w.default, "diffuseDezoomed")
                      , l = M.default.add(w.default, "scaleX", 0, 50)
                      , c = M.default.add(w.default, "scaleY", 0, 50)
                      , h = M.default.add(w.default, "scaleZ", 0, 5)
                      , u = M.default.addFolder("Fog Spiral")
                      , d = u.addColor(w.default, "fogColorSpiral")
                      , p = u.add(w.default, "nearSpiralZoom", 0, 500)
                      , f = u.add(w.default, "farSpiralZoom", 0, 500)
                      , m = u.add(w.default, "nearSpiralDezoom", 0, 500)
                      , v = u.add(w.default, "farSpiralDezoom", 0, 500);
                    t.onChange(function() {
                        e.updateTransforms()
                    }),
                    i.onChange(function() {
                        e.updateTransforms()
                    }),
                    n.onChange(function() {
                        e.updateTransforms()
                    }),
                    r.onChange(function() {
                        e.updateMaterial()
                    }),
                    a.onChange(function() {
                        e.updateMaterial()
                    }),
                    o.onChange(function() {
                        e.updateMaterial()
                    }),
                    s.onChange(function() {
                        e.updateMaterial()
                    }),
                    d.onChange(function() {
                        e.updateFogColor()
                    }),
                    p.onChange(function() {
                        e.updateFog()
                    }),
                    f.onChange(function() {
                        e.updateFog()
                    }),
                    m.onChange(function() {
                        e.updateFog()
                    }),
                    v.onChange(function() {
                        e.updateFog()
                    }),
                    l.onChange(function() {
                        e.updateTransforms()
                    }),
                    c.onChange(function() {
                        e.updateTransforms()
                    }),
                    h.onChange(function() {
                        e.updateTransforms()
                    })
                }
            }, {
                key: "updateTransforms",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !0
                      , t = w.default.espacement * (Math.PI / 180);
                    this.mesh.material.uniforms.radius.value = w.default.radius,
                    this.mesh.material.uniforms.angleStep.value = t,
                    this.mesh.material.uniforms.stepVertical.value = w.default.stepVertical,
                    this.mesh.material.uniforms.scale.value.set(w.default.scaleX, w.default.scaleY, w.default.scaleZ),
                    this.mesh.material.uniforms.doWave.value = this.doWave,
                    this.mesh.material.uniforms.shadowFactor.value = this.shadowFactor,
                    K && (this.pickingMesh.material.uniforms.radius.value = w.default.radius,
                    this.pickingMesh.material.uniforms.angleStep.value = t,
                    this.pickingMesh.material.uniforms.stepVertical.value = w.default.stepVertical,
                    this.pickingMesh.material.uniforms.scale.value.set(w.default.scaleX, w.default.scaleY, w.default.scaleZ),
                    this.pickingMesh.material.uniforms.doWave.value = this.doWave,
                    this.pickingMesh.material.uniforms.shadowFactor.value = this.shadowFactor),
                    e && this.onScroll(y.default.scroll)
                }
            }, {
                key: "updateMaterial",
                value: function() {
                    this.mesh.material.uniforms.diffuse.value = new m.Color(h(w.default.diffuseDezoomed, w.default.diffuse, F.default.zoom)),
                    this.mesh.material.uniforms.emissive.value = new m.Color(h(w.default.emissiveDezoomed, w.default.emissive, F.default.zoom)),
                    this.mesh.material.needsUpdate = !0
                }
            }, {
                key: "updateFog",
                value: function() {
                    this.mesh.material.uniforms.fogNear.value = F.default.zoom * w.default.nearSpiralZoom + (1 - F.default.zoom) * w.default.nearSpiralDezoom,
                    this.mesh.material.uniforms.fogFar.value = F.default.zoom * w.default.farSpiralZoom + (1 - F.default.zoom) * w.default.farSpiralDezoom
                }
            }, {
                key: "updateFogColor",
                value: function() {
                    this.mesh.material.uniforms.fogColor.value = new m.Color(w.default.fogColorSpiral)
                }
            }, {
                key: "getOffsetY",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1;
                    return t ? e - $ * this.toOffsetIndex : e - $ * this.offsetIndex
                }
            }, {
                key: "getContainerY",
                value: function(e, t) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : !1;
                    return this.getOffsetY(e, i) / $ * t
                }
            }, {
                key: "getContainerRotationY",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1
                      , i = 180 / w.default.espacement;
                    return this.getOffsetY(e, t) / $ / i * Math.PI
                }
            }, {
                key: "resize",
                value: function() {
                    var e = 15;
                    this.mesh.material.uniforms.openRad.value = e,
                    this.pickingMesh.material.uniforms.openRad.value = e
                }
            }]),
            t
        }(D.default), tt = new et;
        i.default = tt
    }
    , {
        App: 23,
        "content/Content": 24,
        "custom/Conf": 27,
        "custom/GUI": 28,
        "data/DatasManager": 30,
        "data/TexturesManager": 33,
        glslify: 5,
        "routing/Router": 39,
        three: 16,
        "tiny-emitter": 17,
        "webgl/Camera": 42,
        "webgl/CustomBufferGeometry": 44,
        "webgl/ThreeD": 51,
        "webgl/Utils3d": 52
    }],
    44: [function(e, t, i) {
        "use strict";
        function n(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function r(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var a = e("three")
          , o = (n(a),
        function s() {
            r(this, s)
        }
        );
        i.default = o
    }
    , {
        three: 16
    }],
    45: [function(e) {
        "use strict";
        function t(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        var i = e("three")
          , n = t(i);
        n.DDSLoader = function() {
            this._parser = n.DDSLoader.parse
        }
        ,
        n.DDSLoader.prototype = Object.create(n.CompressedTextureLoader.prototype),
        n.DDSLoader.prototype.constructor = n.DDSLoader,
        n.DDSLoader.parse = function(e, t) {
            function i(e) {
                return e.charCodeAt(0) + (e.charCodeAt(1) << 8) + (e.charCodeAt(2) << 16) + (e.charCodeAt(3) << 24)
            }
            function r(e) {
                return String.fromCharCode(255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255)
            }
            function a(e, t, i, n) {
                for (var r = i * n * 4, a = new Uint8Array(e,t,r), o = new Uint8Array(r), s = 0, l = 0, c = 0; n > c; c++)
                    for (var h = 0; i > h; h++) {
                        var u = a[l];
                        l++;
                        var d = a[l];
                        l++;
                        var p = a[l];
                        l++;
                        var f = a[l];
                        l++,
                        o[s] = p,
                        s++,
                        o[s] = d,
                        s++,
                        o[s] = u,
                        s++,
                        o[s] = f,
                        s++
                    }
                return o
            }
            var o = {
                mipmaps: [],
                width: 0,
                height: 0,
                format: null,
                mipmapCount: 1
            }
              , s = 542327876
              , l = 131072
              , c = 512
              , h = 1024
              , u = 2048
              , d = 4096
              , p = 8192
              , f = 16384
              , m = 32768
              , v = 4
              , g = i("DXT1")
              , y = i("DXT3")
              , _ = i("DXT5")
              , x = i("ETC1")
              , b = 31
              , w = 0
              , T = 1
              , M = 2
              , E = 3
              , S = 4
              , A = 7
              , P = 20
              , C = 21
              , L = 22
              , R = 23
              , O = 24
              , I = 25
              , D = 26
              , U = 28
              , F = new Int32Array(e,0,b);
            if (F[w] !== s)
                return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),
                o;
            if (!F[P] & v)
                return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),
                o;
            var k, N = F[C], z = !1;
            switch (N) {
            case g:
                k = 8,
                o.format = n.RGB_S3TC_DXT1_Format;
                break;
            case y:
                k = 16,
                o.format = n.RGBA_S3TC_DXT3_Format;
                break;
            case _:
                k = 16,
                o.format = n.RGBA_S3TC_DXT5_Format;
                break;
            case x:
                k = 8,
                o.format = n.RGB_ETC1_Format;
                break;
            default:
                if (!(32 === F[L] && 16711680 & F[R] && 65280 & F[O] && 255 & F[I] && 4278190080 & F[D]))
                    return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ", r(N)),
                    o;
                z = !0,
                k = 64,
                o.format = n.RGBAFormat
            }
            o.mipmapCount = 1,
            F[M] & l && t !== !1 && (o.mipmapCount = Math.max(1, F[A]));
            var B = F[U];
            if (o.isCubemap = B & c ? !0 : !1,
            !(!o.isCubemap || B & h && B & u && B & d && B & p && B & f && B & m))
                return console.error("THREE.DDSLoader.parse: Incomplete cubemap faces"),
                o;
            o.width = F[S],
            o.height = F[E];
            for (var G = F[T] + 4, H = o.isCubemap ? 6 : 1, j = 0; H > j; j++)
                for (var V = o.width, W = o.height, X = 0; X < o.mipmapCount; X++) {
                    if (z)
                        var Y = a(e, G, V, W)
                          , q = Y.length;
                    else
                        var q = Math.max(4, V) / 4 * Math.max(4, W) / 4 * k
                          , Y = new Uint8Array(e,G,q);
                    var Z = {
                        data: Y,
                        width: V,
                        height: W
                    };
                    o.mipmaps.push(Z),
                    G += q,
                    V = Math.max(V >> 1, 1),
                    W = Math.max(W >> 1, 1)
                }
            return o
        }
    }
    , {
        three: 16
    }],
    46: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , s = e("three")
          , l = r(s)
          , c = e("App")
          , h = n(c)
          , u = e("webgl/ThreeD")
          , d = n(u)
          , p = e("glslify")
          , f = (n(p),
        e("custom/Conf"))
          , m = (n(f),
        e("data/TexturesManager"))
          , v = n(m)
          , g = e("data/DatasManager")
          , y = n(g)
          , _ = "#define GLSLIFY 1\nuniform float uTime;\n//uniform sampler2D perlin;\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}".replace("#define GLSLIFY 1", "")
          , x = "#define GLSLIFY 1\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform sampler2D limit;\nuniform float uTime;\nuniform float factor;\n//uniform float opacity;\n//uniform vec3 bgColor;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n  vec2 d = -1.0 + 2.0 * vUv;\n  vec2 newUV = vec2( atan( d.y * 10.0, d.x ), .3 ) + uTime;\n  vec4 color = texture2D( texture, newUV );\n  vec4 color2 = texture2D( texture2, newUV );\n  color.rgb = mix( color.rgb, color2.rgb, factor );\n  color *= texture2D( limit, vUv ).r;\n  //color.rgb *= factor;\n  \n  /*\n  vec2 nUv = vUv;\n  nUv -= 0.5;\n  nUv *= 2.0;\n  float dist = abs( distance( .0, nUv.x ) );\n\n  color *= 0.5;\n  color *= min( 0.2, 1.0 - dist ) * 5.0;\n  //color.w = opacity;\n  */\n\n  gl_FragColor = vec4( color.rgb, 1. ); \n  \n}".replace("#define GLSLIFY 1", "")
          , b = function() {
            function e() {
                a(this, e),
                this.init()
            }
            return o(e, [{
                key: "init",
                value: function() {
                    var e = this
                      , t = v.default.get("godrays");
                    t.wrapS = t.wrapT = l.RepeatWrapping;
                    var i = v.default.get("godrays2");
                    i.wrapS = i.wrapT = l.RepeatWrapping,
                    this.factor = 0;
                    var n = {
                        uTime: {
                            type: "f",
                            value: 0
                        },
                        windowSize: {
                            type: "v2",
                            value: new l.Vector2(h.default.innerWidth,h.default.innerHeight)
                        },
                        texture: {
                            type: "t",
                            value: t
                        },
                        texture2: {
                            type: "t",
                            value: i
                        },
                        limit: {
                            type: "t",
                            value: v.default.get("limit")
                        },
                        factor: {
                            type: "f",
                            value: this.factor
                        }
                    }
                      , r = new l.ShaderMaterial({
                        uniforms: n,
                        vertexShader: _,
                        fragmentShader: x,
                        transparent: !0,
                        blending: l.AdditiveBlending,
                        depthWrite: !1,
                        depthTest: !1,
                        fog: !1,
                        lights: !1,
                        side: l.FrontSide
                    })
                      , a = new l.PlaneBufferGeometry(200,350,1,1);
                    this.mesh = new l.Mesh(a,r),
                    d.default.scene.add(this.mesh),
                    y.default.on("items-updated", function() {
                        e.boom()
                    })
                }
            }, {
                key: "boom",
                value: function() {
                    var e = this;
                    TweenLite.to(this, .4, {
                        factor: 1,
                        ease: Cubic.easeOut,
                        onUpdate: function() {
                            e.mesh.material.uniforms.factor.value = e.factor
                        },
                        onComplete: function() {
                            TweenLite.to(e, 1.5, {
                                factor: 0,
                                ease: Cubic.easeIn,
                                onUpdate: function() {
                                    e.mesh.material.uniforms.factor.value = e.factor
                                }
                            })
                        }
                    })
                }
            }, {
                key: "update",
                value: function(e) {
                    this.mesh.material.uniforms.uTime.value = e / 120 * .03
                }
            }, {
                key: "updateZoom",
                value: function(e) {
                    this.mesh.position.y = .5 * (e + 200),
                    this.mesh.position.z = .6 * (e - 150)
                }
            }]),
            e
        }();
        i.default = b
    }
    , {
        App: 23,
        "custom/Conf": 27,
        "data/DatasManager": 30,
        "data/TexturesManager": 33,
        glslify: 5,
        three: 16,
        "webgl/ThreeD": 51
    }],
    47: [function(e, t) {
        "use strict";
        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function n(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function r(e, t) {
            var i, n, r;
            i = t.x < 0 ? Math.random() * T / 2 + 5 : Math.random() * -T / 2 - 5,
            r = t.z < 0 ? Math.random() * T / 2 + 5 : Math.random() * -T / 2 - 5,
            n = Math.random() * T * 2 + T,
            void 0 != t && t.y < o && (n += t.y),
            e.x = i,
            e.y = n,
            e.z = r
        }
        var a, o, s, l, c, h = e("three"), u = n(h), d = e("webgl/MeshLine"), p = (i(d),
        e("data/TexturesManager")), f = (i(p),
        e("custom/Conf")), m = i(f), v = e("custom/GUI"), g = (i(v),
        e("data/DatasManager")), y = (i(g),
        e("App")), _ = i(y), x = 50, b = 25, w = [], T = m.default.radius / 2, M = 2 * T, E = function() {
            o = 300,
            c = new u.Vector2(_.default.screenWidth,_.default.screenHeight),
            this.opacity = 1,
            this.group = new u.Group,
            a = ["#FFFFFF", "#EEEEEE", "#DDDDDD"];
            for (var e = 0; b > e; e++) {
                var t = new S(e);
                this.group.add(t.mesh),
                w.push(t)
            }
        };
        E.prototype.hide = function() {
            var e = this;
            TweenLite.to(this, .5, {
                opacity: 0,
                onUpdate: function() {
                    e.updateOpacity()
                }
            })
        }
        ,
        E.prototype.show = function() {}
        ,
        E.prototype.update = function() {
            if (this.opacity > 0)
                for (var e, t = 0, i = w.length; i > t; t++)
                    e = w[t],
                    e.update()
        }
        ,
        E.prototype.updateScreenPosition = function(e) {
            s = e
        }
        ;
        var S = function(e) {
            this.i = e,
            this.alive = !0,
            this.visible = !0,
            this.time = 10 * Math.random(),
            this.speed = .013 + .01 * Math.random(),
            this.path = new A,
            this.path.start(!1, e);
            for (var t = new Float32Array(3 * x), i = 0; 3 * x > i; i += 3)
                t[i] = this.path.p1.x,
                t[i + 1] = this.path.p1.y,
                t[i + 2] = this.path.p1.z;
            this.meshLine = new u.MeshLine,
            this.meshLine.setGeometry(t, function() {
                return 1
            });
            var n = a[parseInt(Math.random() * a.length)];
            this.color = new u.Color(n);
            var r;
            l ? (r = l.clone(),
            r.uniforms.color.value = this.color) : (l = new u.MeshLineMaterial({
                opacity: 1,
                lineWidth: .2
            }),
            l.uniforms.color.value = this.color,
            r = l),
            this.mesh = new u.Mesh(this.meshLine.geometry,r),
            this.mesh.frustumCulled = !1
        };
        S.prototype.update = function() {
            for (var e = this.mesh.geometry.attributes.position.array, t = 0, i = 3 * (x - 1); i > t; t += 3)
                e[t + 0] = e[t + 3],
                e[t + 1] = e[t + 4],
                e[t + 2] = e[t + 5];
            this.time += this.speed,
            this.time > 10 && this.restart();
            var n = this.path.update(this.time);
            n.y > o,
            e[3 * (x - 1)] = n.x,
            e[3 * (x - 1) + 1] = n.y,
            e[3 * (x - 1) + 2] = n.z,
            this.meshLine.update(),
            this.visible != this.mesh.visible && (this.mesh.visible = this.visible)
        }
        ,
        S.prototype.restart = function() {
            this.alive = !0,
            this.time = -5;
            var e = a[parseInt(Math.random() * a.length)];
            this.color = new u.Color(e),
            this.mesh.material.uniforms.color.value = this.color,
            this.path.start(!0);
            for (var t = this.mesh.geometry.attributes.position.array, i = 0; 3 * x > i; i += 3)
                t[i] = this.path.p1.x,
                t[i + 1] = this.path.p1.y,
                t[i + 2] = this.path.p1.z;
            this.meshLine.update()
        }
        ,
        S.prototype.lastPosition = function() {
            return this.mesh.geometry.attributes.position.array[0]
        }
        ;
        var A = function() {
            this.p = {}
        };
        A.prototype.set = function(e, t, i, n) {
            this.p1 = e,
            this.p2 = t,
            this.p3 = i,
            this.p4 = n
        }
        ,
        A.prototype.start = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , i = 30 * (t - 2);
            this.addTime = 5 * Math.random(),
            this.radius = M + 5 + 30 * Math.random(),
            e && (i = -50 * Math.random() - 50),
            this.p1 = {
                x: Math.random() * M - T,
                y: i,
                z: Math.random() * M - T
            },
            this.p4 = {
                x: -this.p1.x,
                y: this.p1.y + 30,
                z: -this.p1.z
            },
            this.p2 = {
                x: (this.p1.x + this.p4.x) / 2,
                y: this.p1.y,
                z: (this.p1.z + this.p4.z) / 2
            },
            this.p3 = {
                x: (this.p1.x + this.p4.x) / 2,
                y: this.p4.y,
                z: (this.p1.z + this.p4.z) / 2
            }
        }
        ,
        A.prototype.update = function(e) {
            return this.p.x = Math.sin(e + this.addTime) * this.radius,
            this.p.y = 30 * e - 10,
            this.p.z = Math.cos(e + this.addTime) * this.radius,
            this.p
        }
        ,
        A.prototype.extend = function(e) {
            if (this.p1.x = this.p4.x,
            this.p1.y = this.p4.y,
            this.p1.z = this.p4.z,
            e) {
                var t = {};
                t.x = this.p4.x + (this.p4.x - this.p3.x),
                t.y = this.p4.y + (this.p4.y - this.p3.y),
                t.z = this.p4.z + (this.p4.z - this.p3.z),
                this.p2 = t
            } else
                r(this.p2);
            r(this.p4, this.p1),
            r(this.p3, this.p1)
        }
        ,
        t.exports = E
    }
    , {
        App: 23,
        "custom/Conf": 27,
        "custom/GUI": 28,
        "data/DatasManager": 30,
        "data/TexturesManager": 33,
        three: 16,
        "webgl/MeshLine": 48
    }],
    48: [function(e, t) {
        "use strict";
        function i(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        var n = e("three")
          , r = i(n);
        r.MeshLine = function() {
            this.positions = [],
            this.previous = [],
            this.next = [],
            this.side = [],
            this.width = [],
            this.indices_array = [],
            this.geometry = new r.BufferGeometry,
            this.widthCallback = null
        }
        ,
        r.MeshLine.prototype.setGeometry = function(e, t) {
            this.widthCallback = t,
            (e instanceof Float32Array || e instanceof Array) && (this.positions = e),
            this.process()
        }
        ,
        r.MeshLine.prototype.compareV3 = function(e, t, i) {
            var n = 6 * t
              , r = 6 * i;
            return e[n] === e[r] && e[n + 1] === e[r + 1] && e[n + 2] === e[r + 2]
        }
        ,
        r.MeshLine.prototype.process = function() {
            var e = this.positions.length / 6;
            this.previous = [],
            this.next = [],
            this.side = [],
            this.width = [],
            this.indices_array = [];
            for (var t = 0; e > t; t++)
                this.side.push(1),
                this.side.push(-1);
            for (var i, t = 0; e > t; t++)
                i = this.widthCallback ? this.widthCallback(t / (e - 1)) : 1,
                this.width.push(i),
                this.width.push(i);
            this.compareV3(this.positions, 0, e - 1) ? (this.previous.push(this.positions[6 * (e - 2) + 0], this.positions[6 * (e - 2) + 1], this.positions[6 * (e - 2) + 2]),
            this.previous.push(this.positions[6 * (e - 2) + 0], this.positions[6 * (e - 2) + 1], this.positions[6 * (e - 2) + 2])) : (this.previous.push(this.positions[0], this.positions[1], this.positions[2]),
            this.previous.push(this.positions[0], this.positions[1], this.positions[2]));
            for (var t = 0; e - 1 > t; t++)
                this.previous.push(this.positions[6 * t + 0], this.positions[6 * t + 1], this.positions[6 * t + 2]),
                this.previous.push(this.positions[6 * t + 0], this.positions[6 * t + 1], this.positions[6 * t + 2]);
            for (var t = 1; e > t; t++)
                this.next.push(this.positions[6 * t + 0], this.positions[6 * t + 1], this.positions[6 * t + 2]),
                this.next.push(this.positions[6 * t + 0], this.positions[6 * t + 1], this.positions[6 * t + 2]);
            this.compareV3(this.positions, e - 1, 0) ? (this.next.push(this.positions[6], this.positions[7], this.positions[8]),
            this.next.push(this.positions[6], this.positions[7], this.positions[8])) : (this.next.push(this.positions[6 * (e - 1) + 0], this.positions[6 * (e - 1) + 1], this.positions[6 * (e - 1) + 2]),
            this.next.push(this.positions[6 * (e - 1) + 0], this.positions[6 * (e - 1) + 1], this.positions[6 * (e - 1) + 2]));
            for (var t = 0; e - 1 > t; t++) {
                var n = 2 * t;
                this.indices_array.push(n, n + 1, n + 2),
                this.indices_array.push(n + 2, n + 1, n + 3)
            }
            this.geometry.addAttribute("position", new r.BufferAttribute(new Float32Array(this.positions),3)),
            this.geometry.addAttribute("previous", new r.BufferAttribute(new Float32Array(this.previous),3)),
            this.geometry.addAttribute("next", new r.BufferAttribute(new Float32Array(this.next),3)),
            this.geometry.addAttribute("side", new r.BufferAttribute(new Float32Array(this.side),1)),
            this.geometry.addAttribute("width", new r.BufferAttribute(new Float32Array(this.width),1)),
            this.geometry.setIndex(new r.BufferAttribute(new Uint16Array(this.indices_array),1))
        }
        ,
        r.MeshLine.prototype.update = function() {
            var e, t = this.positions.length / 6, i = this.geometry.attributes.position.array, n = this.geometry.attributes.previous.array, r = this.geometry.attributes.next.array;
            e = this.compareV3(i, 0, t - 1) ? t - 2 : 0,
            n[0] = i[6 * e + 0],
            n[1] = i[6 * e + 1],
            n[2] = i[6 * e + 2],
            n[3] = i[6 * e + 3],
            n[4] = i[6 * e + 4],
            n[5] = i[6 * e + 5];
            for (var a = 0; t - 1 > a; a++)
                n[6 * (a + 1) + 0] = i[6 * a + 0],
                n[6 * (a + 1) + 1] = i[6 * a + 1],
                n[6 * (a + 1) + 2] = i[6 * a + 2],
                n[6 * (a + 1) + 3] = i[6 * a + 0],
                n[6 * (a + 1) + 4] = i[6 * a + 1],
                n[6 * (a + 1) + 5] = i[6 * a + 2];
            for (var a = 1; t > a; a++)
                r[6 * (a - 1) + 0] = i[6 * a + 0],
                r[6 * (a - 1) + 1] = i[6 * a + 1],
                r[6 * (a - 1) + 2] = i[6 * a + 2],
                r[6 * (a - 1) + 3] = i[6 * a + 0],
                r[6 * (a - 1) + 4] = i[6 * a + 1],
                r[6 * (a - 1) + 5] = i[6 * a + 2];
            e = this.compareV3(i, t - 1, 0) ? 1 : t - 1,
            r[6 * (a - 1) + 0] = i[6 * e + 0],
            r[6 * (a - 1) + 1] = i[6 * e + 1],
            r[6 * (a - 1) + 2] = i[6 * e + 2],
            r[6 * (a - 1) + 3] = i[6 * e + 0],
            r[6 * (a - 1) + 4] = i[6 * e + 1],
            r[6 * (a - 1) + 5] = i[6 * e + 2],
            this.geometry.attributes.position.needsUpdate = !0,
            this.geometry.attributes.previous.needsUpdate = !0,
            this.geometry.attributes.next.needsUpdate = !0
        }
        ,
        r.MeshLineMaterial = function() {
            this.material = new r.RawShaderMaterial({
                uniforms: {
                    lineWidth: {
                        type: "f",
                        value: 1
                    },
                    resolution: {
                        type: "v2",
                        value: resolution
                    },
                    near: {
                        type: "f",
                        value: camera.near
                    },
                    far: {
                        type: "f",
                        value: camera.far
                    }
                },
                vertexShader: document.getElementById("vs-line").textContent,
                fragmentShader: document.getElementById("fs-line").textContent
            })
        }
        ,
        r.MeshLineMaterial = function(e) {
            function t(e, t) {
                return void 0 === e ? t : e
            }
            var i = ["precision highp float;", "", "attribute vec3 position;", "attribute vec3 previous;", "attribute vec3 next;", "attribute float side;", "attribute float width;", "", "uniform mat4 projectionMatrix;", "uniform mat4 modelViewMatrix;", "uniform vec2 resolution;", "uniform float lineWidth;", "uniform vec3 color;", "uniform float opacity;", "uniform float near;", "uniform float far;", "", "varying vec4 vColor;", "", "vec2 fix( vec4 i, float aspect ) {", "", "    vec2 res = i.xy / i.w;", "    res.x *= aspect;", "    return res;", "", "}", "", "void main() {", "", "    float aspect = resolution.x / resolution.y;", "  float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);", "", "    vColor = vec4( color, opacity );", "", "    mat4 m = projectionMatrix * modelViewMatrix;", "    vec4 finalPosition = m * vec4( position, 1.0 );", "    vec4 prevPos = m * vec4( previous, 1.0 );", "    vec4 nextPos = m * vec4( next, 1.0 );", "", "    vec2 currentP = fix( finalPosition, aspect );", "    vec2 prevP = fix( prevPos, aspect );", "    vec2 nextP = fix( nextPos, aspect );", "", "  float pixelWidth = finalPosition.w * pixelWidthRatio;", "    float w = 1.8 * pixelWidth * lineWidth * width;", "", "        w = 1.8 * lineWidth * width;", "", "    vec2 dir;", "        vec2 dir1 = normalize( currentP - prevP );", "        vec2 dir2 = normalize( nextP - currentP );", "        dir = normalize( dir1 + dir2 );", "", "        vec2 perp = vec2( -dir1.y, dir1.x );", "        vec2 miter = vec2( -dir.y, dir.x );", "", "", "    vec2 normal = vec2( -dir.y, dir.x );", "    normal.x /= aspect;", "    normal *= .5 * w;", "", "    vec4 offset = vec4( normal * side, 0.0, 1.0 );", "    finalPosition.xy += offset.xy;", "", "    gl_Position = finalPosition;", "", "}"]
              , n = ["#extension GL_OES_standard_derivatives : enable", "precision mediump float;", "", "", "varying vec4 vColor;", "", "void main() {", "", "    vec4 c = vColor;", "    gl_FragColor = c;", "", "}"];
            r.Material.call(this),
            e = e || {},
            this.lineWidth = t(e.lineWidth, 1),
            this.color = t(e.color, new r.Color(16777215)),
            this.opacity = t(e.opacity, 1),
            this.resolution = t(e.resolution, new r.Vector2(1,1)),
            this.near = t(e.near, 1),
            this.far = t(e.far, 1);
            var a = new r.RawShaderMaterial({
                uniforms: {
                    lineWidth: {
                        type: "f",
                        value: this.lineWidth
                    },
                    color: {
                        type: "c",
                        value: this.color
                    },
                    opacity: {
                        type: "f",
                        value: this.opacity
                    },
                    resolution: {
                        type: "v2",
                        value: this.resolution
                    },
                    near: {
                        type: "f",
                        value: this.near
                    },
                    far: {
                        type: "f",
                        value: this.far
                    }
                },
                vertexShader: i.join("\r\n"),
                fragmentShader: n.join("\r\n")
            });
            return delete e.lineWidth,
            delete e.opacity,
            delete e.resolution,
            delete e.near,
            delete e.far,
            a.type = "MeshLineMaterial",
            a.setValues(e),
            a
        }
        ,
        r.MeshLineMaterial.prototype = Object.create(r.Material.prototype),
        r.MeshLineMaterial.prototype.constructor = r.MeshLineMaterial,
        r.MeshLineMaterial.prototype.copy = function(e) {
            return r.Material.prototype.copy.call(this, e),
            this.lineWidth = e.lineWidth,
            this.color.copy(e.color),
            this.opacity = e.opacity,
            this.resolution.copy(e.resolution),
            this.near = e.near,
            this.far = e.far,
            this
        }
        ,
        t.exports = r.MeshLine
    }
    , {
        three: 16
    }],
    49: [function(e) {
        "use strict";
        function t(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        var i = e("three")
          , n = t(i);
        n.PVRLoader = function(e) {
            this.manager = void 0 !== e ? e : n.DefaultLoadingManager,
            this._parser = n.PVRLoader.parse
        }
        ,
        n.PVRLoader.prototype = Object.create(n.CompressedTextureLoader.prototype),
        n.PVRLoader.prototype.constructor = n.PVRLoader,
        n.PVRLoader.parse = function(e, t) {
            var i = 13
              , r = new Uint32Array(e,0,i)
              , a = {
                buffer: e,
                header: r,
                loadMipmaps: t
            };
            return 55727696 === r[0] ? n.PVRLoader._parseV3(a) : 559044176 === r[11] ? n.PVRLoader._parseV2(a) : void console.error("THREE.PVRLoader: Unknown PVR format.")
        }
        ,
        n.PVRLoader._parseV3 = function(e) {
            var t, i, r = e.header, a = r[12], o = r[2], s = r[6], l = r[7], c = r[10], h = r[11];
            switch (o) {
            case 0:
                t = 2,
                i = n.RGB_PVRTC_2BPPV1_Format;
                break;
            case 1:
                t = 2,
                i = n.RGBA_PVRTC_2BPPV1_Format;
                break;
            case 2:
                t = 4,
                i = n.RGB_PVRTC_4BPPV1_Format;
                break;
            case 3:
                t = 4,
                i = n.RGBA_PVRTC_4BPPV1_Format;
                break;
            default:
                console.error("THREE.PVRLoader: Unsupported PVR format:", o)
            }
            return e.dataPtr = 52 + a,
            e.bpp = t,
            e.format = i,
            e.width = l,
            e.height = s,
            e.numSurfaces = c,
            e.numMipmaps = h,
            e.isCubemap = 6 === c,
            n.PVRLoader._extract(e)
        }
        ,
        n.PVRLoader._parseV2 = function(e) {
            var t, i, r = e.header, a = r[0], o = r[1], s = r[2], l = r[3], c = r[4], h = r[10], u = r[12], d = 255, p = 24, f = 25, m = c & d, v = h > 0;
            return m === f ? (i = v ? n.RGBA_PVRTC_4BPPV1_Format : n.RGB_PVRTC_4BPPV1_Format,
            t = 4) : m === p ? (i = v ? n.RGBA_PVRTC_2BPPV1_Format : n.RGB_PVRTC_2BPPV1_Format,
            t = 2) : console.error("THREE.PVRLoader: Unknown PVR format:", m),
            e.dataPtr = a,
            e.bpp = t,
            e.format = i,
            e.width = s,
            e.height = o,
            e.numSurfaces = u,
            e.numMipmaps = l + 1,
            e.isCubemap = 6 === u,
            n.PVRLoader._extract(e)
        }
        ,
        n.PVRLoader._extract = function(e) {
            var t = {
                mipmaps: [],
                width: e.width,
                height: e.height,
                format: e.format,
                mipmapCount: e.numMipmaps,
                isCubemap: e.isCubemap
            }
              , i = e.buffer
              , n = e.dataPtr
              , r = e.bpp
              , a = e.numSurfaces
              , o = 0
              , s = 0
              , l = 0
              , c = 0
              , h = 0
              , u = 0;
            2 === r ? (l = 8,
            c = 4) : (l = 4,
            c = 4),
            s = l * c * r / 8,
            t.mipmaps.length = e.numMipmaps * a;
            for (var d = 0; d < e.numMipmaps; ) {
                var p = e.width >> d
                  , f = e.height >> d;
                h = p / l,
                u = f / c,
                2 > h && (h = 2),
                2 > u && (u = 2),
                o = h * u * s;
                for (var m = 0; a > m; m++) {
                    var v = new Uint8Array(i,n,o)
                      , g = {
                        data: v,
                        width: p,
                        height: f
                    };
                    t.mipmaps[m * e.numMipmaps + d] = g,
                    n += o
                }
                d++
            }
            return t
        }
    }
    , {
        three: 16
    }],
    50: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , s = e("three")
          , l = r(s)
          , c = e("glslify")
          , h = (n(c),
        e("data/TexturesManager"))
          , u = n(h)
          , d = e("App")
          , p = n(d)
          , f = e("custom/Conf")
          , m = n(f)
          , v = '#define GLSLIFY 1\n//\n// GLSL textureless classic 2D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec2 fade(vec2 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec2 P)\n{\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod289(Pi); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n\n  vec4 i = permute(permute(ix) + iy);\n\n  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;\n  vec4 gy = abs(gx) - 0.5 ;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n\n  vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\n\nuniform float uTime;\nuniform float uEffectAmount;\n\nattribute float size;\n//attribute float uv;\nattribute float customColor;\n//attribute vec3 customSize;\nattribute float textureChoice;\n\nvarying float vColor;\n//varying vec2 vUv;\nvarying vec4 vPosition;\nvarying float vNoise;\nvarying float vTextureChoice;\n\nfloat when_eq(float x, float y) {\n  return 1.0 - abs(sign(x - y));\n}\n\nvoid main() {\n\n  vColor = customColor;\n  vTextureChoice = textureChoice;\n\n  vec3 newPosition = position;\n  float noise = cnoise( newPosition.xy + uTime );\n  \n  vNoise = noise;\n\n  newPosition.y += noise * 15.0;\n  newPosition.x += noise * customColor * 15.0;\n\n  vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0);\n  \n  gl_Position = projectionMatrix * mvPosition;\n  vPosition = gl_Position;\n   \n  gl_PointSize = max(0.2 * when_eq( floor( vTextureChoice ), 1.0), size) * (15.0 + (35.0 * when_eq( floor( vTextureChoice ), 1.0))) * ( 300.0 / length( mvPosition.xyz ) );\n\n}'.replace("#define GLSLIFY 1", "")
          , g = "#define GLSLIFY 1\nuniform vec3 color;\nuniform sampler2D texture;\nuniform sampler2D texture2;\nuniform sampler2D texture3;\nuniform float opacity;\nuniform float uTime;\nuniform vec2 windowSize;\n\nvarying vec4 vPosition;\nvarying float vNoise;\nvarying float vColor;\nvarying float vTextureChoice;\n\n//varying vec2 vUv;\n\nvoid main() {\n\n  vec3 fColor = vec3(vColor);//mix( color, vColor, vec3(0.25, 0.25, 0.25) );\n\n  //float depth = gl_FragCoord.z / gl_FragCoord.w;\n  //float fogFactor = smoothstep( 300.0, 600.0, depth );\n  \n  vec4 pos = vPosition;\n\n  float mid = 0.5;\n  float alpha = 1.0;\n  float rotateFactor;\n  vec4 rotatedTexture;\n  vec2 rotationValue;\n\n  // TODO remove if\n  if( floor( vTextureChoice ) != 1.0 ){\n    alpha = 1.0 - smoothstep( 0.0, 1000.0, vPosition.w );\n    rotateFactor = 5.0;\n  }else{\n    float percentScreen = ( windowSize.x / 100.0 ) * 40.0;\n    if( gl_FragCoord.x < percentScreen ) {\n      alpha = 1.0 - smoothstep( 0.0, percentScreen, gl_FragCoord.x);\n    }else{\n      alpha = smoothstep( windowSize.x / 2.0, windowSize.x, gl_FragCoord.x );\n    }\n    alpha *= (1.0 - smoothstep( 50.0, 150.0, vPosition.w ) );\n    rotateFactor = 1.0;\n  }\n  \n  rotationValue = vec2( cos( vNoise*rotateFactor ) * ( gl_PointCoord.x - mid ) + sin( vNoise*rotateFactor ) * (gl_PointCoord.y - mid ) + mid, cos( vNoise*rotateFactor ) * ( gl_PointCoord.y - mid ) - sin( vNoise*rotateFactor ) * ( gl_PointCoord.x - mid ) + mid );\n\n  if( floor( vTextureChoice ) == 0.0 ){\n    rotatedTexture = texture2D( texture,  rotationValue );\n  }else if( floor( vTextureChoice ) == 1.0 ){\n    rotatedTexture = texture2D( texture2,  rotationValue );\n  }else{\n    rotatedTexture = texture2D( texture3,  rotationValue );\n  }\n\n  gl_FragColor = vec4( fColor, alpha * opacity );\n  gl_FragColor = gl_FragColor * rotatedTexture;\n  \n}".replace("#define GLSLIFY 1", "")
          , y = 1e3
          , _ = function() {
            function e() {
                a(this, e),
                this.opacity = 1;
                for (var t = u.default.get("particles"), i = u.default.get("particles2"), n = u.default.get("particles3"), r = {
                    uTime: {
                        type: "f",
                        value: 1
                    },
                    windowSize: {
                        type: "v2",
                        value: new l.Vector2(p.default.innerWidth,p.default.innerHeight)
                    },
                    uFactor: {
                        type: "f",
                        value: 1
                    },
                    color: {
                        type: "c",
                        value: new l.Color(16777215)
                    },
                    texture: {
                        type: "t",
                        value: t
                    },
                    texture2: {
                        type: "t",
                        value: i
                    },
                    texture3: {
                        type: "t",
                        value: n
                    },
                    opacity: {
                        type: "f",
                        value: 1
                    }
                }, o = new l.ShaderMaterial({
                    uniforms: r,
                    vertexShader: v,
                    fragmentShader: g,
                    transparent: !0,
                    fog: !1,
                    lights: !1
                }), s = new l.BufferGeometry, c = new Float32Array(3 * y), h = new Float32Array(y), d = new Float32Array(y), f = new Float32Array(y), _ = (new l.Color,
                0), x = 0; y > _; _++,
                x += 3) {
                    y - 50 > _ ? (c[x + 0] = 400 * Math.random() - 200,
                    c[x + 1] = 300 * Math.random() - 100,
                    c[x + 2] = 400 * Math.random() - 200,
                    d[_] = Math.random()) : (c[x + 0] = (Math.random() - .5) * m.default.radius * 4,
                    c[x + 1] = (Math.random() - .5) * m.default.radius * 4,
                    c[x + 2] = (Math.random() - .5) * m.default.radius * 4,
                    d[_] = .001);
                    var b = 1 - .1 * Math.random();
                    h[_] = b,
                    f[_] = 3 * Math.random()
                }
                s.addAttribute("position", new l.BufferAttribute(c,3)),
                s.addAttribute("customColor", new l.BufferAttribute(h,1)),
                s.addAttribute("size", new l.BufferAttribute(d,1)),
                s.addAttribute("textureChoice", new l.BufferAttribute(f,1)),
                this.mesh = new l.Points(s,o)
            }
            return o(e, [{
                key: "hide",
                value: function() {
                    var e = this;
                    TweenMax.to(this, .5, {
                        opacity: 0,
                        onUpdate: function() {
                            e.updateOpacity()
                        }
                    })
                }
            }, {
                key: "show",
                value: function() {
                    var e = this;
                    TweenMax.to(this, .5, {
                        delay: 1,
                        opacity: 1,
                        onUpdate: function() {
                            e.updateOpacity()
                        }
                    })
                }
            }, {
                key: "updateOpacity",
                value: function() {
                    this.mesh.material.uniforms.opacity.value = this.opacity,
                    this.mesh.visible = 0 == this.opacity ? !1 : !0
                }
            }, {
                key: "update",
                value: function(e) {
                    this.mesh.material.uniforms.uTime.value = .002 * e
                }
            }, {
                key: "setLightColor",
                value: function(e) {
                    this.mesh.material.uniforms.color.value = e.color
                }
            }, {
                key: "resize",
                value: function() {}
            }]),
            e
        }();
        i.default = _
    }
    , {
        App: 23,
        "custom/Conf": 27,
        "data/TexturesManager": 33,
        glslify: 5,
        three: 16
    }],
    51: [function(e, t, i) {
        "use strict";
        function n(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function r(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        function a(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = function() {
            function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                    var n = t[i];
                    n.enumerable = n.enumerable || !1,
                    n.configurable = !0,
                    "value"in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, i, n) {
                return i && e(t.prototype, i),
                n && e(t, n),
                t
            }
        }()
          , s = e("three")
          , l = r(s)
          , c = e("glslify")
          , h = (n(c),
        e("App"))
          , u = n(h)
          , d = e("custom/Conf")
          , p = n(d)
          , f = e("custom/GUI")
          , m = n(f)
          , v = e("data/DatasManager")
          , g = n(v)
          , y = e("content/Content")
          , _ = n(y)
          , x = e("ui/UI")
          , b = (n(x),
        e("dom-css"))
          , w = n(b)
          , T = e("webgl/Utils3d")
          , M = (n(T),
        e("webgl/Camera"))
          , E = n(M)
          , S = e("webgl/Carrousel")
          , A = n(S)
          , P = e("webgl/Godray")
          , C = n(P)
          , L = e("webgl/Background")
          , R = n(L)
          , O = e("webgl/Particles")
          , I = n(O)
          , D = e("webgl/Lines")
          , U = n(D);
        window.THREE = l;
        var F = 0
          , k = new Uint8Array(4)
          , N = !1
          , z = void 0
          , B = -10
          , G = 30
          , H = new l.Color("#DDDDDD")
          , j = new l.Vector3
          , V = -1
          , W = 4
          , X = !0
          , Y = !1
          , q = function() {
            function e() {
                a(this, e)
            }
            return o(e, [{
                key: "init",
                value: function() {
                    var e = this;
                    this.clock = new l.Clock(!1),
                    this.initEngine(),
                    this.initObjects(),
                    this.initLights(),
                    APP.dev && this.initGUI(),
                    this.updateBackground(),
                    this.updateCamera(),
                    this.updateFog(),
                    this.carrousel.spiralize(),
                    u.default.on("resize", function() {
                        return e.resize()
                    }),
                    u.default.on("fps-alert", function() {
                        return e.adjustQuality()
                    }),
                    this.el.querySelector("canvas").style.opacity = 1
                }
            }, {
                key: "initEngine",
                value: function() {
                    this.el = document.querySelector(".three"),
                    this.canvas = this.el.querySelector("canvas"),
                    this.scene = new l.Scene,
                    this.scene.fog = new l.Fog(p.default.fogColor,B,G),
                    E.default.init();
                    var e = !0
                      , t = Math.max(1, Math.min(1.75, window.devicePixelRatio));
                    t > 1 && (e = !1),
                    e = !0,
                    t = 1,
                    this.renderer = new l.WebGLRenderer({
                        antialias: e,
                        canvas: this.canvas
                    }),
                    this.renderer.setPixelRatio(t),
                    this.renderer.setSize(u.default.innerWidth, u.default.innerHeight),
                    this.renderer.setClearColor(new l.Color("#000000")),
                    this.renderer.gammaInput = !0,
                    this.renderer.gammaOutput = !0,
                    this.elX = 0,
                    X && (this.pickingScene = new l.Scene,
                    this.pickingTexture = new l.WebGLRenderTarget(u.default.innerWidth / W,u.default.innerHeight / W),
                    this.pickingTexture.texture.minFilter = l.LinearFilter,
                    this.pickingTexture.texture.generateMipmaps = !1)
                }
            }, {
                key: "adjustQuality",
                value: function() {}
            }, {
                key: "initObjects",
                value: function() {
                    this.container = new l.Group,
                    this.scene.add(this.container),
                    this.lines = new U.default,
                    this.container.add(this.lines.group),
                    this.particles = new I.default(this),
                    this.container.add(this.particles.mesh),
                    this.background = new R.default(this),
                    this.carrousel = A.default,
                    this.carrousel.init(this),
                    this.godray = new C.default(this)
                }
            }, {
                key: "initLights",
                value: function() {
                    this.lights = [];
                    for (var e = void 0, t = 0; 2 > t; t++)
                        e = new l.SpotLight(16777215,4,2 * p.default.radius,.7,0,1),
                        0 == t ? e.position.set(0, -10, 0) : e.position.set(0, 25, 0),
                        this.scene.add(e),
                        this.lights.push(e);
                    z = new l.PointLight(16777215,1,500,2),
                    z.position.set(0, 50, 200),
                    this.scene.add(z)
                }
            }, {
                key: "forceDezoomZoom",
                value: function() {
                    var e = this;
                    _.default.hide(!0),
                    this.dezoom(!0),
                    setTimeout(function() {
                        _.default.show(.5),
                        e.zoom()
                    }, 1050)
                }
            }, {
                key: "zoom",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1
                      , i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : !1
                      , n = 1.6
                      , r = 0
                      , a = Quart.easeInOut
                      , o = -.2
                      , s = 15;
                    t && (r = .4),
                    i && (o = 0,
                    s = 12),
                    TweenLite.to(E.default, n, {
                        z: s,
                        zoom: 1,
                        delay: r,
                        ease: a,
                        onUpdate: function() {
                            e.updateFog(),
                            e.updateCamera()
                        }
                    }),
                    TweenLite.to(E.default, n, {
                        delay: r,
                        x: 12,
                        y: 0,
                        rotationY: o,
                        ease: Quart.easeInOut,
                        onUpdate: function() {
                            e.updateFog(),
                            e.updateCamera()
                        },
                        onComplete: function() {
                            _.default.show()
                        }
                    }),
                    this.carrousel.zoom(t, i)
                }
            }, {
                key: "dezoom",
                value: function() {
                    var e = this
                      , t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1;
                    this.hout();
                    var i = 1.6;
                    TweenLite.to(E.default, i, {
                        z: 150,
                        zoom: 0,
                        y: .28 * g.default.getItems().length,
                        x: 0,
                        rotationY: 0,
                        ease: Quart.easeInOut,
                        onUpdate: function() {
                            e.updateFog(),
                            e.updateCamera()
                        },
                        onComplete: function() {}
                    }),
                    this.carrousel.dezoom(t)
                }
            }, {
                key: "moveLeft",
                value: function() {
                    var e = this;
                    TweenLite.to(this, 1, {
                        elX: -300,
                        ease: Cubic.easeInOut,
                        onUpdate: function() {
                            return e.updateElX()
                        }
                    })
                }
            }, {
                key: "moveRight",
                value: function() {
                    var e = this;
                    TweenLite.to(this, 1, {
                        elX: 0,
                        ease: Cubic.easeInOut,
                        onUpdate: function() {
                            return e.updateElX()
                        }
                    })
                }
            }, {
                key: "zoomToPost",
                value: function() {
                    this.hout(),
                    this.zoom(!1, !0)
                }
            }, {
                key: "updateElX",
                value: function() {
                    w.default(this.el, "transform", "translate3d(" + this.elX + "px,0,0)")
                }
            }, {
                key: "updateFog",
                value: function() {
                    this.scene.fog.near = E.default.zoom * p.default.nearZoom + (1 - E.default.zoom) * p.default.nearDezoom,
                    this.scene.fog.far = E.default.zoom * p.default.farZoom + (1 - E.default.zoom) * p.default.farDezoom,
                    this.carrousel.updateFog()
                }
            }, {
                key: "initGUI",
                value: function() {
                    var e = this
                      , t = m.default.addColor(p.default, "backgroundColor");
                    t.onChange(function() {
                        e.updateBackground()
                    });
                    var i = m.default.addFolder("Fog")
                      , n = i.addColor(p.default, "fogColor")
                      , r = i.add(p.default, "nearZoom", 0, 500)
                      , a = i.add(p.default, "farZoom", 0, 500)
                      , o = i.add(p.default, "nearDezoom", 0, 500)
                      , s = i.add(p.default, "farDezoom", 0, 500);
                    n.onChange(function() {
                        e.updateBackground()
                    }),
                    r.onChange(function() {
                        e.updateFog()
                    }),
                    a.onChange(function() {
                        e.updateFog()
                    }),
                    o.onChange(function() {
                        e.updateFog()
                    }),
                    s.onChange(function() {
                        e.updateFog()
                    })
                }
            }, {
                key: "update",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : !1;
                    if (e && this.clock.start(),
                    F++,
                    E.default.update(),
                    p.default.animationLight)
                        for (var t = 0, i = this.lights.length; i > t; t++)
                            this.lights[t].position.x = 5 * Math.cos(F * (t + 1) / 100),
                            this.lights[t].position.z = 5 * Math.sin(F * (t + 1) / 100),
                            j.y = this.lights[t].position.y,
                            this.lights[t].lookAt(j);
                    this.carrousel.mouseEnabled && this.pick(),
                    this.particles.update(F),
                    this.lines.update(F),
                    this.carrousel.update(F),
                    this.godray && this.godray.update(F),
                    this.background && this.background.update(F),
                    Y || this.renderer.render(this.scene, E.default.cam)
                }
            }, {
                key: "pick",
                value: function() {
                    if (X && F % 2 == 0) {
                        var e = this.doPick();
                        e != V && e != H.getHex() ? (this.hover(),
                        V = e,
                        this.carrousel.setPick(e)) : e == H.getHex() && N && (V = -1,
                        this.carrousel.setPick(-1),
                        this.hout())
                    }
                }
            }, {
                key: "doPick",
                value: function() {
                    if (X) {
                        var e = parseInt((this.carrousel.mouse.x - this.elX) / W)
                          , t = parseInt((u.default.innerHeight - this.carrousel.mouse.y) / W);
                        this.renderer.render(this.pickingScene, E.default.cam, this.pickingTexture),
                        this.renderer.readRenderTargetPixels(this.pickingTexture, e, t, 1, 1, k);
                        var i = k[0] << 16 | k[1] << 8 | k[2];
                        return i
                    }
                    return -1
                }
            }, {
                key: "hover",
                value: function() {
                    N || (N = !0,
                    this.renderer.domElement.classList.add("hover"))
                }
            }, {
                key: "hout",
                value: function() {
                    N && (N = !1,
                    this.renderer.domElement.classList.remove("hover"))
                }
            }, {
                key: "getPickId",
                value: function() {
                    var e = this.doPick();
                    return e != H.getHex() ? e : !1
                }
            }, {
                key: "resize",
                value: function() {
                    E.default.resize(),
                    this.carrousel.resize(),
                    this.renderer.setSize(u.default.innerWidth, u.default.innerHeight),
                    X && this.pickingTexture.setSize(u.default.innerWidth / W, u.default.innerHeight / W)
                }
            }, {
                key: "updateCamera",
                value: function() {
                    this.godray && this.godray.updateZoom(E.default.z),
                    this.background && this.background.updateZoom(E.default.z)
                }
            }, {
                key: "updateBackground",
                value: function() {
                    H.set(p.default.backgroundColor),
                    this.scene.fog.color.set(p.default.fogColor),
                    this.updateFog(),
                    this.background.updateColor(),
                    this.renderer.setClearColor(p.default.backgroundColor),
                    X && this.pickingTexture.setSize(u.default.innerWidth / W, u.default.innerHeight / W)
                }
            }]),
            e
        }()
          , Z = new q;
        i.default = Z
    }
    , {
        App: 23,
        "content/Content": 24,
        "custom/Conf": 27,
        "custom/GUI": 28,
        "data/DatasManager": 30,
        "dom-css": 55,
        glslify: 5,
        three: 16,
        "ui/UI": 40,
        "webgl/Background": 41,
        "webgl/Camera": 42,
        "webgl/Carrousel": 43,
        "webgl/Godray": 46,
        "webgl/Lines": 47,
        "webgl/Particles": 50,
        "webgl/Utils3d": 52
    }],
    52: [function(e, t) {
        "use strict";
        function i(e) {
            return e && e.__esModule ? e : {
                "default": e
            }
        }
        function n(e) {
            if (e && e.__esModule)
                return e;
            var t = {};
            if (null != e)
                for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            return t.default = e,
            t
        }
        var r = e("three")
          , a = n(r)
          , o = e("App")
          , s = i(o)
          , l = {}
          , c = {
            zero: new a.Vector3(0,0,0),
            vector: new a.Vector3,
            from3dTo2d: function(e, t, i) {
                var n = e.project(i);
                return n.x = (n.x + 1) / 2 * s.default.innerWidth,
                n.y = -(n.y - 1) / 2 * s.default.innerHeight,
                n
            },
            from2dTo3d: function(e, t, i, n) {
                var r = new a.Vector2;
                r.x = e.x,
                r.y = e.y,
                i.setFromCamera(r, t),
                n.visible = !0;
                var o = i.intersectObject(n, !1);
                return n.visible = !1,
                log(o),
                o.length > 0 ? o[0].point : void 0
            },
            getVisibleRegion: function(e, t, i) {
                var n = e.fov * Math.PI / 180
                  , r = 2 * Math.tan(n / 2) * 300
                  , a = t / i
                  , o = r * a;
                return l.w = o,
                l.h = r,
                l
            }
        };
        t.exports = c
    }
    , {
        App: 23,
        three: 16
    }],
    53: [function(e, t, i) {
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        }),
        i.default = function(e) {
            var t = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
            return t ? "s3tc" : ""
        }
    }
    , {}],
    54: [function(e, t) {
        var i = {
            animationIterationCount: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridRow: !0,
            gridColumn: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            stopOpacity: !0,
            strokeDashoffset: !0,
            strokeOpacity: !0,
            strokeWidth: !0
        };
        t.exports = function(e, t) {
            return "number" != typeof t || i[e] ? t : t + "px"
        }
    }
    , {}],
    55: [function(e, t) {
        function i(e, t, i) {
            var n = l[t];
            if ("undefined" == typeof n && (n = r(t)),
            n) {
                if (void 0 === i)
                    return e.style[n];
                e.style[n] = c(n, i)
            }
        }
        function n(e, t) {
            for (var n in t)
                t.hasOwnProperty(n) && i(e, n, t[n])
        }
        function r(e) {
            var t = s(e)
              , i = o(t);
            return l[t] = l[e] = l[i] = i,
            i
        }
        function a() {
            2 === arguments.length ? "string" == typeof arguments[1] ? arguments[0].style.cssText = arguments[1] : n(arguments[0], arguments[1]) : i(arguments[0], arguments[1], arguments[2])
        }
        var o = e("prefix-style")
          , s = e("to-camel-case")
          , l = {
            "float": "cssFloat"
        }
          , c = e("add-px-to-style");
        t.exports = a,
        t.exports.set = a,
        t.exports.get = function(e, t) {
            return Array.isArray(t) ? t.reduce(function(t, n) {
                return t[n] = i(e, n || ""),
                t
            }, {}) : i(e, t || "")
        }
    }
    , {
        "add-px-to-style": 54,
        "prefix-style": 56,
        "to-camel-case": 57
    }],
    56: [function(e, t) {
        var i = null
          , n = ["Webkit", "Moz", "O", "ms"];
        t.exports = function(e) {
            i || (i = document.createElement("div"));
            var t = i.style;
            if (e in t)
                return e;
            for (var r = e.charAt(0).toUpperCase() + e.slice(1), a = n.length; a >= 0; a--) {
                var o = n[a] + r;
                if (o in t)
                    return o
            }
            return !1
        }
    }
    , {}],
    57: [function(e, t) {
        function i(e) {
            return n(e).replace(/\s(\w)/g, function(e, t) {
                return t.toUpperCase()
            })
        }
        var n = e("to-space-case");
        t.exports = i
    }
    , {
        "to-space-case": 59
    }],
    58: [function(e, t) {
        function i(e) {
            return a.test(e) ? e.toLowerCase() : o.test(e) ? (n(e) || e).toLowerCase() : s.test(e) ? r(e).toLowerCase() : e.toLowerCase()
        }
        function n(e) {
            return e.replace(l, function(e, t) {
                return t ? " " + t : ""
            })
        }
        function r(e) {
            return e.replace(c, function(e, t, i) {
                return t + " " + i.toLowerCase().split("").join(" ")
            })
        }
        t.exports = i;
        var a = /\s/
          , o = /(_|-|\.|:)/
          , s = /([a-z][A-Z]|[A-Z][a-z])/
          , l = /[\W_]+(.|$)/g
          , c = /(.)([A-Z]+)/g
    }
    , {}],
    59: [function(e, t) {
        function i(e) {
            return n(e).replace(/[\W_]+(.|$)/g, function(e, t) {
                return t ? " " + t : ""
            }).trim()
        }
        var n = e("to-no-case");
        t.exports = i
    }
    , {
        "to-no-case": 58
    }]
}, {}, [1]);
